nohup: ignoring input
config files: ['configs/Kinetics/TemporalCLIP_vitb16_8x16_STAdapter_SSV2.yaml']
[12/16 17:35:40][INFO] test_net.py:  319: Test with config:
[12/16 17:35:40][INFO] test_net.py:  320: AUG:
  AA_TYPE: rand-m7-n4-mstd0.5-inc1
  COLOR_JITTER: 0.4
  ENABLE: False
  GEN_MASK_LOADER: False
  INTERPOLATION: bicubic
  MASK_FRAMES: False
  MASK_RATIO: 0.0
  MASK_TUBE: False
  MASK_WINDOW_SIZE: [8, 7, 7]
  MAX_MASK_PATCHES_PER_BLOCK: None
  NUM_SAMPLE: 2
  RE_COUNT: 1
  RE_MODE: pixel
  RE_PROB: 0.25
  RE_SPLIT: False
AVA:
  ANNOTATION_DIR: /mnt/vol/gfsai-flash3-east/ai-group/users/haoqifan/ava/frame_list/
  BGR: False
  DETECTION_SCORE_THRESH: 0.9
  EXCLUSION_FILE: ava_val_excluded_timestamps_v2.2.csv
  FRAME_DIR: /mnt/fair-flash3-east/ava_trainval_frames.img/
  FRAME_LIST_DIR: /mnt/vol/gfsai-flash3-east/ai-group/users/haoqifan/ava/frame_list/
  FULL_TEST_ON_VAL: False
  GROUNDTRUTH_FILE: ava_val_v2.2.csv
  IMG_PROC_BACKEND: cv2
  LABEL_MAP_FILE: ava_action_list_v2.2_for_activitynet_2019.pbtxt
  TEST_FORCE_FLIP: False
  TEST_LISTS: ['val.csv']
  TEST_PREDICT_BOX_LISTS: ['ava_val_predicted_boxes.csv']
  TRAIN_GT_BOX_LISTS: ['ava_train_v2.2.csv']
  TRAIN_LISTS: ['train_all.csv']
  TRAIN_PCA_JITTER_ONLY: True
  TRAIN_PREDICT_BOX_LISTS: []
  TRAIN_USE_COLOR_AUGMENTATION: False
BENCHMARK:
  LOG_PERIOD: 100
  NUM_EPOCHS: 5
  SHUFFLE: True
BN:
  GLOBAL_SYNC: False
  NORM_TYPE: batchnorm
  NUM_BATCHES_PRECISE: 200
  NUM_SPLITS: 1
  NUM_SYNC_DEVICES: 1
  USE_PRECISE_STATS: False
  WEIGHT_DECAY: 0.0
CONTRASTIVE:
  BN_MLP: False
  BN_SYNC_MLP: False
  DELTA_CLIPS_MAX: inf
  DELTA_CLIPS_MIN: -inf
  DIM: 128
  INTERP_MEMORY: False
  KNN_ON: True
  LENGTH: 239975
  LOCAL_SHUFFLE_BN: True
  MEM_TYPE: 1d
  MLP_DIM: 2048
  MOCO_MULTI_VIEW_QUEUE: False
  MOMENTUM: 0.5
  MOMENTUM_ANNEALING: False
  NUM_CLASSES_DOWNSTREAM: 400
  NUM_MLP_LAYERS: 1
  PREDICTOR_DEPTHS: []
  QUEUE_LEN: 65536
  SEQUENTIAL: False
  SIMCLR_DIST_ON: True
  SWAV_QEUE_LEN: 0
  T: 0.07
  TYPE: mem
DATA:
  COLOR_RND_GRAYSCALE: 0.0
  DECODING_BACKEND: pyav
  DECODING_SHORT_SIZE: 256
  DUMMY_LOAD: False
  ENSEMBLE_METHOD: sum
  IN22K_TRAINVAL: False
  IN22k_VAL_IN1K: 
  INDEX_LABEL_MAPPING_FILE: /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2/train_rephrased.json
  INPUT_CHANNEL_NUM: [3]
  INV_UNIFORM_SAMPLE: False
  IN_VAL_CROP_RATIO: 0.875
  LOADER_CHUNK_OVERALL_SIZE: 0
  LOADER_CHUNK_SIZE: 0
  MEAN: [0.48145466, 0.4578275, 0.40821073]
  MULTI_LABEL: False
  NUM_FRAMES: 8
  PATH_LABEL_SEPARATOR: ,
  PATH_PREFIX: /mnt/SSD8T/home/huangwei/projects/FROSTER/data/ssv2/videos
  PATH_TO_DATA_DIR: /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2
  PATH_TO_PRELOAD_IMDB: 
  RANDOM_FLIP: True
  REVERSE_INPUT_CHANNEL: False
  SAMPLING_RATE: 16
  SKIP_ROWS: 0
  SSL_BLUR_SIGMA_MAX: [0.0, 2.0]
  SSL_BLUR_SIGMA_MIN: [0.0, 0.1]
  SSL_COLOR_BRI_CON_SAT: [0.4, 0.4, 0.4]
  SSL_COLOR_HUE: 0.1
  SSL_COLOR_JITTER: False
  SSL_MOCOV2_AUG: False
  STD: [0.26862954, 0.26130258, 0.27577711]
  TARGET_FPS: 30
  TEST_CROP_SIZE: 224
  TIME_DIFF_PROB: 0.0
  TRAIN_CROP_NUM_SPATIAL: 1
  TRAIN_CROP_NUM_TEMPORAL: 1
  TRAIN_CROP_SIZE: 224
  TRAIN_JITTER_ASPECT_RELATIVE: []
  TRAIN_JITTER_FPS: 0.0
  TRAIN_JITTER_MOTION_SHIFT: False
  TRAIN_JITTER_SCALES: [224, 256]
  TRAIN_JITTER_SCALES_RELATIVE: []
  TRAIN_PCA_EIGVAL: [0.225, 0.224, 0.229]
  TRAIN_PCA_EIGVEC: [[-0.5675, 0.7192, 0.4009], [-0.5808, -0.0045, -0.814], [-0.5836, -0.6948, 0.4203]]
  USE_OFFSET_SAMPLING: True
DATA_LOADER:
  ENABLE_MULTI_THREAD_DECODE: False
  NUM_WORKERS: 4
  PIN_MEMORY: True
DEMO:
  BUFFER_SIZE: 0
  CLIP_VIS_SIZE: 10
  COMMON_CLASS_NAMES: ['watch (a person)', 'talk to (e.g., self, a person, a group)', 'listen to (a person)', 'touch (an object)', 'carry/hold (an object)', 'walk', 'sit', 'lie/sleep', 'bend/bow (at the waist)']
  COMMON_CLASS_THRES: 0.7
  DETECTRON2_CFG: COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml
  DETECTRON2_THRESH: 0.9
  DETECTRON2_WEIGHTS: detectron2://COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl
  DISPLAY_HEIGHT: 0
  DISPLAY_WIDTH: 0
  ENABLE: False
  FPS: 30
  GT_BOXES: 
  INPUT_FORMAT: BGR
  INPUT_VIDEO: 
  LABEL_FILE_PATH: 
  NUM_CLIPS_SKIP: 0
  NUM_VIS_INSTANCES: 2
  OUTPUT_FILE: 
  OUTPUT_FPS: -1
  PREDS_BOXES: 
  SLOWMO: 1
  STARTING_SECOND: 900
  THREAD_ENABLE: False
  UNCOMMON_CLASS_THRES: 0.3
  VIS_MODE: thres
  WEBCAM: -1
DETECTION:
  ALIGNED: True
  ENABLE: False
  ROI_XFORM_RESOLUTION: 7
  SPATIAL_SCALE_FACTOR: 16
DIST_BACKEND: nccl
IMAGENET_SIMPLELABEL_PATH: None
LOG_MODEL_INFO: True
LOG_PERIOD: 10
MASK:
  DECODER_DEPTH: 0
  DECODER_EMBED_DIM: 512
  DECODER_SEP_POS_EMBED: False
  DEC_KV_KERNEL: []
  DEC_KV_STRIDE: []
  ENABLE: False
  HEAD_TYPE: separate
  MAE_ON: False
  MAE_RND_MASK: False
  NORM_PRED_PIXEL: True
  PER_FRAME_MASKING: False
  PRED_HOG: False
  PRETRAIN_DEPTH: [15]
  SCALE_INIT_BY_DEPTH: False
  TIME_STRIDE_LOSS: True
MIXUP:
  ALPHA: 0.8
  CUTMIX_ALPHA: 1.0
  ENABLE: False
  LABEL_SMOOTH_VALUE: 0.1
  PROB: 1.0
  SWITCH_PROB: 0.5
MODEL:
  ACT_CHECKPOINT: False
  ADAPT_FINETUNE_FACTOR: 1.0
  ARCH: vitb16
  CLS_LOSS_RATIO: 1.0
  CONTEXT_LENGTH: 77
  DEFAULT_FINETUNE_FACTOR: 1.0
  DETACH_FINAL_FC: False
  DISTILLATION_RATIO: 2.0
  DROPCONNECT_RATE: 0.0
  DROPOUT_RATE: 0.5
  ENSEMBLE_PRED: False
  ENSEMBLE_RAWMODEL_RATIO: 0.0
  EXPERT_FINETUNE_FACTOR: 1.0
  EXPERT_INSERT_LAYERS: [10, 11]
  FC_INIT_STD: 0.01
  FINETUNE_FACTOR: 1.0
  FP16_ALLREDUCE: False
  FROZEN_BN: False
  HEAD_ACT: softmax
  KEEP_RAW_MODEL: False
  LOSS_FREQ_TYPE: mse
  LOSS_FUNC: cross_entropy
  MLP_FINETUNE_FACTOR: 1.0
  MODEL_NAME: TemporalClipVideo
  MULTI_PATHWAY_ARCH: ['slowfast']
  NUM_CLASSES: 87
  NUM_EXPERTS: 0
  PROMPT_NUM: 1
  RAW_MODEL_DISTILLATION: False
  RECORD_ROUTING: False
  ROUTING_FINETUNE_FACTOR: 1.0
  ROUTING_FREQUENCE_CONSTRAIN: 0.5
  ROUTING_FREQ_CONS_FACTOR: 1.0
  ROUTING_TYPE: patch-level
  SINGLE_PATHWAY_ARCH: ['2d', 'c2d', 'i3d', 'slow', 'x3d', 'mvit', 'maskmvit', 'vitb32', 'vitb16', 'vitl14']
  STATIC_GRAPH: False
  TEMPORAL_MODELING_TYPE: expand_temporal_view
  TEXT_PROMPT: False
  USE_CHECKPOINT: False
MULTIGRID:
  BN_BASE_SIZE: 8
  DEFAULT_B: 0
  DEFAULT_S: 0
  DEFAULT_T: 0
  EPOCH_FACTOR: 1.5
  EVAL_FREQ: 3
  LONG_CYCLE: False
  LONG_CYCLE_FACTORS: [(0.25, 0.7071067811865476), (0.5, 0.7071067811865476), (0.5, 1), (1, 1)]
  LONG_CYCLE_SAMPLING_RATE: 0
  SHORT_CYCLE: False
  SHORT_CYCLE_FACTORS: [0.5, 0.7071067811865476]
MVIT:
  CLS_EMBED_ON: True
  DEPTH: 16
  DIM_MUL: []
  DIM_MUL_IN_ATT: False
  DROPOUT_RATE: 0.0
  DROPPATH_RATE: 0.1
  EMBED_DIM: 96
  HEAD_INIT_SCALE: 1.0
  HEAD_MUL: []
  LAYER_SCALE_INIT_VALUE: 0.0
  MLP_RATIO: 4.0
  MODE: conv
  NORM: layernorm
  NORM_STEM: False
  NUM_HEADS: 1
  PATCH_2D: False
  PATCH_KERNEL: [3, 7, 7]
  PATCH_PADDING: [2, 4, 4]
  PATCH_STRIDE: [2, 4, 4]
  POOL_FIRST: False
  POOL_KVQ_KERNEL: None
  POOL_KV_STRIDE: []
  POOL_KV_STRIDE_ADAPTIVE: None
  POOL_Q_STRIDE: []
  QKV_BIAS: True
  REL_POS_SPATIAL: False
  REL_POS_TEMPORAL: False
  REL_POS_ZERO_INIT: False
  RESIDUAL_POOLING: False
  REV:
    BUFFER_LAYERS: []
    ENABLE: False
    PRE_Q_FUSION: avg
    RESPATH_FUSE: concat
    RES_PATH: conv
  SEPARATE_QKV: False
  SEP_POS_EMBED: False
  USE_ABS_POS: True
  USE_FIXED_SINCOS_POS: False
  USE_MEAN_POOLING: False
  ZERO_DECAY_POS_CLS: True
NONLOCAL:
  GROUP: [[1], [1], [1], [1]]
  INSTANTIATION: dot_product
  LOCATION: [[[]], [[]], [[]], [[]]]
  POOL: [[[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]]]
NUM_GPUS: 1
NUM_SHARDS: 1
OUTPUT_DIR: /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/testing
RESNET:
  DEPTH: 50
  INPLACE_RELU: True
  NUM_BLOCK_TEMP_KERNEL: [[3], [4], [6], [3]]
  NUM_GROUPS: 1
  SPATIAL_DILATIONS: [[1], [1], [1], [1]]
  SPATIAL_STRIDES: [[1], [2], [2], [2]]
  STRIDE_1X1: False
  TRANS_FUNC: bottleneck_transform
  WIDTH_PER_GROUP: 64
  ZERO_INIT_FINAL_BN: False
  ZERO_INIT_FINAL_CONV: False
RNG_SEED: 0
SHARD_ID: 0
SLOWFAST:
  ALPHA: 8
  BETA_INV: 8
  FUSION_CONV_CHANNEL_RATIO: 2
  FUSION_KERNEL_SZ: 5
SOLVER:
  BASE_LR: 3.33e-06
  BASE_LR_SCALE_NUM_SHARDS: True
  BETAS: (0.9, 0.999)
  CLIP_GRAD_L2NORM: 1.0
  CLIP_GRAD_VAL: None
  COSINE_AFTER_WARMUP: True
  COSINE_END_LR: 1e-07
  COSINE_RESTART_EPOCH: 0
  DAMPENING: 0.0
  GAMMA: 0.1
  LARS_ON: False
  LAYER_DECAY: 1.0
  LRS: []
  LR_POLICY: cosine
  MAX_EPOCH: 22
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZING_METHOD: adamw
  STEPS: []
  STEP_SIZE: 1
  WARMUP_EPOCHS: 2.0
  WARMUP_FACTOR: 0.1
  WARMUP_START_LR: 1e-07
  WEIGHT_DECAY: 0.01
  ZERO_WD_1D_PARAM: True
TASK: 
TENSORBOARD:
  CATEGORIES_PATH: 
  CLASS_NAMES_PATH: 
  CONFUSION_MATRIX:
    ENABLE: False
    FIGSIZE: [8, 8]
    SUBSET_PATH: 
  ENABLE: False
  HISTOGRAM:
    ENABLE: False
    FIGSIZE: [8, 8]
    SUBSET_PATH: 
    TOPK: 10
  LOG_DIR: 
  MODEL_VIS:
    ACTIVATIONS: False
    COLORMAP: Pastel2
    ENABLE: False
    GRAD_CAM:
      COLORMAP: viridis
      ENABLE: True
      LAYER_LIST: []
      USE_TRUE_LABEL: False
    INPUT_VIDEO: False
    LAYER_LIST: []
    MODEL_WEIGHTS: False
    TOPK_PREDS: 1
  PREDICTIONS_PATH: 
  WRONG_PRED_VIS:
    ENABLE: False
    SUBSET_PATH: 
    TAG: Incorrectly classified videos.
TEST:
  BATCH_SIZE: 90
  CHECKPOINT_FILE_PATH: 
  CHECKPOINT_TYPE: pytorch
  CLIP_ORI_PATH: /mnt/SSD8T/home/huangwei/.cache/clip/ViT-B-16.pt
  CUSTOM_LOAD: True
  CUSTOM_LOAD_FILE: /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/checkpoints/checkpoint_epoch_00012.pyth
  DATASET: kinetics
  ENABLE: True
  NUM_ENSEMBLE_VIEWS: 3
  NUM_SPATIAL_CROPS: 1
  NUM_TEMPORAL_CLIPS: [3]
  OPENSET: False
  PATCHING_MODEL: False
  PATCHING_RATIO: 0.5
  SAVE_RESULTS_PATH: temp.pyth
  UPDATE_STATE: False
TEST_FILE: val.csv
TRAIN:
  ADAPT_ZS_CONS_RATIO: False
  AUTO_RESUME: True
  BATCH_SIZE: 64
  CHECKPOINT_CLEAR_NAME_PATTERN: ()
  CHECKPOINT_EPOCH_RESET: False
  CHECKPOINT_FILE_PATH: 
  CHECKPOINT_INFLATE: False
  CHECKPOINT_IN_INIT: False
  CHECKPOINT_PERIOD: 5
  CHECKPOINT_TYPE: pytorch
  CLIP_ORI_PATH: None
  CUSTOM_LOAD: False
  CUSTOM_LOAD_FILE: None
  DATASET: kinetics
  ENABLE: False
  EVAL_PERIOD: 5
  EWC_CONSTRAIN_RATIO: 1.0
  EWC_IDENTITY_FISHER: False
  EWC_IGNORE_LOGIT_SCALE: False
  EWC_LOAD_FILE: None
  EWC_SET: False
  KILL_LOSS_EXPLOSION_FACTOR: 0.0
  LINEAR_CONNECT_CLIMB: False
  LINEAR_CONNECT_LOSS_RATIO: 1.0
  LINEAR_CONNECT_SAMPLE: True
  LINEAR_CONNECT_SAMPLE_L: 0.4
  LINEAR_CONNECT_SAMPLE_R: 0.6
  MIXED_PRECISION: False
  ZS_CONS: False
  ZS_CONS_RATIO: 0.8
  ZS_INIT_CONS: False
  ZS_RESTART_CONS: False
  ZS_RESTART_EPOCH: -1
TRAIN_FILE: train.csv
TUNE_HEAD: False
VAL_FILE: val.csv
VAL_MODE: False
VIS_MASK:
  ENABLE: False
X3D:
  BN_LIN5: False
  BOTTLENECK_FACTOR: 1.0
  CHANNELWISE_3x3x3: True
  DEPTH_FACTOR: 1.0
  DIM_C1: 12
  DIM_C5: 2048
  SCALE_RES2: False
  WIDTH_FACTOR: 1.0
[12/16 17:35:43][INFO] temporalclip_video_model.py:  657: load pretrained CLIP:<All keys matched successfully>
[12/16 17:35:47][INFO] test_net.py:  333: Loading custom network weights from /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/checkpoints/checkpoint_epoch_00012.pyth.
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.positional_embedding
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.text_projection
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.logit_scale
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.class_embedding
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.positional_embedding
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.proj
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.conv1.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.ln_pre.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.ln_pre.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.in_proj_weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.in_proj_bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.out_proj.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.out_proj.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_1.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_1.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_fc.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_fc.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_proj.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_proj.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_2.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_2.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.in_proj_weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.in_proj_bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.out_proj.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.out_proj.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_1.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_1.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_fc.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_fc.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_proj.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_proj.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_2.weight
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_2.bias
[12/16 17:35:47][INFO] test_net.py:  404: missing parameters
[12/16 17:35:47][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.ln_post.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.visual.ln_post.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.in_proj_weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.in_proj_bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.out_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.out_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_1.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_1.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_fc.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_fc.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_proj.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_proj.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_2.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_2.bias
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.token_embedding.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.ln_final.weight
[12/16 17:35:48][INFO] test_net.py:  404: missing parameters
[12/16 17:35:48][INFO] test_net.py:  405: raw_model.ln_final.bias
[12/16 17:35:48][INFO] misc.py:  185: Model:
TemporalClipVideo(
  (model): WCLIP(
    (visual): TemporalVisionTransformer(
      (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
      (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (transformer): TSTransformer(
        (resblocks): Sequential(
          (0): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (token_embedding): Embedding(49408, 512)
    (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (projector_v): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
  (projector_t): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
)
[12/16 17:35:48][INFO] misc.py:  187: Params: 150,669,313
[12/16 17:35:48][INFO] misc.py:  188: Mem: 0.7674283981323242 MB
[12/16 17:35:48][INFO] misc.py:  197: nvidia-smi
Mon Dec 16 17:35:48 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 525.125.06   Driver Version: 525.125.06   CUDA Version: 12.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0 Off |                  Off |
| 42%   21C    P8    29W / 450W |  19822MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA GeForce ...  Off  | 00000000:23:00.0 Off |                  Off |
| 41%   22C    P8    20W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA GeForce ...  Off  | 00000000:41:00.0 Off |                  Off |
| 41%   22C    P8    23W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA GeForce ...  Off  | 00000000:61:00.0 Off |                  Off |
| 40%   22C    P8    19W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   4  NVIDIA GeForce ...  Off  | 00000000:81:00.0 Off |                  Off |
| 42%   53C    P2   372W / 450W |  22092MiB / 24564MiB |    100%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   5  NVIDIA GeForce ...  Off  | 00000000:A1:00.0 Off |                  Off |
| 41%   24C    P2    67W / 450W |   2918MiB / 24564MiB |      5%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   6  NVIDIA GeForce ...  Off  | 00000000:C1:00.0 Off |                  Off |
| 42%   22C    P8    14W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   7  NVIDIA GeForce ...  Off  | 00000000:E1:00.0 Off |                  Off |
| 39%   21C    P8    19W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    0   N/A  N/A   1101568      C   ...3/envs/realnet/bin/python    19814MiB |
|    1   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    2   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    3   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A   1291326      C   python                          22080MiB |
|    5   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    5   N/A  N/A   1331588      C   python                           2910MiB |
|    6   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    7   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
+-----------------------------------------------------------------------------+
[12/16 17:35:48][INFO] misc.py:  185: Model:
TemporalClipVideo(
  (model): WCLIP(
    (visual): TemporalVisionTransformer(
      (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
      (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (transformer): TSTransformer(
        (resblocks): Sequential(
          (0): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (token_embedding): Embedding(49408, 512)
    (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (projector_v): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
  (projector_t): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
)
[12/16 17:35:48][INFO] misc.py:  187: Params: 150,669,313
[12/16 17:35:48][INFO] misc.py:  188: Mem: 0.7674283981323242 MB
[12/16 17:35:48][INFO] misc.py:  197: nvidia-smi
Mon Dec 16 17:35:48 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 525.125.06   Driver Version: 525.125.06   CUDA Version: 12.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0 Off |                  Off |
| 42%   21C    P8    29W / 450W |  19822MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA GeForce ...  Off  | 00000000:23:00.0 Off |                  Off |
| 41%   22C    P8    20W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA GeForce ...  Off  | 00000000:41:00.0 Off |                  Off |
| 41%   22C    P8    23W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA GeForce ...  Off  | 00000000:61:00.0 Off |                  Off |
| 40%   22C    P8    19W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   4  NVIDIA GeForce ...  Off  | 00000000:81:00.0 Off |                  Off |
| 42%   55C    P2   355W / 450W |  22092MiB / 24564MiB |    100%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   5  NVIDIA GeForce ...  Off  | 00000000:A1:00.0 Off |                  Off |
| 41%   24C    P2    60W / 450W |   2918MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   6  NVIDIA GeForce ...  Off  | 00000000:C1:00.0 Off |                  Off |
| 42%   22C    P8    14W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   7  NVIDIA GeForce ...  Off  | 00000000:E1:00.0 Off |                  Off |
| 39%   21C    P8    20W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    0   N/A  N/A   1101568      C   ...3/envs/realnet/bin/python    19814MiB |
|    1   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    2   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    3   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A   1291326      C   python                          22080MiB |
|    5   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    5   N/A  N/A   1331588      C   python                           2910MiB |
|    6   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    7   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
+-----------------------------------------------------------------------------+
[12/16 17:35:49][INFO] kinetics.py:   94: Constructing Kinetics test...
path: ---------------------------- /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2/val.csv
[12/16 17:35:49][INFO] kinetics.py:  172: Constructing kinetics dataloader (size: 52686 skip_rows 0) from /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2/val.csv 
[12/16 17:35:49][INFO] test_net.py:  434: Testing model for 586 iterations
exponential temporal pooling in test
alpha:0.25
[12/16 17:36:33][INFO] logging.py:   99: json_stats: {"cur_iter": "1", "eta": "6:07:34", "split": "test_iter", "time_diff": 37.63571939}
exponential temporal pooling in test
alpha:0.25
[12/16 17:36:34][INFO] logging.py:   99: json_stats: {"cur_iter": "2", "eta": "0:16:27", "split": "test_iter", "time_diff": 1.68750548}
exponential temporal pooling in test
alpha:0.25
[12/16 17:36:36][INFO] logging.py:   99: json_stats: {"cur_iter": "3", "eta": "0:16:25", "split": "test_iter", "time_diff": 1.68808022}
exponential temporal pooling in test
alpha:0.25
[12/16 17:36:38][INFO] logging.py:   99: json_stats: {"cur_iter": "4", "eta": "0:16:23", "split": "test_iter", "time_diff": 1.68646506}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:02][INFO] logging.py:   99: json_stats: {"cur_iter": "5", "eta": "3:56:10", "split": "test_iter", "time_diff": 24.34856222}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:04][INFO] logging.py:   99: json_stats: {"cur_iter": "6", "eta": "0:16:21", "split": "test_iter", "time_diff": 1.68917084}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:05][INFO] logging.py:   99: json_stats: {"cur_iter": "7", "eta": "0:16:18", "split": "test_iter", "time_diff": 1.68627726}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:07][INFO] logging.py:   99: json_stats: {"cur_iter": "8", "eta": "0:16:18", "split": "test_iter", "time_diff": 1.69058972}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:33][INFO] logging.py:   99: json_stats: {"cur_iter": "9", "eta": "4:05:19", "split": "test_iter", "time_diff": 25.46666066}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:34][INFO] logging.py:   99: json_stats: {"cur_iter": "10", "eta": "0:16:15", "split": "test_iter", "time_diff": 1.69015663}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:36][INFO] logging.py:   99: json_stats: {"cur_iter": "11", "eta": "0:16:11", "split": "test_iter", "time_diff": 1.68648437}
exponential temporal pooling in test
alpha:0.25
[12/16 17:37:38][INFO] logging.py:   99: json_stats: {"cur_iter": "12", "eta": "0:16:11", "split": "test_iter", "time_diff": 1.68878226}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:04][INFO] logging.py:   99: json_stats: {"cur_iter": "13", "eta": "4:14:56", "split": "test_iter", "time_diff": 26.64835787}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:06][INFO] logging.py:   99: json_stats: {"cur_iter": "14", "eta": "0:16:08", "split": "test_iter", "time_diff": 1.69083716}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:08][INFO] logging.py:   99: json_stats: {"cur_iter": "15", "eta": "0:16:06", "split": "test_iter", "time_diff": 1.68922860}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:09][INFO] logging.py:   99: json_stats: {"cur_iter": "16", "eta": "0:16:03", "split": "test_iter", "time_diff": 1.68780338}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:35][INFO] logging.py:   99: json_stats: {"cur_iter": "17", "eta": "4:06:22", "split": "test_iter", "time_diff": 25.93465375}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:37][INFO] logging.py:   99: json_stats: {"cur_iter": "18", "eta": "0:16:01", "split": "test_iter", "time_diff": 1.69067124}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:39][INFO] logging.py:   99: json_stats: {"cur_iter": "19", "eta": "0:16:00", "split": "test_iter", "time_diff": 1.69074795}
exponential temporal pooling in test
alpha:0.25
[12/16 17:38:40][INFO] logging.py:   99: json_stats: {"cur_iter": "20", "eta": "0:15:58", "split": "test_iter", "time_diff": 1.68987614}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:05][INFO] logging.py:   99: json_stats: {"cur_iter": "21", "eta": "3:52:06", "split": "test_iter", "time_diff": 24.60590281}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:07][INFO] logging.py:   99: json_stats: {"cur_iter": "22", "eta": "0:15:55", "split": "test_iter", "time_diff": 1.69039316}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:08][INFO] logging.py:   99: json_stats: {"cur_iter": "23", "eta": "0:15:52", "split": "test_iter", "time_diff": 1.68807429}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:10][INFO] logging.py:   99: json_stats: {"cur_iter": "24", "eta": "0:15:51", "split": "test_iter", "time_diff": 1.69000789}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:37][INFO] logging.py:   99: json_stats: {"cur_iter": "25", "eta": "4:08:27", "split": "test_iter", "time_diff": 26.52660665}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:38][INFO] logging.py:   99: json_stats: {"cur_iter": "26", "eta": "0:15:47", "split": "test_iter", "time_diff": 1.68917312}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:40][INFO] logging.py:   99: json_stats: {"cur_iter": "27", "eta": "0:15:46", "split": "test_iter", "time_diff": 1.68946979}
exponential temporal pooling in test
alpha:0.25
[12/16 17:39:42][INFO] logging.py:   99: json_stats: {"cur_iter": "28", "eta": "0:15:45", "split": "test_iter", "time_diff": 1.69171141}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:08][INFO] logging.py:   99: json_stats: {"cur_iter": "29", "eta": "4:00:06", "split": "test_iter", "time_diff": 25.81871734}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:09][INFO] logging.py:   99: json_stats: {"cur_iter": "30", "eta": "0:15:42", "split": "test_iter", "time_diff": 1.69287540}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:11][INFO] logging.py:   99: json_stats: {"cur_iter": "31", "eta": "0:15:39", "split": "test_iter", "time_diff": 1.69037274}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:13][INFO] logging.py:   99: json_stats: {"cur_iter": "32", "eta": "0:15:40", "split": "test_iter", "time_diff": 1.69453059}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:37][INFO] logging.py:   99: json_stats: {"cur_iter": "33", "eta": "3:45:21", "split": "test_iter", "time_diff": 24.40656516}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:39][INFO] logging.py:   99: json_stats: {"cur_iter": "34", "eta": "0:15:34", "split": "test_iter", "time_diff": 1.68958356}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:40][INFO] logging.py:   99: json_stats: {"cur_iter": "35", "eta": "0:15:31", "split": "test_iter", "time_diff": 1.68677547}
exponential temporal pooling in test
alpha:0.25
[12/16 17:40:42][INFO] logging.py:   99: json_stats: {"cur_iter": "36", "eta": "0:15:34", "split": "test_iter", "time_diff": 1.69586565}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:09][INFO] logging.py:   99: json_stats: {"cur_iter": "37", "eta": "4:03:02", "split": "test_iter", "time_diff": 26.51423046}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:10][INFO] logging.py:   99: json_stats: {"cur_iter": "38", "eta": "0:15:30", "split": "test_iter", "time_diff": 1.69417298}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:12][INFO] logging.py:   99: json_stats: {"cur_iter": "39", "eta": "0:15:26", "split": "test_iter", "time_diff": 1.68987816}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:14][INFO] logging.py:   99: json_stats: {"cur_iter": "40", "eta": "0:15:27", "split": "test_iter", "time_diff": 1.69489678}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:39][INFO] logging.py:   99: json_stats: {"cur_iter": "41", "eta": "3:50:04", "split": "test_iter", "time_diff": 25.28252589}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:41][INFO] logging.py:   99: json_stats: {"cur_iter": "42", "eta": "0:15:22", "split": "test_iter", "time_diff": 1.69285311}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:42][INFO] logging.py:   99: json_stats: {"cur_iter": "43", "eta": "0:15:25", "split": "test_iter", "time_diff": 1.70171822}
exponential temporal pooling in test
alpha:0.25
[12/16 17:41:44][INFO] logging.py:   99: json_stats: {"cur_iter": "44", "eta": "0:15:20", "split": "test_iter", "time_diff": 1.69507893}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:10][INFO] logging.py:   99: json_stats: {"cur_iter": "45", "eta": "3:54:43", "split": "test_iter", "time_diff": 25.98444213}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:12][INFO] logging.py:   99: json_stats: {"cur_iter": "46", "eta": "0:15:45", "split": "test_iter", "time_diff": 1.74797416}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:14][INFO] logging.py:   99: json_stats: {"cur_iter": "47", "eta": "0:15:18", "split": "test_iter", "time_diff": 1.70017038}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:15][INFO] logging.py:   99: json_stats: {"cur_iter": "48", "eta": "0:15:12", "split": "test_iter", "time_diff": 1.69249573}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:40][INFO] logging.py:   99: json_stats: {"cur_iter": "49", "eta": "3:44:54", "split": "test_iter", "time_diff": 25.08226949}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:42][INFO] logging.py:   99: json_stats: {"cur_iter": "50", "eta": "0:15:10", "split": "test_iter", "time_diff": 1.69596384}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:44][INFO] logging.py:   99: json_stats: {"cur_iter": "51", "eta": "0:15:06", "split": "test_iter", "time_diff": 1.69208813}
exponential temporal pooling in test
alpha:0.25
[12/16 17:42:45][INFO] logging.py:   99: json_stats: {"cur_iter": "52", "eta": "0:15:06", "split": "test_iter", "time_diff": 1.69511731}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:12][INFO] logging.py:   99: json_stats: {"cur_iter": "53", "eta": "3:52:19", "split": "test_iter", "time_diff": 26.10443037}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:13][INFO] logging.py:   99: json_stats: {"cur_iter": "54", "eta": "0:15:29", "split": "test_iter", "time_diff": 1.74436433}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:15][INFO] logging.py:   99: json_stats: {"cur_iter": "55", "eta": "0:15:04", "split": "test_iter", "time_diff": 1.70052681}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:17][INFO] logging.py:   99: json_stats: {"cur_iter": "56", "eta": "0:14:58", "split": "test_iter", "time_diff": 1.69180518}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:41][INFO] logging.py:   99: json_stats: {"cur_iter": "57", "eta": "3:31:04", "split": "test_iter", "time_diff": 23.89560862}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:42][INFO] logging.py:   99: json_stats: {"cur_iter": "58", "eta": "0:15:00", "split": "test_iter", "time_diff": 1.70181164}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:46][INFO] logging.py:   99: json_stats: {"cur_iter": "59", "eta": "0:36:20", "split": "test_iter", "time_diff": 4.13040869}
exponential temporal pooling in test
alpha:0.25
[12/16 17:43:48][INFO] logging.py:   99: json_stats: {"cur_iter": "60", "eta": "0:14:52", "split": "test_iter", "time_diff": 1.69413509}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:12][INFO] logging.py:   99: json_stats: {"cur_iter": "61", "eta": "3:27:10", "split": "test_iter", "time_diff": 23.63137057}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:13][INFO] logging.py:   99: json_stats: {"cur_iter": "62", "eta": "0:14:49", "split": "test_iter", "time_diff": 1.69375322}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:17][INFO] logging.py:   99: json_stats: {"cur_iter": "63", "eta": "0:26:46", "split": "test_iter", "time_diff": 3.06606674}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:18][INFO] logging.py:   99: json_stats: {"cur_iter": "64", "eta": "0:14:45", "split": "test_iter", "time_diff": 1.69304720}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:43][INFO] logging.py:   99: json_stats: {"cur_iter": "65", "eta": "3:32:49", "split": "test_iter", "time_diff": 24.46290998}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:44][INFO] logging.py:   99: json_stats: {"cur_iter": "66", "eta": "0:14:41", "split": "test_iter", "time_diff": 1.69177336}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:47][INFO] logging.py:   99: json_stats: {"cur_iter": "67", "eta": "0:24:21", "split": "test_iter", "time_diff": 2.81122525}
exponential temporal pooling in test
alpha:0.25
[12/16 17:44:49][INFO] logging.py:   99: json_stats: {"cur_iter": "68", "eta": "0:14:42", "split": "test_iter", "time_diff": 1.70111669}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:13][INFO] logging.py:   99: json_stats: {"cur_iter": "69", "eta": "3:24:31", "split": "test_iter", "time_diff": 23.69084733}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:14][INFO] logging.py:   99: json_stats: {"cur_iter": "70", "eta": "0:14:35", "split": "test_iter", "time_diff": 1.69383409}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:16][INFO] logging.py:   99: json_stats: {"cur_iter": "71", "eta": "0:18:33", "split": "test_iter", "time_diff": 2.15776248}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:18][INFO] logging.py:   99: json_stats: {"cur_iter": "72", "eta": "0:14:33", "split": "test_iter", "time_diff": 1.69534879}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:43][INFO] logging.py:   99: json_stats: {"cur_iter": "73", "eta": "3:30:10", "split": "test_iter", "time_diff": 24.53405790}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:44][INFO] logging.py:   99: json_stats: {"cur_iter": "74", "eta": "0:14:27", "split": "test_iter", "time_diff": 1.69145290}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:50][INFO] logging.py:   99: json_stats: {"cur_iter": "75", "eta": "0:43:44", "split": "test_iter", "time_diff": 5.12694831}
exponential temporal pooling in test
alpha:0.25
[12/16 17:45:51][INFO] logging.py:   99: json_stats: {"cur_iter": "76", "eta": "0:14:23", "split": "test_iter", "time_diff": 1.68991919}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:14][INFO] logging.py:   99: json_stats: {"cur_iter": "77", "eta": "3:14:50", "split": "test_iter", "time_diff": 22.92323532}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:16][INFO] logging.py:   99: json_stats: {"cur_iter": "78", "eta": "0:14:25", "split": "test_iter", "time_diff": 1.70098608}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:19][INFO] logging.py:   99: json_stats: {"cur_iter": "79", "eta": "0:25:22", "split": "test_iter", "time_diff": 2.99626047}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:21][INFO] logging.py:   99: json_stats: {"cur_iter": "80", "eta": "0:14:17", "split": "test_iter", "time_diff": 1.69202913}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:49][INFO] logging.py:   99: json_stats: {"cur_iter": "81", "eta": "4:00:13", "split": "test_iter", "time_diff": 28.48500827}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:51][INFO] logging.py:   99: json_stats: {"cur_iter": "82", "eta": "0:14:14", "split": "test_iter", "time_diff": 1.69115274}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:52][INFO] logging.py:   99: json_stats: {"cur_iter": "83", "eta": "0:14:11", "split": "test_iter", "time_diff": 1.69045313}
exponential temporal pooling in test
alpha:0.25
[12/16 17:46:54][INFO] logging.py:   99: json_stats: {"cur_iter": "84", "eta": "0:14:10", "split": "test_iter", "time_diff": 1.69169095}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:18][INFO] logging.py:   99: json_stats: {"cur_iter": "85", "eta": "3:18:24", "split": "test_iter", "time_diff": 23.71393161}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:20][INFO] logging.py:   99: json_stats: {"cur_iter": "86", "eta": "0:14:07", "split": "test_iter", "time_diff": 1.69094957}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:21][INFO] logging.py:   99: json_stats: {"cur_iter": "87", "eta": "0:14:10", "split": "test_iter", "time_diff": 1.70186115}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:23][INFO] logging.py:   99: json_stats: {"cur_iter": "88", "eta": "0:14:03", "split": "test_iter", "time_diff": 1.69056150}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:49][INFO] logging.py:   99: json_stats: {"cur_iter": "89", "eta": "3:32:28", "split": "test_iter", "time_diff": 25.59896097}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:50][INFO] logging.py:   99: json_stats: {"cur_iter": "90", "eta": "0:14:01", "split": "test_iter", "time_diff": 1.69308967}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:52][INFO] logging.py:   99: json_stats: {"cur_iter": "91", "eta": "0:13:59", "split": "test_iter", "time_diff": 1.69214854}
exponential temporal pooling in test
alpha:0.25
[12/16 17:47:54][INFO] logging.py:   99: json_stats: {"cur_iter": "92", "eta": "0:13:57", "split": "test_iter", "time_diff": 1.69199119}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:19][INFO] logging.py:   99: json_stats: {"cur_iter": "93", "eta": "3:30:01", "split": "test_iter", "time_diff": 25.50824776}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:21][INFO] logging.py:   99: json_stats: {"cur_iter": "94", "eta": "0:13:52", "split": "test_iter", "time_diff": 1.68940173}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:23][INFO] logging.py:   99: json_stats: {"cur_iter": "95", "eta": "0:13:55", "split": "test_iter", "time_diff": 1.69837848}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:24][INFO] logging.py:   99: json_stats: {"cur_iter": "96", "eta": "0:13:51", "split": "test_iter", "time_diff": 1.69327799}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:49][INFO] logging.py:   99: json_stats: {"cur_iter": "97", "eta": "3:23:49", "split": "test_iter", "time_diff": 24.95771755}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:51][INFO] logging.py:   99: json_stats: {"cur_iter": "98", "eta": "0:13:45", "split": "test_iter", "time_diff": 1.68859799}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:53][INFO] logging.py:   99: json_stats: {"cur_iter": "99", "eta": "0:13:45", "split": "test_iter", "time_diff": 1.69172930}
exponential temporal pooling in test
alpha:0.25
[12/16 17:48:54][INFO] logging.py:   99: json_stats: {"cur_iter": "100", "eta": "0:13:49", "split": "test_iter", "time_diff": 1.70231848}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:19][INFO] logging.py:   99: json_stats: {"cur_iter": "101", "eta": "3:18:18", "split": "test_iter", "time_diff": 24.48297350}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:20][INFO] logging.py:   99: json_stats: {"cur_iter": "102", "eta": "0:13:39", "split": "test_iter", "time_diff": 1.69070179}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:22][INFO] logging.py:   99: json_stats: {"cur_iter": "103", "eta": "0:13:38", "split": "test_iter", "time_diff": 1.69081912}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:24][INFO] logging.py:   99: json_stats: {"cur_iter": "104", "eta": "0:13:38", "split": "test_iter", "time_diff": 1.69364495}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:50][INFO] logging.py:   99: json_stats: {"cur_iter": "105", "eta": "3:31:31", "split": "test_iter", "time_diff": 26.33125002}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:52][INFO] logging.py:   99: json_stats: {"cur_iter": "106", "eta": "0:13:32", "split": "test_iter", "time_diff": 1.68884677}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:54][INFO] logging.py:   99: json_stats: {"cur_iter": "107", "eta": "0:13:30", "split": "test_iter", "time_diff": 1.68896050}
exponential temporal pooling in test
alpha:0.25
[12/16 17:49:55][INFO] logging.py:   99: json_stats: {"cur_iter": "108", "eta": "0:13:31", "split": "test_iter", "time_diff": 1.69476699}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:21][INFO] logging.py:   99: json_stats: {"cur_iter": "109", "eta": "3:21:24", "split": "test_iter", "time_diff": 25.28130261}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:22][INFO] logging.py:   99: json_stats: {"cur_iter": "110", "eta": "0:13:28", "split": "test_iter", "time_diff": 1.69600559}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:24][INFO] logging.py:   99: json_stats: {"cur_iter": "111", "eta": "0:13:27", "split": "test_iter", "time_diff": 1.69605787}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:26][INFO] logging.py:   99: json_stats: {"cur_iter": "112", "eta": "0:13:25", "split": "test_iter", "time_diff": 1.69570329}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:50][INFO] logging.py:   99: json_stats: {"cur_iter": "113", "eta": "3:08:56", "split": "test_iter", "time_diff": 23.91575199}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:51][INFO] logging.py:   99: json_stats: {"cur_iter": "114", "eta": "0:13:19", "split": "test_iter", "time_diff": 1.68996358}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:55][INFO] logging.py:   99: json_stats: {"cur_iter": "115", "eta": "0:27:44", "split": "test_iter", "time_diff": 3.52623060}
exponential temporal pooling in test
alpha:0.25
[12/16 17:50:56][INFO] logging.py:   99: json_stats: {"cur_iter": "116", "eta": "0:13:16", "split": "test_iter", "time_diff": 1.69148172}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:19][INFO] logging.py:   99: json_stats: {"cur_iter": "117", "eta": "2:53:35", "split": "test_iter", "time_diff": 22.16003967}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:20][INFO] logging.py:   99: json_stats: {"cur_iter": "118", "eta": "0:13:16", "split": "test_iter", "time_diff": 1.69754548}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:25][INFO] logging.py:   99: json_stats: {"cur_iter": "119", "eta": "0:35:08", "split": "test_iter", "time_diff": 4.50466750}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:27][INFO] logging.py:   99: json_stats: {"cur_iter": "120", "eta": "0:13:13", "split": "test_iter", "time_diff": 1.69985462}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:49][INFO] logging.py:   99: json_stats: {"cur_iter": "121", "eta": "2:52:14", "split": "test_iter", "time_diff": 22.17677235}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:50][INFO] logging.py:   99: json_stats: {"cur_iter": "122", "eta": "0:13:06", "split": "test_iter", "time_diff": 1.69161472}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:54][INFO] logging.py:   99: json_stats: {"cur_iter": "123", "eta": "0:26:07", "split": "test_iter", "time_diff": 3.37899888}
exponential temporal pooling in test
alpha:0.25
[12/16 17:51:56][INFO] logging.py:   99: json_stats: {"cur_iter": "124", "eta": "0:13:02", "split": "test_iter", "time_diff": 1.69109218}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:20][INFO] logging.py:   99: json_stats: {"cur_iter": "125", "eta": "3:08:22", "split": "test_iter", "time_diff": 24.46326342}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:22][INFO] logging.py:   99: json_stats: {"cur_iter": "126", "eta": "0:13:02", "split": "test_iter", "time_diff": 1.69785114}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:25][INFO] logging.py:   99: json_stats: {"cur_iter": "127", "eta": "0:22:27", "split": "test_iter", "time_diff": 2.93016066}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:26][INFO] logging.py:   99: json_stats: {"cur_iter": "128", "eta": "0:13:00", "split": "test_iter", "time_diff": 1.70089311}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:50][INFO] logging.py:   99: json_stats: {"cur_iter": "129", "eta": "3:00:44", "split": "test_iter", "time_diff": 23.67893407}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:52][INFO] logging.py:   99: json_stats: {"cur_iter": "130", "eta": "0:12:55", "split": "test_iter", "time_diff": 1.69675559}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:56][INFO] logging.py:   99: json_stats: {"cur_iter": "131", "eta": "0:29:52", "split": "test_iter", "time_diff": 3.93201628}
exponential temporal pooling in test
alpha:0.25
[12/16 17:52:57][INFO] logging.py:   99: json_stats: {"cur_iter": "132", "eta": "0:12:54", "split": "test_iter", "time_diff": 1.70119873}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:21][INFO] logging.py:   99: json_stats: {"cur_iter": "133", "eta": "2:57:15", "split": "test_iter", "time_diff": 23.42691733}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:23][INFO] logging.py:   99: json_stats: {"cur_iter": "134", "eta": "0:18:02", "split": "test_iter", "time_diff": 2.38963010}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:26][INFO] logging.py:   99: json_stats: {"cur_iter": "135", "eta": "0:17:53", "split": "test_iter", "time_diff": 2.37506322}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:27][INFO] logging.py:   99: json_stats: {"cur_iter": "136", "eta": "0:12:44", "split": "test_iter", "time_diff": 1.69611322}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:53][INFO] logging.py:   99: json_stats: {"cur_iter": "137", "eta": "3:15:09", "split": "test_iter", "time_diff": 26.02177986}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:55][INFO] logging.py:   99: json_stats: {"cur_iter": "138", "eta": "0:12:43", "split": "test_iter", "time_diff": 1.70035949}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:57][INFO] logging.py:   99: json_stats: {"cur_iter": "139", "eta": "0:12:37", "split": "test_iter", "time_diff": 1.69094542}
exponential temporal pooling in test
alpha:0.25
[12/16 17:53:58][INFO] logging.py:   99: json_stats: {"cur_iter": "140", "eta": "0:12:40", "split": "test_iter", "time_diff": 1.70166543}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:24][INFO] logging.py:   99: json_stats: {"cur_iter": "141", "eta": "3:11:30", "split": "test_iter", "time_diff": 25.76276814}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:26][INFO] logging.py:   99: json_stats: {"cur_iter": "142", "eta": "0:12:32", "split": "test_iter", "time_diff": 1.69182693}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:28][INFO] logging.py:   99: json_stats: {"cur_iter": "143", "eta": "0:12:32", "split": "test_iter", "time_diff": 1.69485542}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:29][INFO] logging.py:   99: json_stats: {"cur_iter": "144", "eta": "0:12:29", "split": "test_iter", "time_diff": 1.69260728}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:55][INFO] logging.py:   99: json_stats: {"cur_iter": "145", "eta": "3:10:38", "split": "test_iter", "time_diff": 25.87914510}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:57][INFO] logging.py:   99: json_stats: {"cur_iter": "146", "eta": "0:12:26", "split": "test_iter", "time_diff": 1.69326063}
exponential temporal pooling in test
alpha:0.25
[12/16 17:54:58][INFO] logging.py:   99: json_stats: {"cur_iter": "147", "eta": "0:12:24", "split": "test_iter", "time_diff": 1.69092455}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:00][INFO] logging.py:   99: json_stats: {"cur_iter": "148", "eta": "0:12:24", "split": "test_iter", "time_diff": 1.69590492}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:25][INFO] logging.py:   99: json_stats: {"cur_iter": "149", "eta": "2:58:41", "split": "test_iter", "time_diff": 24.47886295}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:28][INFO] logging.py:   99: json_stats: {"cur_iter": "150", "eta": "0:27:05", "split": "test_iter", "time_diff": 3.71895880}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:30][INFO] logging.py:   99: json_stats: {"cur_iter": "151", "eta": "0:12:17", "split": "test_iter", "time_diff": 1.69094284}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:32][INFO] logging.py:   99: json_stats: {"cur_iter": "152", "eta": "0:12:17", "split": "test_iter", "time_diff": 1.69615716}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:53][INFO] logging.py:   99: json_stats: {"cur_iter": "153", "eta": "2:34:32", "split": "test_iter", "time_diff": 21.36518924}
exponential temporal pooling in test
alpha:0.25
[12/16 17:55:59][INFO] logging.py:   99: json_stats: {"cur_iter": "154", "eta": "0:43:09", "split": "test_iter", "time_diff": 5.98120691}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:01][INFO] logging.py:   99: json_stats: {"cur_iter": "155", "eta": "0:12:10", "split": "test_iter", "time_diff": 1.69008350}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:03][INFO] logging.py:   99: json_stats: {"cur_iter": "156", "eta": "0:12:12", "split": "test_iter", "time_diff": 1.69898286}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:23][INFO] logging.py:   99: json_stats: {"cur_iter": "157", "eta": "2:28:45", "split": "test_iter", "time_diff": 20.75759728}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:28][INFO] logging.py:   99: json_stats: {"cur_iter": "158", "eta": "0:36:55", "split": "test_iter", "time_diff": 5.16387744}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:30][INFO] logging.py:   99: json_stats: {"cur_iter": "159", "eta": "0:12:02", "split": "test_iter", "time_diff": 1.68766963}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:32][INFO] logging.py:   99: json_stats: {"cur_iter": "160", "eta": "0:12:03", "split": "test_iter", "time_diff": 1.69520477}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:52][INFO] logging.py:   99: json_stats: {"cur_iter": "161", "eta": "2:24:25", "split": "test_iter", "time_diff": 20.34171257}
exponential temporal pooling in test
alpha:0.25
[12/16 17:56:58][INFO] logging.py:   99: json_stats: {"cur_iter": "162", "eta": "0:40:06", "split": "test_iter", "time_diff": 5.66176841}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:00][INFO] logging.py:   99: json_stats: {"cur_iter": "163", "eta": "0:12:44", "split": "test_iter", "time_diff": 1.80368722}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:01][INFO] logging.py:   99: json_stats: {"cur_iter": "164", "eta": "0:11:56", "split": "test_iter", "time_diff": 1.69315680}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:24][INFO] logging.py:   99: json_stats: {"cur_iter": "165", "eta": "2:40:14", "split": "test_iter", "time_diff": 22.78282275}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:28][INFO] logging.py:   99: json_stats: {"cur_iter": "166", "eta": "0:24:16", "split": "test_iter", "time_diff": 3.46046550}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:30][INFO] logging.py:   99: json_stats: {"cur_iter": "167", "eta": "0:18:01", "split": "test_iter", "time_diff": 2.57470916}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:32][INFO] logging.py:   99: json_stats: {"cur_iter": "168", "eta": "0:11:49", "split": "test_iter", "time_diff": 1.69402942}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:56][INFO] logging.py:   99: json_stats: {"cur_iter": "169", "eta": "2:44:47", "split": "test_iter", "time_diff": 23.65473361}
exponential temporal pooling in test
alpha:0.25
[12/16 17:57:58][INFO] logging.py:   99: json_stats: {"cur_iter": "170", "eta": "0:15:24", "split": "test_iter", "time_diff": 2.21655895}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:02][INFO] logging.py:   99: json_stats: {"cur_iter": "171", "eta": "0:29:55", "split": "test_iter", "time_diff": 4.31620119}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:04][INFO] logging.py:   99: json_stats: {"cur_iter": "172", "eta": "0:11:43", "split": "test_iter", "time_diff": 1.69409971}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:27][INFO] logging.py:   99: json_stats: {"cur_iter": "173", "eta": "2:36:50", "split": "test_iter", "time_diff": 22.72954625}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:28][INFO] logging.py:   99: json_stats: {"cur_iter": "174", "eta": "0:11:41", "split": "test_iter", "time_diff": 1.69812254}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:31][INFO] logging.py:   99: json_stats: {"cur_iter": "175", "eta": "0:20:20", "split": "test_iter", "time_diff": 2.96169107}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:33][INFO] logging.py:   99: json_stats: {"cur_iter": "176", "eta": "0:11:37", "split": "test_iter", "time_diff": 1.69605377}
exponential temporal pooling in test
alpha:0.25
[12/16 17:58:58][INFO] logging.py:   99: json_stats: {"cur_iter": "177", "eta": "2:50:33", "split": "test_iter", "time_diff": 24.96063076}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:00][INFO] logging.py:   99: json_stats: {"cur_iter": "178", "eta": "0:11:53", "split": "test_iter", "time_diff": 1.74505996}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:01][INFO] logging.py:   99: json_stats: {"cur_iter": "179", "eta": "0:11:34", "split": "test_iter", "time_diff": 1.70252042}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:03][INFO] logging.py:   99: json_stats: {"cur_iter": "180", "eta": "0:11:32", "split": "test_iter", "time_diff": 1.70221987}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:28][INFO] logging.py:   99: json_stats: {"cur_iter": "181", "eta": "2:50:40", "split": "test_iter", "time_diff": 25.22280707}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:30][INFO] logging.py:   99: json_stats: {"cur_iter": "182", "eta": "0:11:24", "split": "test_iter", "time_diff": 1.68982438}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:32][INFO] logging.py:   99: json_stats: {"cur_iter": "183", "eta": "0:11:22", "split": "test_iter", "time_diff": 1.69038033}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:33][INFO] logging.py:   99: json_stats: {"cur_iter": "184", "eta": "0:11:24", "split": "test_iter", "time_diff": 1.69886865}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:57][INFO] logging.py:   99: json_stats: {"cur_iter": "185", "eta": "2:38:33", "split": "test_iter", "time_diff": 23.66508141}
exponential temporal pooling in test
alpha:0.25
[12/16 17:59:59][INFO] logging.py:   99: json_stats: {"cur_iter": "186", "eta": "0:11:17", "split": "test_iter", "time_diff": 1.68983376}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:01][INFO] logging.py:   99: json_stats: {"cur_iter": "187", "eta": "0:15:52", "split": "test_iter", "time_diff": 2.38236494}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:03][INFO] logging.py:   99: json_stats: {"cur_iter": "188", "eta": "0:11:15", "split": "test_iter", "time_diff": 1.69372527}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:28][INFO] logging.py:   99: json_stats: {"cur_iter": "189", "eta": "2:46:12", "split": "test_iter", "time_diff": 25.05751325}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:30][INFO] logging.py:   99: json_stats: {"cur_iter": "190", "eta": "0:11:13", "split": "test_iter", "time_diff": 1.69693303}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:31][INFO] logging.py:   99: json_stats: {"cur_iter": "191", "eta": "0:11:12", "split": "test_iter", "time_diff": 1.69716468}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:33][INFO] logging.py:   99: json_stats: {"cur_iter": "192", "eta": "0:11:10", "split": "test_iter", "time_diff": 1.69695898}
exponential temporal pooling in test
alpha:0.25
[12/16 18:00:59][INFO] logging.py:   99: json_stats: {"cur_iter": "193", "eta": "2:48:11", "split": "test_iter", "time_diff": 25.61222689}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:00][INFO] logging.py:   99: json_stats: {"cur_iter": "194", "eta": "0:11:04", "split": "test_iter", "time_diff": 1.68965297}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:02][INFO] logging.py:   99: json_stats: {"cur_iter": "195", "eta": "0:11:02", "split": "test_iter", "time_diff": 1.69008355}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:04][INFO] logging.py:   99: json_stats: {"cur_iter": "196", "eta": "0:11:07", "split": "test_iter", "time_diff": 1.70627893}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:29][INFO] logging.py:   99: json_stats: {"cur_iter": "197", "eta": "2:41:59", "split": "test_iter", "time_diff": 24.92068370}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:30][INFO] logging.py:   99: json_stats: {"cur_iter": "198", "eta": "0:10:58", "split": "test_iter", "time_diff": 1.69238323}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:32][INFO] logging.py:   99: json_stats: {"cur_iter": "199", "eta": "0:10:55", "split": "test_iter", "time_diff": 1.69005484}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:34][INFO] logging.py:   99: json_stats: {"cur_iter": "200", "eta": "0:10:56", "split": "test_iter", "time_diff": 1.69512340}
exponential temporal pooling in test
alpha:0.25
[12/16 18:01:59][INFO] logging.py:   99: json_stats: {"cur_iter": "201", "eta": "2:42:21", "split": "test_iter", "time_diff": 25.23819102}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:01][INFO] logging.py:   99: json_stats: {"cur_iter": "202", "eta": "0:10:50", "split": "test_iter", "time_diff": 1.68952696}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:02][INFO] logging.py:   99: json_stats: {"cur_iter": "203", "eta": "0:10:54", "split": "test_iter", "time_diff": 1.70541135}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:04][INFO] logging.py:   99: json_stats: {"cur_iter": "204", "eta": "0:10:50", "split": "test_iter", "time_diff": 1.69750927}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:28][INFO] logging.py:   99: json_stats: {"cur_iter": "205", "eta": "2:35:15", "split": "test_iter", "time_diff": 24.38646087}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:31][INFO] logging.py:   99: json_stats: {"cur_iter": "206", "eta": "0:19:17", "split": "test_iter", "time_diff": 3.03676373}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:33][INFO] logging.py:   99: json_stats: {"cur_iter": "207", "eta": "0:10:43", "split": "test_iter", "time_diff": 1.69459042}
exponential temporal pooling in test
alpha:0.25
[12/16 18:02:35][INFO] logging.py:   99: json_stats: {"cur_iter": "208", "eta": "0:10:46", "split": "test_iter", "time_diff": 1.70563732}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:02][INFO] logging.py:   99: json_stats: {"cur_iter": "209", "eta": "2:54:16", "split": "test_iter", "time_diff": 27.66268782}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:04][INFO] logging.py:   99: json_stats: {"cur_iter": "210", "eta": "0:10:40", "split": "test_iter", "time_diff": 1.70007466}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:06][INFO] logging.py:   99: json_stats: {"cur_iter": "211", "eta": "0:10:39", "split": "test_iter", "time_diff": 1.70055739}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:08][INFO] logging.py:   99: json_stats: {"cur_iter": "212", "eta": "0:10:36", "split": "test_iter", "time_diff": 1.69796281}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:36][INFO] logging.py:   99: json_stats: {"cur_iter": "213", "eta": "2:57:49", "split": "test_iter", "time_diff": 28.52716473}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:38][INFO] logging.py:   99: json_stats: {"cur_iter": "214", "eta": "0:10:30", "split": "test_iter", "time_diff": 1.69059011}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:40][INFO] logging.py:   99: json_stats: {"cur_iter": "215", "eta": "0:10:32", "split": "test_iter", "time_diff": 1.70029857}
exponential temporal pooling in test
alpha:0.25
[12/16 18:03:41][INFO] logging.py:   99: json_stats: {"cur_iter": "216", "eta": "0:10:30", "split": "test_iter", "time_diff": 1.69908080}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:06][INFO] logging.py:   99: json_stats: {"cur_iter": "217", "eta": "2:32:58", "split": "test_iter", "time_diff": 24.80625113}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:08][INFO] logging.py:   99: json_stats: {"cur_iter": "218", "eta": "0:10:24", "split": "test_iter", "time_diff": 1.69217836}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:09][INFO] logging.py:   99: json_stats: {"cur_iter": "219", "eta": "0:10:21", "split": "test_iter", "time_diff": 1.68903735}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:11][INFO] logging.py:   99: json_stats: {"cur_iter": "220", "eta": "0:10:22", "split": "test_iter", "time_diff": 1.69597719}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:36][INFO] logging.py:   99: json_stats: {"cur_iter": "221", "eta": "2:33:04", "split": "test_iter", "time_diff": 25.09499474}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:38][INFO] logging.py:   99: json_stats: {"cur_iter": "222", "eta": "0:10:16", "split": "test_iter", "time_diff": 1.69026132}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:40][INFO] logging.py:   99: json_stats: {"cur_iter": "223", "eta": "0:10:16", "split": "test_iter", "time_diff": 1.69301242}
exponential temporal pooling in test
alpha:0.25
[12/16 18:04:41][INFO] logging.py:   99: json_stats: {"cur_iter": "224", "eta": "0:10:15", "split": "test_iter", "time_diff": 1.69517461}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:04][INFO] logging.py:   99: json_stats: {"cur_iter": "225", "eta": "2:18:01", "split": "test_iter", "time_diff": 22.87730899}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:06][INFO] logging.py:   99: json_stats: {"cur_iter": "226", "eta": "0:10:10", "split": "test_iter", "time_diff": 1.69142030}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:08][INFO] logging.py:   99: json_stats: {"cur_iter": "227", "eta": "0:10:10", "split": "test_iter", "time_diff": 1.69560638}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:09][INFO] logging.py:   99: json_stats: {"cur_iter": "228", "eta": "0:10:13", "split": "test_iter", "time_diff": 1.70791492}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:36][INFO] logging.py:   99: json_stats: {"cur_iter": "229", "eta": "2:37:24", "split": "test_iter", "time_diff": 26.38132496}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:37][INFO] logging.py:   99: json_stats: {"cur_iter": "230", "eta": "0:10:06", "split": "test_iter", "time_diff": 1.69833180}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:39][INFO] logging.py:   99: json_stats: {"cur_iter": "231", "eta": "0:10:02", "split": "test_iter", "time_diff": 1.69193746}
exponential temporal pooling in test
alpha:0.25
[12/16 18:05:41][INFO] logging.py:   99: json_stats: {"cur_iter": "232", "eta": "0:10:02", "split": "test_iter", "time_diff": 1.69681587}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:06][INFO] logging.py:   99: json_stats: {"cur_iter": "233", "eta": "2:29:46", "split": "test_iter", "time_diff": 25.38550471}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:08][INFO] logging.py:   99: json_stats: {"cur_iter": "234", "eta": "0:09:57", "split": "test_iter", "time_diff": 1.69263662}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:10][INFO] logging.py:   99: json_stats: {"cur_iter": "235", "eta": "0:09:54", "split": "test_iter", "time_diff": 1.68987638}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:11][INFO] logging.py:   99: json_stats: {"cur_iter": "236", "eta": "0:09:57", "split": "test_iter", "time_diff": 1.70104646}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:37][INFO] logging.py:   99: json_stats: {"cur_iter": "237", "eta": "2:32:54", "split": "test_iter", "time_diff": 26.21388221}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:39][INFO] logging.py:   99: json_stats: {"cur_iter": "238", "eta": "0:09:49", "split": "test_iter", "time_diff": 1.68973816}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:41][INFO] logging.py:   99: json_stats: {"cur_iter": "239", "eta": "0:09:50", "split": "test_iter", "time_diff": 1.69640881}
exponential temporal pooling in test
alpha:0.25
[12/16 18:06:43][INFO] logging.py:   99: json_stats: {"cur_iter": "240", "eta": "0:09:47", "split": "test_iter", "time_diff": 1.69297428}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:07][INFO] logging.py:   99: json_stats: {"cur_iter": "241", "eta": "2:19:46", "split": "test_iter", "time_diff": 24.23967400}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:09][INFO] logging.py:   99: json_stats: {"cur_iter": "242", "eta": "0:09:45", "split": "test_iter", "time_diff": 1.69760217}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:10][INFO] logging.py:   99: json_stats: {"cur_iter": "243", "eta": "0:09:41", "split": "test_iter", "time_diff": 1.68897995}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:12][INFO] logging.py:   99: json_stats: {"cur_iter": "244", "eta": "0:09:42", "split": "test_iter", "time_diff": 1.69724581}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:38][INFO] logging.py:   99: json_stats: {"cur_iter": "245", "eta": "2:28:46", "split": "test_iter", "time_diff": 26.09996154}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:40][INFO] logging.py:   99: json_stats: {"cur_iter": "246", "eta": "0:09:37", "split": "test_iter", "time_diff": 1.69218314}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:41][INFO] logging.py:   99: json_stats: {"cur_iter": "247", "eta": "0:09:36", "split": "test_iter", "time_diff": 1.69543513}
exponential temporal pooling in test
alpha:0.25
[12/16 18:07:43][INFO] logging.py:   99: json_stats: {"cur_iter": "248", "eta": "0:09:35", "split": "test_iter", "time_diff": 1.69626797}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:08][INFO] logging.py:   99: json_stats: {"cur_iter": "249", "eta": "2:21:06", "split": "test_iter", "time_diff": 25.04810948}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:10][INFO] logging.py:   99: json_stats: {"cur_iter": "250", "eta": "0:09:29", "split": "test_iter", "time_diff": 1.69036261}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:12][INFO] logging.py:   99: json_stats: {"cur_iter": "251", "eta": "0:09:31", "split": "test_iter", "time_diff": 1.70025423}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:13][INFO] logging.py:   99: json_stats: {"cur_iter": "252", "eta": "0:09:29", "split": "test_iter", "time_diff": 1.69911504}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:39][INFO] logging.py:   99: json_stats: {"cur_iter": "253", "eta": "2:21:39", "split": "test_iter", "time_diff": 25.44809831}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:40][INFO] logging.py:   99: json_stats: {"cur_iter": "254", "eta": "0:09:22", "split": "test_iter", "time_diff": 1.68884836}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:42][INFO] logging.py:   99: json_stats: {"cur_iter": "255", "eta": "0:09:21", "split": "test_iter", "time_diff": 1.69104163}
exponential temporal pooling in test
alpha:0.25
[12/16 18:08:44][INFO] logging.py:   99: json_stats: {"cur_iter": "256", "eta": "0:09:19", "split": "test_iter", "time_diff": 1.69169938}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:07][INFO] logging.py:   99: json_stats: {"cur_iter": "257", "eta": "2:07:52", "split": "test_iter", "time_diff": 23.24943348}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:09][INFO] logging.py:   99: json_stats: {"cur_iter": "258", "eta": "0:09:17", "split": "test_iter", "time_diff": 1.69505529}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:10][INFO] logging.py:   99: json_stats: {"cur_iter": "259", "eta": "0:09:14", "split": "test_iter", "time_diff": 1.68934740}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:12][INFO] logging.py:   99: json_stats: {"cur_iter": "260", "eta": "0:09:13", "split": "test_iter", "time_diff": 1.69176625}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:38][INFO] logging.py:   99: json_stats: {"cur_iter": "261", "eta": "2:19:49", "split": "test_iter", "time_diff": 25.73449574}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:40][INFO] logging.py:   99: json_stats: {"cur_iter": "262", "eta": "0:09:08", "split": "test_iter", "time_diff": 1.68894964}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:41][INFO] logging.py:   99: json_stats: {"cur_iter": "263", "eta": "0:09:11", "split": "test_iter", "time_diff": 1.70359027}
exponential temporal pooling in test
alpha:0.25
[12/16 18:09:43][INFO] logging.py:   99: json_stats: {"cur_iter": "264", "eta": "0:09:06", "split": "test_iter", "time_diff": 1.69139708}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:06][INFO] logging.py:   99: json_stats: {"cur_iter": "265", "eta": "2:01:39", "split": "test_iter", "time_diff": 22.66939365}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:07][INFO] logging.py:   99: json_stats: {"cur_iter": "266", "eta": "0:09:03", "split": "test_iter", "time_diff": 1.69203445}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:09][INFO] logging.py:   99: json_stats: {"cur_iter": "267", "eta": "0:09:01", "split": "test_iter", "time_diff": 1.69280244}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:11][INFO] logging.py:   99: json_stats: {"cur_iter": "268", "eta": "0:08:58", "split": "test_iter", "time_diff": 1.68935835}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:37][INFO] logging.py:   99: json_stats: {"cur_iter": "269", "eta": "2:18:31", "split": "test_iter", "time_diff": 26.13621561}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:39][INFO] logging.py:   99: json_stats: {"cur_iter": "270", "eta": "0:08:54", "split": "test_iter", "time_diff": 1.68681621}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:40][INFO] logging.py:   99: json_stats: {"cur_iter": "271", "eta": "0:08:55", "split": "test_iter", "time_diff": 1.69544351}
exponential temporal pooling in test
alpha:0.25
[12/16 18:10:42][INFO] logging.py:   99: json_stats: {"cur_iter": "272", "eta": "0:08:52", "split": "test_iter", "time_diff": 1.69166099}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:10][INFO] logging.py:   99: json_stats: {"cur_iter": "273", "eta": "2:26:13", "split": "test_iter", "time_diff": 27.94173933}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:12][INFO] logging.py:   99: json_stats: {"cur_iter": "274", "eta": "0:08:49", "split": "test_iter", "time_diff": 1.69050862}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:13][INFO] logging.py:   99: json_stats: {"cur_iter": "275", "eta": "0:08:48", "split": "test_iter", "time_diff": 1.69296671}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:15][INFO] logging.py:   99: json_stats: {"cur_iter": "276", "eta": "0:08:46", "split": "test_iter", "time_diff": 1.69185701}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:38][INFO] logging.py:   99: json_stats: {"cur_iter": "277", "eta": "1:59:48", "split": "test_iter", "time_diff": 23.18757191}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:40][INFO] logging.py:   99: json_stats: {"cur_iter": "278", "eta": "0:08:42", "split": "test_iter", "time_diff": 1.69180971}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:42][INFO] logging.py:   99: json_stats: {"cur_iter": "279", "eta": "0:08:41", "split": "test_iter", "time_diff": 1.69391034}
exponential temporal pooling in test
alpha:0.25
[12/16 18:11:43][INFO] logging.py:   99: json_stats: {"cur_iter": "280", "eta": "0:08:39", "split": "test_iter", "time_diff": 1.69215286}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:10][INFO] logging.py:   99: json_stats: {"cur_iter": "281", "eta": "2:17:17", "split": "test_iter", "time_diff": 26.91944462}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:12][INFO] logging.py:   99: json_stats: {"cur_iter": "282", "eta": "0:08:35", "split": "test_iter", "time_diff": 1.68880799}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:14][INFO] logging.py:   99: json_stats: {"cur_iter": "283", "eta": "0:08:35", "split": "test_iter", "time_diff": 1.69634691}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:15][INFO] logging.py:   99: json_stats: {"cur_iter": "284", "eta": "0:08:32", "split": "test_iter", "time_diff": 1.69219140}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:42][INFO] logging.py:   99: json_stats: {"cur_iter": "285", "eta": "2:12:11", "split": "test_iter", "time_diff": 26.26258977}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:43][INFO] logging.py:   99: json_stats: {"cur_iter": "286", "eta": "0:08:29", "split": "test_iter", "time_diff": 1.69294372}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:45][INFO] logging.py:   99: json_stats: {"cur_iter": "287", "eta": "0:08:27", "split": "test_iter", "time_diff": 1.69259203}
exponential temporal pooling in test
alpha:0.25
[12/16 18:12:47][INFO] logging.py:   99: json_stats: {"cur_iter": "288", "eta": "0:08:25", "split": "test_iter", "time_diff": 1.69121911}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:11][INFO] logging.py:   99: json_stats: {"cur_iter": "289", "eta": "2:02:26", "split": "test_iter", "time_diff": 24.65319612}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:13][INFO] logging.py:   99: json_stats: {"cur_iter": "290", "eta": "0:08:21", "split": "test_iter", "time_diff": 1.68934126}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:15][INFO] logging.py:   99: json_stats: {"cur_iter": "291", "eta": "0:08:22", "split": "test_iter", "time_diff": 1.69710555}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:16][INFO] logging.py:   99: json_stats: {"cur_iter": "292", "eta": "0:08:19", "split": "test_iter", "time_diff": 1.69285663}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:44][INFO] logging.py:   99: json_stats: {"cur_iter": "293", "eta": "2:16:00", "split": "test_iter", "time_diff": 27.75589750}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:46][INFO] logging.py:   99: json_stats: {"cur_iter": "294", "eta": "0:08:15", "split": "test_iter", "time_diff": 1.69068856}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:47][INFO] logging.py:   99: json_stats: {"cur_iter": "295", "eta": "0:08:14", "split": "test_iter", "time_diff": 1.69239699}
exponential temporal pooling in test
alpha:0.25
[12/16 18:13:49][INFO] logging.py:   99: json_stats: {"cur_iter": "296", "eta": "0:08:12", "split": "test_iter", "time_diff": 1.69086640}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:14][INFO] logging.py:   99: json_stats: {"cur_iter": "297", "eta": "1:58:42", "split": "test_iter", "time_diff": 24.56003451}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:15][INFO] logging.py:   99: json_stats: {"cur_iter": "298", "eta": "0:08:08", "split": "test_iter", "time_diff": 1.68979800}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:17][INFO] logging.py:   99: json_stats: {"cur_iter": "299", "eta": "0:08:07", "split": "test_iter", "time_diff": 1.69305251}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:19][INFO] logging.py:   99: json_stats: {"cur_iter": "300", "eta": "0:08:05", "split": "test_iter", "time_diff": 1.69198426}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:47][INFO] logging.py:   99: json_stats: {"cur_iter": "301", "eta": "2:12:34", "split": "test_iter", "time_diff": 27.81188187}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:48][INFO] logging.py:   99: json_stats: {"cur_iter": "302", "eta": "0:08:03", "split": "test_iter", "time_diff": 1.69638951}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:50][INFO] logging.py:   99: json_stats: {"cur_iter": "303", "eta": "0:08:00", "split": "test_iter", "time_diff": 1.69202261}
exponential temporal pooling in test
alpha:0.25
[12/16 18:14:52][INFO] logging.py:   99: json_stats: {"cur_iter": "304", "eta": "0:08:00", "split": "test_iter", "time_diff": 1.69834167}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:18][INFO] logging.py:   99: json_stats: {"cur_iter": "305", "eta": "2:02:21", "split": "test_iter", "time_diff": 26.03403072}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:19][INFO] logging.py:   99: json_stats: {"cur_iter": "306", "eta": "0:07:54", "split": "test_iter", "time_diff": 1.68953189}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:21][INFO] logging.py:   99: json_stats: {"cur_iter": "307", "eta": "0:07:53", "split": "test_iter", "time_diff": 1.69154366}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:23][INFO] logging.py:   99: json_stats: {"cur_iter": "308", "eta": "0:07:54", "split": "test_iter", "time_diff": 1.70122005}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:48][INFO] logging.py:   99: json_stats: {"cur_iter": "309", "eta": "1:56:27", "split": "test_iter", "time_diff": 25.13390365}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:50][INFO] logging.py:   99: json_stats: {"cur_iter": "310", "eta": "0:07:47", "split": "test_iter", "time_diff": 1.68902008}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:51][INFO] logging.py:   99: json_stats: {"cur_iter": "311", "eta": "0:07:48", "split": "test_iter", "time_diff": 1.69867689}
exponential temporal pooling in test
alpha:0.25
[12/16 18:15:53][INFO] logging.py:   99: json_stats: {"cur_iter": "312", "eta": "0:07:46", "split": "test_iter", "time_diff": 1.69567841}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:18][INFO] logging.py:   99: json_stats: {"cur_iter": "313", "eta": "1:55:14", "split": "test_iter", "time_diff": 25.23605101}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:20][INFO] logging.py:   99: json_stats: {"cur_iter": "314", "eta": "0:07:41", "split": "test_iter", "time_diff": 1.69056729}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:22][INFO] logging.py:   99: json_stats: {"cur_iter": "315", "eta": "0:07:40", "split": "test_iter", "time_diff": 1.69341595}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:23][INFO] logging.py:   99: json_stats: {"cur_iter": "316", "eta": "0:07:40", "split": "test_iter", "time_diff": 1.69797342}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:48][INFO] logging.py:   99: json_stats: {"cur_iter": "317", "eta": "1:51:46", "split": "test_iter", "time_diff": 24.83752419}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:50][INFO] logging.py:   99: json_stats: {"cur_iter": "318", "eta": "0:07:34", "split": "test_iter", "time_diff": 1.68813754}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:52][INFO] logging.py:   99: json_stats: {"cur_iter": "319", "eta": "0:07:33", "split": "test_iter", "time_diff": 1.69278593}
exponential temporal pooling in test
alpha:0.25
[12/16 18:16:53][INFO] logging.py:   99: json_stats: {"cur_iter": "320", "eta": "0:07:32", "split": "test_iter", "time_diff": 1.69360969}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:21][INFO] logging.py:   99: json_stats: {"cur_iter": "321", "eta": "2:04:02", "split": "test_iter", "time_diff": 27.97818060}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:23][INFO] logging.py:   99: json_stats: {"cur_iter": "322", "eta": "0:07:28", "split": "test_iter", "time_diff": 1.69176549}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:25][INFO] logging.py:   99: json_stats: {"cur_iter": "323", "eta": "0:07:26", "split": "test_iter", "time_diff": 1.69007617}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:26][INFO] logging.py:   99: json_stats: {"cur_iter": "324", "eta": "0:07:25", "split": "test_iter", "time_diff": 1.69317034}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:50][INFO] logging.py:   99: json_stats: {"cur_iter": "325", "eta": "1:44:32", "split": "test_iter", "time_diff": 23.94012322}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:52][INFO] logging.py:   99: json_stats: {"cur_iter": "326", "eta": "0:07:22", "split": "test_iter", "time_diff": 1.69548169}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:54][INFO] logging.py:   99: json_stats: {"cur_iter": "327", "eta": "0:07:20", "split": "test_iter", "time_diff": 1.69250306}
exponential temporal pooling in test
alpha:0.25
[12/16 18:17:55][INFO] logging.py:   99: json_stats: {"cur_iter": "328", "eta": "0:07:20", "split": "test_iter", "time_diff": 1.70096242}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:22][INFO] logging.py:   99: json_stats: {"cur_iter": "329", "eta": "1:53:17", "split": "test_iter", "time_diff": 26.34708142}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:24][INFO] logging.py:   99: json_stats: {"cur_iter": "330", "eta": "0:07:14", "split": "test_iter", "time_diff": 1.68915473}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:25][INFO] logging.py:   99: json_stats: {"cur_iter": "331", "eta": "0:07:14", "split": "test_iter", "time_diff": 1.69554908}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:27][INFO] logging.py:   99: json_stats: {"cur_iter": "332", "eta": "0:07:11", "split": "test_iter", "time_diff": 1.69142778}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:53][INFO] logging.py:   99: json_stats: {"cur_iter": "333", "eta": "1:49:26", "split": "test_iter", "time_diff": 25.85071767}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:54][INFO] logging.py:   99: json_stats: {"cur_iter": "334", "eta": "0:07:06", "split": "test_iter", "time_diff": 1.68767956}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:56][INFO] logging.py:   99: json_stats: {"cur_iter": "335", "eta": "0:07:06", "split": "test_iter", "time_diff": 1.69063379}
exponential temporal pooling in test
alpha:0.25
[12/16 18:18:58][INFO] logging.py:   99: json_stats: {"cur_iter": "336", "eta": "0:07:06", "split": "test_iter", "time_diff": 1.69996631}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:22][INFO] logging.py:   99: json_stats: {"cur_iter": "337", "eta": "1:40:56", "split": "test_iter", "time_diff": 24.22468786}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:24][INFO] logging.py:   99: json_stats: {"cur_iter": "338", "eta": "0:07:02", "split": "test_iter", "time_diff": 1.69532394}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:25][INFO] logging.py:   99: json_stats: {"cur_iter": "339", "eta": "0:07:00", "split": "test_iter", "time_diff": 1.69738078}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:27][INFO] logging.py:   99: json_stats: {"cur_iter": "340", "eta": "0:07:15", "split": "test_iter", "time_diff": 1.76453483}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:53][INFO] logging.py:   99: json_stats: {"cur_iter": "341", "eta": "1:44:19", "split": "test_iter", "time_diff": 25.44345150}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:54][INFO] logging.py:   99: json_stats: {"cur_iter": "342", "eta": "0:06:53", "split": "test_iter", "time_diff": 1.68811027}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:56][INFO] logging.py:   99: json_stats: {"cur_iter": "343", "eta": "0:06:54", "split": "test_iter", "time_diff": 1.69863274}
exponential temporal pooling in test
alpha:0.25
[12/16 18:19:58][INFO] logging.py:   99: json_stats: {"cur_iter": "344", "eta": "0:07:10", "split": "test_iter", "time_diff": 1.77342333}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:24][INFO] logging.py:   99: json_stats: {"cur_iter": "345", "eta": "1:44:02", "split": "test_iter", "time_diff": 25.79490240}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:25][INFO] logging.py:   99: json_stats: {"cur_iter": "346", "eta": "0:06:47", "split": "test_iter", "time_diff": 1.69290343}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:27][INFO] logging.py:   99: json_stats: {"cur_iter": "347", "eta": "0:06:46", "split": "test_iter", "time_diff": 1.69358820}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:29][INFO] logging.py:   99: json_stats: {"cur_iter": "348", "eta": "0:07:01", "split": "test_iter", "time_diff": 1.76300350}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:54][INFO] logging.py:   99: json_stats: {"cur_iter": "349", "eta": "1:38:21", "split": "test_iter", "time_diff": 24.79645678}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:55][INFO] logging.py:   99: json_stats: {"cur_iter": "350", "eta": "0:06:40", "split": "test_iter", "time_diff": 1.68957314}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:57][INFO] logging.py:   99: json_stats: {"cur_iter": "351", "eta": "0:06:59", "split": "test_iter", "time_diff": 1.77859208}
exponential temporal pooling in test
alpha:0.25
[12/16 18:20:59][INFO] logging.py:   99: json_stats: {"cur_iter": "352", "eta": "0:06:39", "split": "test_iter", "time_diff": 1.69789711}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:25][INFO] logging.py:   99: json_stats: {"cur_iter": "353", "eta": "1:42:13", "split": "test_iter", "time_diff": 26.21237735}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:27][INFO] logging.py:   99: json_stats: {"cur_iter": "354", "eta": "0:06:33", "split": "test_iter", "time_diff": 1.69076054}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:28][INFO] logging.py:   99: json_stats: {"cur_iter": "355", "eta": "0:06:32", "split": "test_iter", "time_diff": 1.69202487}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:30][INFO] logging.py:   99: json_stats: {"cur_iter": "356", "eta": "0:06:30", "split": "test_iter", "time_diff": 1.69149055}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:54][INFO] logging.py:   99: json_stats: {"cur_iter": "357", "eta": "1:30:15", "split": "test_iter", "time_diff": 23.54648537}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:55][INFO] logging.py:   99: json_stats: {"cur_iter": "358", "eta": "0:06:27", "split": "test_iter", "time_diff": 1.69161499}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:57][INFO] logging.py:   99: json_stats: {"cur_iter": "359", "eta": "0:06:26", "split": "test_iter", "time_diff": 1.69369452}
exponential temporal pooling in test
alpha:0.25
[12/16 18:21:59][INFO] logging.py:   99: json_stats: {"cur_iter": "360", "eta": "0:06:23", "split": "test_iter", "time_diff": 1.68942165}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:25][INFO] logging.py:   99: json_stats: {"cur_iter": "361", "eta": "1:38:56", "split": "test_iter", "time_diff": 26.26650071}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:27][INFO] logging.py:   99: json_stats: {"cur_iter": "362", "eta": "0:06:20", "split": "test_iter", "time_diff": 1.69007020}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:28][INFO] logging.py:   99: json_stats: {"cur_iter": "363", "eta": "0:06:20", "split": "test_iter", "time_diff": 1.69898730}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:30][INFO] logging.py:   99: json_stats: {"cur_iter": "364", "eta": "0:06:17", "split": "test_iter", "time_diff": 1.69371791}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:56][INFO] logging.py:   99: json_stats: {"cur_iter": "365", "eta": "1:35:50", "split": "test_iter", "time_diff": 25.90118280}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:58][INFO] logging.py:   99: json_stats: {"cur_iter": "366", "eta": "0:06:14", "split": "test_iter", "time_diff": 1.69252062}
exponential temporal pooling in test
alpha:0.25
[12/16 18:22:59][INFO] logging.py:   99: json_stats: {"cur_iter": "367", "eta": "0:06:12", "split": "test_iter", "time_diff": 1.69150861}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:01][INFO] logging.py:   99: json_stats: {"cur_iter": "368", "eta": "0:06:12", "split": "test_iter", "time_diff": 1.70153483}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:27][INFO] logging.py:   99: json_stats: {"cur_iter": "369", "eta": "1:32:45", "split": "test_iter", "time_diff": 25.53031753}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:28][INFO] logging.py:   99: json_stats: {"cur_iter": "370", "eta": "0:06:06", "split": "test_iter", "time_diff": 1.68971597}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:30][INFO] logging.py:   99: json_stats: {"cur_iter": "371", "eta": "0:06:06", "split": "test_iter", "time_diff": 1.69734133}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:32][INFO] logging.py:   99: json_stats: {"cur_iter": "372", "eta": "0:06:04", "split": "test_iter", "time_diff": 1.69740327}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:56][INFO] logging.py:   99: json_stats: {"cur_iter": "373", "eta": "1:26:23", "split": "test_iter", "time_diff": 24.22360704}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:58][INFO] logging.py:   99: json_stats: {"cur_iter": "374", "eta": "0:05:59", "split": "test_iter", "time_diff": 1.69001225}
exponential temporal pooling in test
alpha:0.25
[12/16 18:23:59][INFO] logging.py:   99: json_stats: {"cur_iter": "375", "eta": "0:05:59", "split": "test_iter", "time_diff": 1.69546412}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:01][INFO] logging.py:   99: json_stats: {"cur_iter": "376", "eta": "0:05:57", "split": "test_iter", "time_diff": 1.69533299}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:25][INFO] logging.py:   99: json_stats: {"cur_iter": "377", "eta": "1:24:05", "split": "test_iter", "time_diff": 24.02401948}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:27][INFO] logging.py:   99: json_stats: {"cur_iter": "378", "eta": "0:05:54", "split": "test_iter", "time_diff": 1.69640012}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:28][INFO] logging.py:   99: json_stats: {"cur_iter": "379", "eta": "0:05:52", "split": "test_iter", "time_diff": 1.69641581}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:30][INFO] logging.py:   99: json_stats: {"cur_iter": "380", "eta": "0:05:50", "split": "test_iter", "time_diff": 1.69399488}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:56][INFO] logging.py:   99: json_stats: {"cur_iter": "381", "eta": "1:27:40", "split": "test_iter", "time_diff": 25.53576860}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:57][INFO] logging.py:   99: json_stats: {"cur_iter": "382", "eta": "0:05:46", "split": "test_iter", "time_diff": 1.69203890}
exponential temporal pooling in test
alpha:0.25
[12/16 18:24:59][INFO] logging.py:   99: json_stats: {"cur_iter": "383", "eta": "0:05:44", "split": "test_iter", "time_diff": 1.69082622}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:01][INFO] logging.py:   99: json_stats: {"cur_iter": "384", "eta": "0:05:43", "split": "test_iter", "time_diff": 1.69416200}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:26][INFO] logging.py:   99: json_stats: {"cur_iter": "385", "eta": "1:23:22", "split": "test_iter", "time_diff": 24.76722017}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:27][INFO] logging.py:   99: json_stats: {"cur_iter": "386", "eta": "0:05:41", "split": "test_iter", "time_diff": 1.69948865}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:29][INFO] logging.py:   99: json_stats: {"cur_iter": "387", "eta": "0:05:39", "split": "test_iter", "time_diff": 1.69637900}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:31][INFO] logging.py:   99: json_stats: {"cur_iter": "388", "eta": "0:05:37", "split": "test_iter", "time_diff": 1.69433613}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:53][INFO] logging.py:   99: json_stats: {"cur_iter": "389", "eta": "1:13:51", "split": "test_iter", "time_diff": 22.38138586}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:55][INFO] logging.py:   99: json_stats: {"cur_iter": "390", "eta": "0:05:32", "split": "test_iter", "time_diff": 1.68738591}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:56][INFO] logging.py:   99: json_stats: {"cur_iter": "391", "eta": "0:05:32", "split": "test_iter", "time_diff": 1.69634053}
exponential temporal pooling in test
alpha:0.25
[12/16 18:25:58][INFO] logging.py:   99: json_stats: {"cur_iter": "392", "eta": "0:05:30", "split": "test_iter", "time_diff": 1.69664738}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:23][INFO] logging.py:   99: json_stats: {"cur_iter": "393", "eta": "1:19:19", "split": "test_iter", "time_diff": 24.53140063}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:24][INFO] logging.py:   99: json_stats: {"cur_iter": "394", "eta": "0:05:26", "split": "test_iter", "time_diff": 1.68973095}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:26][INFO] logging.py:   99: json_stats: {"cur_iter": "395", "eta": "0:05:24", "split": "test_iter", "time_diff": 1.69148354}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:28][INFO] logging.py:   99: json_stats: {"cur_iter": "396", "eta": "0:05:24", "split": "test_iter", "time_diff": 1.69636153}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:50][INFO] logging.py:   99: json_stats: {"cur_iter": "397", "eta": "1:11:48", "split": "test_iter", "time_diff": 22.67790289}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:54][INFO] logging.py:   99: json_stats: {"cur_iter": "398", "eta": "0:12:01", "split": "test_iter", "time_diff": 3.81703947}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:56][INFO] logging.py:   99: json_stats: {"cur_iter": "399", "eta": "0:05:17", "split": "test_iter", "time_diff": 1.69136569}
exponential temporal pooling in test
alpha:0.25
[12/16 18:26:58][INFO] logging.py:   99: json_stats: {"cur_iter": "400", "eta": "0:05:16", "split": "test_iter", "time_diff": 1.69387290}
exponential temporal pooling in test
alpha:0.25
[12/16 18:27:21][INFO] logging.py:   99: json_stats: {"cur_iter": "401", "eta": "1:11:01", "split": "test_iter", "time_diff": 22.91307721}
exponential temporal pooling in test
alpha:0.25
[12/16 18:27:25][INFO] logging.py:   99: json_stats: {"cur_iter": "402", "eta": "0:14:27", "split": "test_iter", "time_diff": 4.69183877}
exponential temporal pooling in test
alpha:0.25
[12/16 18:27:27][INFO] logging.py:   99: json_stats: {"cur_iter": "403", "eta": "0:05:11", "split": "test_iter", "time_diff": 1.69206297}
exponential temporal pooling in test
alpha:0.25
[12/16 18:27:29][INFO] logging.py:   99: json_stats: {"cur_iter": "404", "eta": "0:05:09", "split": "test_iter", "time_diff": 1.69169496}
exponential temporal pooling in test
alpha:0.25
[12/16 18:27:51][INFO] logging.py:   99: json_stats: {"cur_iter": "405", "eta": "1:08:56", "split": "test_iter", "time_diff": 22.72720912}
exponential temporal pooling in test
alpha:0.25
[12/16 18:27:59][INFO] logging.py:   99: json_stats: {"cur_iter": "406", "eta": "0:23:40", "split": "test_iter", "time_diff": 7.84867250}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:01][INFO] logging.py:   99: json_stats: {"cur_iter": "407", "eta": "0:05:04", "split": "test_iter", "time_diff": 1.69036552}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:03][INFO] logging.py:   99: json_stats: {"cur_iter": "408", "eta": "0:05:03", "split": "test_iter", "time_diff": 1.69565899}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:23][INFO] logging.py:   99: json_stats: {"cur_iter": "409", "eta": "0:59:48", "split": "test_iter", "time_diff": 20.16084921}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:30][INFO] logging.py:   99: json_stats: {"cur_iter": "410", "eta": "0:21:23", "split": "test_iter", "time_diff": 7.25054360}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:32][INFO] logging.py:   99: json_stats: {"cur_iter": "411", "eta": "0:04:58", "split": "test_iter", "time_diff": 1.69786950}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:33][INFO] logging.py:   99: json_stats: {"cur_iter": "412", "eta": "0:04:57", "split": "test_iter", "time_diff": 1.70138298}
exponential temporal pooling in test
alpha:0.25
[12/16 18:28:53][INFO] logging.py:   99: json_stats: {"cur_iter": "413", "eta": "0:57:59", "split": "test_iter", "time_diff": 19.99717248}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:01][INFO] logging.py:   99: json_stats: {"cur_iter": "414", "eta": "0:21:33", "split": "test_iter", "time_diff": 7.47462100}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:03][INFO] logging.py:   99: json_stats: {"cur_iter": "415", "eta": "0:04:50", "split": "test_iter", "time_diff": 1.69167199}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:04][INFO] logging.py:   99: json_stats: {"cur_iter": "416", "eta": "0:04:49", "split": "test_iter", "time_diff": 1.69410299}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:26][INFO] logging.py:   99: json_stats: {"cur_iter": "417", "eta": "1:00:56", "split": "test_iter", "time_diff": 21.51110942}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:32][INFO] logging.py:   99: json_stats: {"cur_iter": "418", "eta": "0:16:55", "split": "test_iter", "time_diff": 6.00822499}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:34][INFO] logging.py:   99: json_stats: {"cur_iter": "419", "eta": "0:04:44", "split": "test_iter", "time_diff": 1.69121240}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:35][INFO] logging.py:   99: json_stats: {"cur_iter": "420", "eta": "0:04:42", "split": "test_iter", "time_diff": 1.69289618}
exponential temporal pooling in test
alpha:0.25
[12/16 18:29:57][INFO] logging.py:   99: json_stats: {"cur_iter": "421", "eta": "0:59:18", "split": "test_iter", "time_diff": 21.43533553}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:03][INFO] logging.py:   99: json_stats: {"cur_iter": "422", "eta": "0:17:34", "split": "test_iter", "time_diff": 6.39111858}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:05][INFO] logging.py:   99: json_stats: {"cur_iter": "423", "eta": "0:04:38", "split": "test_iter", "time_diff": 1.69691151}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:06][INFO] logging.py:   99: json_stats: {"cur_iter": "424", "eta": "0:04:36", "split": "test_iter", "time_diff": 1.69530216}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:30][INFO] logging.py:   99: json_stats: {"cur_iter": "425", "eta": "1:02:26", "split": "test_iter", "time_diff": 23.12938526}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:33][INFO] logging.py:   99: json_stats: {"cur_iter": "426", "eta": "0:09:17", "split": "test_iter", "time_diff": 3.46392961}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:35][INFO] logging.py:   99: json_stats: {"cur_iter": "427", "eta": "0:04:30", "split": "test_iter", "time_diff": 1.69281218}
exponential temporal pooling in test
alpha:0.25
[12/16 18:30:36][INFO] logging.py:   99: json_stats: {"cur_iter": "428", "eta": "0:04:29", "split": "test_iter", "time_diff": 1.69376236}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:01][INFO] logging.py:   99: json_stats: {"cur_iter": "429", "eta": "1:04:21", "split": "test_iter", "time_diff": 24.44138809}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:03][INFO] logging.py:   99: json_stats: {"cur_iter": "430", "eta": "0:05:22", "split": "test_iter", "time_diff": 2.05356565}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:05][INFO] logging.py:   99: json_stats: {"cur_iter": "431", "eta": "0:04:25", "split": "test_iter", "time_diff": 1.70037329}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:06][INFO] logging.py:   99: json_stats: {"cur_iter": "432", "eta": "0:04:22", "split": "test_iter", "time_diff": 1.69267566}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:33][INFO] logging.py:   99: json_stats: {"cur_iter": "433", "eta": "1:09:02", "split": "test_iter", "time_diff": 26.90110592}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:35][INFO] logging.py:   99: json_stats: {"cur_iter": "434", "eta": "0:04:18", "split": "test_iter", "time_diff": 1.69040894}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:37][INFO] logging.py:   99: json_stats: {"cur_iter": "435", "eta": "0:04:17", "split": "test_iter", "time_diff": 1.69557527}
exponential temporal pooling in test
alpha:0.25
[12/16 18:31:38][INFO] logging.py:   99: json_stats: {"cur_iter": "436", "eta": "0:04:16", "split": "test_iter", "time_diff": 1.69835871}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:03][INFO] logging.py:   99: json_stats: {"cur_iter": "437", "eta": "1:01:30", "split": "test_iter", "time_diff": 24.60103364}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:05][INFO] logging.py:   99: json_stats: {"cur_iter": "438", "eta": "0:04:12", "split": "test_iter", "time_diff": 1.69653500}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:06][INFO] logging.py:   99: json_stats: {"cur_iter": "439", "eta": "0:04:10", "split": "test_iter", "time_diff": 1.69010877}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:08][INFO] logging.py:   99: json_stats: {"cur_iter": "440", "eta": "0:04:08", "split": "test_iter", "time_diff": 1.69008194}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:33][INFO] logging.py:   99: json_stats: {"cur_iter": "441", "eta": "0:59:49", "split": "test_iter", "time_diff": 24.58297841}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:34][INFO] logging.py:   99: json_stats: {"cur_iter": "442", "eta": "0:04:04", "split": "test_iter", "time_diff": 1.68957567}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:36][INFO] logging.py:   99: json_stats: {"cur_iter": "443", "eta": "0:04:04", "split": "test_iter", "time_diff": 1.69956765}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:38][INFO] logging.py:   99: json_stats: {"cur_iter": "444", "eta": "0:04:02", "split": "test_iter", "time_diff": 1.69430731}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:54][INFO] logging.py:   99: json_stats: {"cur_iter": "445", "eta": "0:37:30", "split": "test_iter", "time_diff": 15.84957257}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:55][INFO] logging.py:   99: json_stats: {"cur_iter": "446", "eta": "0:03:59", "split": "test_iter", "time_diff": 1.69565812}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:57][INFO] logging.py:   99: json_stats: {"cur_iter": "447", "eta": "0:03:56", "split": "test_iter", "time_diff": 1.69154481}
exponential temporal pooling in test
alpha:0.25
[12/16 18:32:59][INFO] logging.py:   99: json_stats: {"cur_iter": "448", "eta": "0:03:56", "split": "test_iter", "time_diff": 1.70205823}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:10][INFO] logging.py:   99: json_stats: {"cur_iter": "449", "eta": "0:26:31", "split": "test_iter", "time_diff": 11.53485846}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:12][INFO] logging.py:   99: json_stats: {"cur_iter": "450", "eta": "0:04:43", "split": "test_iter", "time_diff": 2.06672800}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:14][INFO] logging.py:   99: json_stats: {"cur_iter": "451", "eta": "0:03:51", "split": "test_iter", "time_diff": 1.69907181}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:16][INFO] logging.py:   99: json_stats: {"cur_iter": "452", "eta": "0:03:49", "split": "test_iter", "time_diff": 1.69800821}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:31][INFO] logging.py:   99: json_stats: {"cur_iter": "453", "eta": "0:33:15", "split": "test_iter", "time_diff": 14.89171748}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:32][INFO] logging.py:   99: json_stats: {"cur_iter": "454", "eta": "0:03:45", "split": "test_iter", "time_diff": 1.69740384}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:34][INFO] logging.py:   99: json_stats: {"cur_iter": "455", "eta": "0:03:45", "split": "test_iter", "time_diff": 1.70471812}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:36][INFO] logging.py:   99: json_stats: {"cur_iter": "456", "eta": "0:03:42", "split": "test_iter", "time_diff": 1.69813395}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:47][INFO] logging.py:   99: json_stats: {"cur_iter": "457", "eta": "0:24:47", "split": "test_iter", "time_diff": 11.44079864}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:49][INFO] logging.py:   99: json_stats: {"cur_iter": "458", "eta": "0:03:38", "split": "test_iter", "time_diff": 1.69048794}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:51][INFO] logging.py:   99: json_stats: {"cur_iter": "459", "eta": "0:03:37", "split": "test_iter", "time_diff": 1.70002720}
exponential temporal pooling in test
alpha:0.25
[12/16 18:33:52][INFO] logging.py:   99: json_stats: {"cur_iter": "460", "eta": "0:03:47", "split": "test_iter", "time_diff": 1.79062439}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:03][INFO] logging.py:   99: json_stats: {"cur_iter": "461", "eta": "0:22:04", "split": "test_iter", "time_diff": 10.51367805}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:05][INFO] logging.py:   99: json_stats: {"cur_iter": "462", "eta": "0:03:31", "split": "test_iter", "time_diff": 1.69446065}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:06][INFO] logging.py:   99: json_stats: {"cur_iter": "463", "eta": "0:03:41", "split": "test_iter", "time_diff": 1.78855844}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:08][INFO] logging.py:   99: json_stats: {"cur_iter": "464", "eta": "0:03:28", "split": "test_iter", "time_diff": 1.69374210}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:17][INFO] logging.py:   99: json_stats: {"cur_iter": "465", "eta": "0:17:51", "split": "test_iter", "time_diff": 8.78291894}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:19][INFO] logging.py:   99: json_stats: {"cur_iter": "466", "eta": "0:03:25", "split": "test_iter", "time_diff": 1.69678015}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:20][INFO] logging.py:   99: json_stats: {"cur_iter": "467", "eta": "0:03:25", "split": "test_iter", "time_diff": 1.70871153}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:22][INFO] logging.py:   99: json_stats: {"cur_iter": "468", "eta": "0:03:33", "split": "test_iter", "time_diff": 1.79667693}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:32][INFO] logging.py:   99: json_stats: {"cur_iter": "469", "eta": "0:19:02", "split": "test_iter", "time_diff": 9.68012119}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:33][INFO] logging.py:   99: json_stats: {"cur_iter": "470", "eta": "0:03:17", "split": "test_iter", "time_diff": 1.69056309}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:35][INFO] logging.py:   99: json_stats: {"cur_iter": "471", "eta": "0:03:16", "split": "test_iter", "time_diff": 1.69701498}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:37][INFO] logging.py:   99: json_stats: {"cur_iter": "472", "eta": "0:03:15", "split": "test_iter", "time_diff": 1.70277801}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:47][INFO] logging.py:   99: json_stats: {"cur_iter": "473", "eta": "0:19:26", "split": "test_iter", "time_diff": 10.23358141}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:49][INFO] logging.py:   99: json_stats: {"cur_iter": "474", "eta": "0:03:11", "split": "test_iter", "time_diff": 1.69616319}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:50][INFO] logging.py:   99: json_stats: {"cur_iter": "475", "eta": "0:03:09", "split": "test_iter", "time_diff": 1.69514859}
exponential temporal pooling in test
alpha:0.25
[12/16 18:34:52][INFO] logging.py:   99: json_stats: {"cur_iter": "476", "eta": "0:03:08", "split": "test_iter", "time_diff": 1.69801629}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:02][INFO] logging.py:   99: json_stats: {"cur_iter": "477", "eta": "0:18:56", "split": "test_iter", "time_diff": 10.32851851}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:04][INFO] logging.py:   99: json_stats: {"cur_iter": "478", "eta": "0:03:04", "split": "test_iter", "time_diff": 1.69098389}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:06][INFO] logging.py:   99: json_stats: {"cur_iter": "479", "eta": "0:03:03", "split": "test_iter", "time_diff": 1.69854505}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:08][INFO] logging.py:   99: json_stats: {"cur_iter": "480", "eta": "0:03:01", "split": "test_iter", "time_diff": 1.69436892}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:16][INFO] logging.py:   99: json_stats: {"cur_iter": "481", "eta": "0:15:41", "split": "test_iter", "time_diff": 8.88243689}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:18][INFO] logging.py:   99: json_stats: {"cur_iter": "482", "eta": "0:02:57", "split": "test_iter", "time_diff": 1.69093086}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:20][INFO] logging.py:   99: json_stats: {"cur_iter": "483", "eta": "0:02:56", "split": "test_iter", "time_diff": 1.69897354}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:22][INFO] logging.py:   99: json_stats: {"cur_iter": "484", "eta": "0:02:54", "split": "test_iter", "time_diff": 1.69547508}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:32][INFO] logging.py:   99: json_stats: {"cur_iter": "485", "eta": "0:17:46", "split": "test_iter", "time_diff": 10.45794071}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:34][INFO] logging.py:   99: json_stats: {"cur_iter": "486", "eta": "0:02:51", "split": "test_iter", "time_diff": 1.69867085}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:35][INFO] logging.py:   99: json_stats: {"cur_iter": "487", "eta": "0:02:49", "split": "test_iter", "time_diff": 1.69387972}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:37][INFO] logging.py:   99: json_stats: {"cur_iter": "488", "eta": "0:02:48", "split": "test_iter", "time_diff": 1.70328171}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:47][INFO] logging.py:   99: json_stats: {"cur_iter": "489", "eta": "0:15:20", "split": "test_iter", "time_diff": 9.39147093}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:48][INFO] logging.py:   99: json_stats: {"cur_iter": "490", "eta": "0:02:44", "split": "test_iter", "time_diff": 1.69122849}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:50][INFO] logging.py:   99: json_stats: {"cur_iter": "491", "eta": "0:02:42", "split": "test_iter", "time_diff": 1.69339403}
exponential temporal pooling in test
alpha:0.25
[12/16 18:35:52][INFO] logging.py:   99: json_stats: {"cur_iter": "492", "eta": "0:02:41", "split": "test_iter", "time_diff": 1.70229728}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:01][INFO] logging.py:   99: json_stats: {"cur_iter": "493", "eta": "0:15:04", "split": "test_iter", "time_diff": 9.62165968}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:03][INFO] logging.py:   99: json_stats: {"cur_iter": "494", "eta": "0:02:38", "split": "test_iter", "time_diff": 1.70317878}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:05][INFO] logging.py:   99: json_stats: {"cur_iter": "495", "eta": "0:02:35", "split": "test_iter", "time_diff": 1.69445377}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:06][INFO] logging.py:   99: json_stats: {"cur_iter": "496", "eta": "0:02:34", "split": "test_iter", "time_diff": 1.69994299}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:16][INFO] logging.py:   99: json_stats: {"cur_iter": "497", "eta": "0:14:04", "split": "test_iter", "time_diff": 9.38772369}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:17][INFO] logging.py:   99: json_stats: {"cur_iter": "498", "eta": "0:02:30", "split": "test_iter", "time_diff": 1.69379388}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:19][INFO] logging.py:   99: json_stats: {"cur_iter": "499", "eta": "0:02:29", "split": "test_iter", "time_diff": 1.69345091}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:21][INFO] logging.py:   99: json_stats: {"cur_iter": "500", "eta": "0:02:27", "split": "test_iter", "time_diff": 1.69500752}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:31][INFO] logging.py:   99: json_stats: {"cur_iter": "501", "eta": "0:15:11", "split": "test_iter", "time_diff": 10.60121111}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:33][INFO] logging.py:   99: json_stats: {"cur_iter": "502", "eta": "0:02:24", "split": "test_iter", "time_diff": 1.69884965}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:35][INFO] logging.py:   99: json_stats: {"cur_iter": "503", "eta": "0:02:22", "split": "test_iter", "time_diff": 1.70009607}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:37][INFO] logging.py:   99: json_stats: {"cur_iter": "504", "eta": "0:02:20", "split": "test_iter", "time_diff": 1.69610146}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:45][INFO] logging.py:   99: json_stats: {"cur_iter": "505", "eta": "0:11:44", "split": "test_iter", "time_diff": 8.59144452}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:47][INFO] logging.py:   99: json_stats: {"cur_iter": "506", "eta": "0:02:17", "split": "test_iter", "time_diff": 1.69967659}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:49][INFO] logging.py:   99: json_stats: {"cur_iter": "507", "eta": "0:02:15", "split": "test_iter", "time_diff": 1.69174587}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:50][INFO] logging.py:   99: json_stats: {"cur_iter": "508", "eta": "0:02:14", "split": "test_iter", "time_diff": 1.69755059}
exponential temporal pooling in test
alpha:0.25
[12/16 18:36:59][INFO] logging.py:   99: json_stats: {"cur_iter": "509", "eta": "0:12:03", "split": "test_iter", "time_diff": 9.27082975}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:01][INFO] logging.py:   99: json_stats: {"cur_iter": "510", "eta": "0:02:10", "split": "test_iter", "time_diff": 1.69203659}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:03][INFO] logging.py:   99: json_stats: {"cur_iter": "511", "eta": "0:02:08", "split": "test_iter", "time_diff": 1.69616722}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:05][INFO] logging.py:   99: json_stats: {"cur_iter": "512", "eta": "0:02:07", "split": "test_iter", "time_diff": 1.69689118}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:15][INFO] logging.py:   99: json_stats: {"cur_iter": "513", "eta": "0:12:28", "split": "test_iter", "time_diff": 10.11385739}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:16][INFO] logging.py:   99: json_stats: {"cur_iter": "514", "eta": "0:02:03", "split": "test_iter", "time_diff": 1.69569578}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:18][INFO] logging.py:   99: json_stats: {"cur_iter": "515", "eta": "0:02:01", "split": "test_iter", "time_diff": 1.69425994}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:20][INFO] logging.py:   99: json_stats: {"cur_iter": "516", "eta": "0:02:01", "split": "test_iter", "time_diff": 1.70491958}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:29][INFO] logging.py:   99: json_stats: {"cur_iter": "517", "eta": "0:10:17", "split": "test_iter", "time_diff": 8.82300877}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:30][INFO] logging.py:   99: json_stats: {"cur_iter": "518", "eta": "0:01:56", "split": "test_iter", "time_diff": 1.69131516}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:32][INFO] logging.py:   99: json_stats: {"cur_iter": "519", "eta": "0:01:55", "split": "test_iter", "time_diff": 1.69425424}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:34][INFO] logging.py:   99: json_stats: {"cur_iter": "520", "eta": "0:01:53", "split": "test_iter", "time_diff": 1.69381558}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:45][INFO] logging.py:   99: json_stats: {"cur_iter": "521", "eta": "0:11:54", "split": "test_iter", "time_diff": 10.81999350}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:46][INFO] logging.py:   99: json_stats: {"cur_iter": "522", "eta": "0:01:50", "split": "test_iter", "time_diff": 1.69595031}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:48][INFO] logging.py:   99: json_stats: {"cur_iter": "523", "eta": "0:01:48", "split": "test_iter", "time_diff": 1.69708546}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:50][INFO] logging.py:   99: json_stats: {"cur_iter": "524", "eta": "0:01:46", "split": "test_iter", "time_diff": 1.69687653}
exponential temporal pooling in test
alpha:0.25
[12/16 18:37:59][INFO] logging.py:   99: json_stats: {"cur_iter": "525", "eta": "0:10:07", "split": "test_iter", "time_diff": 9.79257210}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:01][INFO] logging.py:   99: json_stats: {"cur_iter": "526", "eta": "0:01:43", "split": "test_iter", "time_diff": 1.70059581}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:03][INFO] logging.py:   99: json_stats: {"cur_iter": "527", "eta": "0:01:41", "split": "test_iter", "time_diff": 1.69629921}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:05][INFO] logging.py:   99: json_stats: {"cur_iter": "528", "eta": "0:01:39", "split": "test_iter", "time_diff": 1.69404620}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:14][INFO] logging.py:   99: json_stats: {"cur_iter": "529", "eta": "0:08:47", "split": "test_iter", "time_diff": 9.08661708}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:15][INFO] logging.py:   99: json_stats: {"cur_iter": "530", "eta": "0:01:36", "split": "test_iter", "time_diff": 1.69177839}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:17][INFO] logging.py:   99: json_stats: {"cur_iter": "531", "eta": "0:01:35", "split": "test_iter", "time_diff": 1.69681704}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:19][INFO] logging.py:   99: json_stats: {"cur_iter": "532", "eta": "0:01:33", "split": "test_iter", "time_diff": 1.70103985}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:28][INFO] logging.py:   99: json_stats: {"cur_iter": "533", "eta": "0:08:07", "split": "test_iter", "time_diff": 9.02733290}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:30][INFO] logging.py:   99: json_stats: {"cur_iter": "534", "eta": "0:02:09", "split": "test_iter", "time_diff": 2.44192670}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:32][INFO] logging.py:   99: json_stats: {"cur_iter": "535", "eta": "0:01:28", "split": "test_iter", "time_diff": 1.70326248}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:34][INFO] logging.py:   99: json_stats: {"cur_iter": "536", "eta": "0:01:26", "split": "test_iter", "time_diff": 1.69655100}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:43][INFO] logging.py:   99: json_stats: {"cur_iter": "537", "eta": "0:07:42", "split": "test_iter", "time_diff": 9.25723070}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:45][INFO] logging.py:   99: json_stats: {"cur_iter": "538", "eta": "0:01:50", "split": "test_iter", "time_diff": 2.25463330}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:47][INFO] logging.py:   99: json_stats: {"cur_iter": "539", "eta": "0:01:21", "split": "test_iter", "time_diff": 1.70518993}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:49][INFO] logging.py:   99: json_stats: {"cur_iter": "540", "eta": "0:01:19", "split": "test_iter", "time_diff": 1.69534360}
exponential temporal pooling in test
alpha:0.25
[12/16 18:38:59][INFO] logging.py:   99: json_stats: {"cur_iter": "541", "eta": "0:08:03", "split": "test_iter", "time_diff": 10.52075802}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:01][INFO] logging.py:   99: json_stats: {"cur_iter": "542", "eta": "0:01:16", "split": "test_iter", "time_diff": 1.69793439}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:02][INFO] logging.py:   99: json_stats: {"cur_iter": "543", "eta": "0:01:14", "split": "test_iter", "time_diff": 1.69889281}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:04][INFO] logging.py:   99: json_stats: {"cur_iter": "544", "eta": "0:01:13", "split": "test_iter", "time_diff": 1.69958852}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:14][INFO] logging.py:   99: json_stats: {"cur_iter": "545", "eta": "0:07:02", "split": "test_iter", "time_diff": 10.05449172}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:16][INFO] logging.py:   99: json_stats: {"cur_iter": "546", "eta": "0:01:09", "split": "test_iter", "time_diff": 1.70168086}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:18][INFO] logging.py:   99: json_stats: {"cur_iter": "547", "eta": "0:01:07", "split": "test_iter", "time_diff": 1.69503418}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:19][INFO] logging.py:   99: json_stats: {"cur_iter": "548", "eta": "0:01:06", "split": "test_iter", "time_diff": 1.69463890}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:31][INFO] logging.py:   99: json_stats: {"cur_iter": "549", "eta": "0:07:05", "split": "test_iter", "time_diff": 11.19100366}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:32][INFO] logging.py:   99: json_stats: {"cur_iter": "550", "eta": "0:01:02", "split": "test_iter", "time_diff": 1.69768013}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:34][INFO] logging.py:   99: json_stats: {"cur_iter": "551", "eta": "0:01:00", "split": "test_iter", "time_diff": 1.69355754}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:36][INFO] logging.py:   99: json_stats: {"cur_iter": "552", "eta": "0:00:59", "split": "test_iter", "time_diff": 1.70320351}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:46][INFO] logging.py:   99: json_stats: {"cur_iter": "553", "eta": "0:05:53", "split": "test_iter", "time_diff": 10.39911650}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:48][INFO] logging.py:   99: json_stats: {"cur_iter": "554", "eta": "0:00:55", "split": "test_iter", "time_diff": 1.69584966}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:49][INFO] logging.py:   99: json_stats: {"cur_iter": "555", "eta": "0:00:54", "split": "test_iter", "time_diff": 1.69229194}
exponential temporal pooling in test
alpha:0.25
[12/16 18:39:51][INFO] logging.py:   99: json_stats: {"cur_iter": "556", "eta": "0:00:52", "split": "test_iter", "time_diff": 1.69322749}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:01][INFO] logging.py:   99: json_stats: {"cur_iter": "557", "eta": "0:04:54", "split": "test_iter", "time_diff": 9.80277247}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:03][INFO] logging.py:   99: json_stats: {"cur_iter": "558", "eta": "0:00:49", "split": "test_iter", "time_diff": 1.70352065}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:04][INFO] logging.py:   99: json_stats: {"cur_iter": "559", "eta": "0:00:47", "split": "test_iter", "time_diff": 1.69705501}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:06][INFO] logging.py:   99: json_stats: {"cur_iter": "560", "eta": "0:00:45", "split": "test_iter", "time_diff": 1.69385369}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:16][INFO] logging.py:   99: json_stats: {"cur_iter": "561", "eta": "0:04:17", "split": "test_iter", "time_diff": 9.91331466}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:18][INFO] logging.py:   99: json_stats: {"cur_iter": "562", "eta": "0:00:42", "split": "test_iter", "time_diff": 1.69519587}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:19][INFO] logging.py:   99: json_stats: {"cur_iter": "563", "eta": "0:00:40", "split": "test_iter", "time_diff": 1.69816628}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:21][INFO] logging.py:   99: json_stats: {"cur_iter": "564", "eta": "0:00:38", "split": "test_iter", "time_diff": 1.69314355}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:31][INFO] logging.py:   99: json_stats: {"cur_iter": "565", "eta": "0:03:34", "split": "test_iter", "time_diff": 9.76033140}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:33][INFO] logging.py:   99: json_stats: {"cur_iter": "566", "eta": "0:00:35", "split": "test_iter", "time_diff": 1.69581962}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:34][INFO] logging.py:   99: json_stats: {"cur_iter": "567", "eta": "0:00:33", "split": "test_iter", "time_diff": 1.69133469}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:36][INFO] logging.py:   99: json_stats: {"cur_iter": "568", "eta": "0:00:32", "split": "test_iter", "time_diff": 1.70238715}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:46][INFO] logging.py:   99: json_stats: {"cur_iter": "569", "eta": "0:03:01", "split": "test_iter", "time_diff": 10.09131493}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:48][INFO] logging.py:   99: json_stats: {"cur_iter": "570", "eta": "0:00:28", "split": "test_iter", "time_diff": 1.69447561}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:49][INFO] logging.py:   99: json_stats: {"cur_iter": "571", "eta": "0:00:27", "split": "test_iter", "time_diff": 1.69449781}
exponential temporal pooling in test
alpha:0.25
[12/16 18:40:51][INFO] logging.py:   99: json_stats: {"cur_iter": "572", "eta": "0:00:25", "split": "test_iter", "time_diff": 1.69348811}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:01][INFO] logging.py:   99: json_stats: {"cur_iter": "573", "eta": "0:02:13", "split": "test_iter", "time_diff": 9.52114744}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:02][INFO] logging.py:   99: json_stats: {"cur_iter": "574", "eta": "0:00:22", "split": "test_iter", "time_diff": 1.69941660}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:04][INFO] logging.py:   99: json_stats: {"cur_iter": "575", "eta": "0:00:20", "split": "test_iter", "time_diff": 1.70235236}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:06][INFO] logging.py:   99: json_stats: {"cur_iter": "576", "eta": "0:00:18", "split": "test_iter", "time_diff": 1.69181637}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:15][INFO] logging.py:   99: json_stats: {"cur_iter": "577", "eta": "0:01:34", "split": "test_iter", "time_diff": 9.41992766}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:17][INFO] logging.py:   99: json_stats: {"cur_iter": "578", "eta": "0:00:15", "split": "test_iter", "time_diff": 1.70289770}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:19][INFO] logging.py:   99: json_stats: {"cur_iter": "579", "eta": "0:00:13", "split": "test_iter", "time_diff": 1.69874296}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:20][INFO] logging.py:   99: json_stats: {"cur_iter": "580", "eta": "0:00:11", "split": "test_iter", "time_diff": 1.69089407}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:29][INFO] logging.py:   99: json_stats: {"cur_iter": "581", "eta": "0:00:54", "split": "test_iter", "time_diff": 9.10397500}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:31][INFO] logging.py:   99: json_stats: {"cur_iter": "582", "eta": "0:00:08", "split": "test_iter", "time_diff": 1.69479772}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:33][INFO] logging.py:   99: json_stats: {"cur_iter": "583", "eta": "0:00:06", "split": "test_iter", "time_diff": 1.69858407}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:34][INFO] logging.py:   99: json_stats: {"cur_iter": "584", "eta": "0:00:05", "split": "test_iter", "time_diff": 1.69410591}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:36][INFO] logging.py:   99: json_stats: {"cur_iter": "585", "eta": "0:00:03", "split": "test_iter", "time_diff": 1.69586974}
exponential temporal pooling in test
alpha:0.25
[12/16 18:41:37][INFO] logging.py:   99: json_stats: {"cur_iter": "586", "eta": "0:00:00", "split": "test_iter", "time_diff": 0.95984591}
[12/16 18:41:41][INFO] test_net.py:  234: Successfully saved prediction results to /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/testing/temp.pyth
[12/16 18:41:41][INFO] logging.py:   99: json_stats: {"split": "test_final", "top1_acc": "18.32", "top5_acc": "44.33"}
[12/16 18:41:41][INFO] test_net.py:  474: Finalized testing with 3 temporal clips and 1 spatial crops
[12/16 18:41:41][INFO] test_net.py:  496: _p150.67_f10.00_3a18.32 Top5 Acc: 44.33 MEM: 16.99 f: 10.0000
[12/16 18:41:41][INFO] test_net.py:  497: _p150.67_f10.00_3a18.32
