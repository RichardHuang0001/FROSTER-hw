nohup: ignoring input
config files: ['configs/Kinetics/TemporalCLIP_vitb16_8x16_STAdapter_SSV2.yaml']
[12/16 17:27:07][INFO] test_net.py:  319: Test with config:
[12/16 17:27:07][INFO] test_net.py:  320: AUG:
  AA_TYPE: rand-m7-n4-mstd0.5-inc1
  COLOR_JITTER: 0.4
  ENABLE: False
  GEN_MASK_LOADER: False
  INTERPOLATION: bicubic
  MASK_FRAMES: False
  MASK_RATIO: 0.0
  MASK_TUBE: False
  MASK_WINDOW_SIZE: [8, 7, 7]
  MAX_MASK_PATCHES_PER_BLOCK: None
  NUM_SAMPLE: 2
  RE_COUNT: 1
  RE_MODE: pixel
  RE_PROB: 0.25
  RE_SPLIT: False
AVA:
  ANNOTATION_DIR: /mnt/vol/gfsai-flash3-east/ai-group/users/haoqifan/ava/frame_list/
  BGR: False
  DETECTION_SCORE_THRESH: 0.9
  EXCLUSION_FILE: ava_val_excluded_timestamps_v2.2.csv
  FRAME_DIR: /mnt/fair-flash3-east/ava_trainval_frames.img/
  FRAME_LIST_DIR: /mnt/vol/gfsai-flash3-east/ai-group/users/haoqifan/ava/frame_list/
  FULL_TEST_ON_VAL: False
  GROUNDTRUTH_FILE: ava_val_v2.2.csv
  IMG_PROC_BACKEND: cv2
  LABEL_MAP_FILE: ava_action_list_v2.2_for_activitynet_2019.pbtxt
  TEST_FORCE_FLIP: False
  TEST_LISTS: ['val.csv']
  TEST_PREDICT_BOX_LISTS: ['ava_val_predicted_boxes.csv']
  TRAIN_GT_BOX_LISTS: ['ava_train_v2.2.csv']
  TRAIN_LISTS: ['train_all.csv']
  TRAIN_PCA_JITTER_ONLY: True
  TRAIN_PREDICT_BOX_LISTS: []
  TRAIN_USE_COLOR_AUGMENTATION: False
BENCHMARK:
  LOG_PERIOD: 100
  NUM_EPOCHS: 5
  SHUFFLE: True
BN:
  GLOBAL_SYNC: False
  NORM_TYPE: batchnorm
  NUM_BATCHES_PRECISE: 200
  NUM_SPLITS: 1
  NUM_SYNC_DEVICES: 1
  USE_PRECISE_STATS: False
  WEIGHT_DECAY: 0.0
CONTRASTIVE:
  BN_MLP: False
  BN_SYNC_MLP: False
  DELTA_CLIPS_MAX: inf
  DELTA_CLIPS_MIN: -inf
  DIM: 128
  INTERP_MEMORY: False
  KNN_ON: True
  LENGTH: 239975
  LOCAL_SHUFFLE_BN: True
  MEM_TYPE: 1d
  MLP_DIM: 2048
  MOCO_MULTI_VIEW_QUEUE: False
  MOMENTUM: 0.5
  MOMENTUM_ANNEALING: False
  NUM_CLASSES_DOWNSTREAM: 400
  NUM_MLP_LAYERS: 1
  PREDICTOR_DEPTHS: []
  QUEUE_LEN: 65536
  SEQUENTIAL: False
  SIMCLR_DIST_ON: True
  SWAV_QEUE_LEN: 0
  T: 0.07
  TYPE: mem
DATA:
  COLOR_RND_GRAYSCALE: 0.0
  DECODING_BACKEND: pyav
  DECODING_SHORT_SIZE: 256
  DUMMY_LOAD: False
  ENSEMBLE_METHOD: sum
  IN22K_TRAINVAL: False
  IN22k_VAL_IN1K: 
  INDEX_LABEL_MAPPING_FILE: /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2/train_rephrased.json
  INPUT_CHANNEL_NUM: [3]
  INV_UNIFORM_SAMPLE: False
  IN_VAL_CROP_RATIO: 0.875
  LOADER_CHUNK_OVERALL_SIZE: 0
  LOADER_CHUNK_SIZE: 0
  MEAN: [0.48145466, 0.4578275, 0.40821073]
  MULTI_LABEL: False
  NUM_FRAMES: 8
  PATH_LABEL_SEPARATOR: ,
  PATH_PREFIX: /mnt/SSD8T/home/huangwei/projects/FROSTER/data/ssv2/videos
  PATH_TO_DATA_DIR: /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2
  PATH_TO_PRELOAD_IMDB: 
  RANDOM_FLIP: True
  REVERSE_INPUT_CHANNEL: False
  SAMPLING_RATE: 16
  SKIP_ROWS: 0
  SSL_BLUR_SIGMA_MAX: [0.0, 2.0]
  SSL_BLUR_SIGMA_MIN: [0.0, 0.1]
  SSL_COLOR_BRI_CON_SAT: [0.4, 0.4, 0.4]
  SSL_COLOR_HUE: 0.1
  SSL_COLOR_JITTER: False
  SSL_MOCOV2_AUG: False
  STD: [0.26862954, 0.26130258, 0.27577711]
  TARGET_FPS: 30
  TEST_CROP_SIZE: 224
  TIME_DIFF_PROB: 0.0
  TRAIN_CROP_NUM_SPATIAL: 1
  TRAIN_CROP_NUM_TEMPORAL: 1
  TRAIN_CROP_SIZE: 224
  TRAIN_JITTER_ASPECT_RELATIVE: []
  TRAIN_JITTER_FPS: 0.0
  TRAIN_JITTER_MOTION_SHIFT: False
  TRAIN_JITTER_SCALES: [224, 256]
  TRAIN_JITTER_SCALES_RELATIVE: []
  TRAIN_PCA_EIGVAL: [0.225, 0.224, 0.229]
  TRAIN_PCA_EIGVEC: [[-0.5675, 0.7192, 0.4009], [-0.5808, -0.0045, -0.814], [-0.5836, -0.6948, 0.4203]]
  USE_OFFSET_SAMPLING: True
DATA_LOADER:
  ENABLE_MULTI_THREAD_DECODE: False
  NUM_WORKERS: 4
  PIN_MEMORY: True
DEMO:
  BUFFER_SIZE: 0
  CLIP_VIS_SIZE: 10
  COMMON_CLASS_NAMES: ['watch (a person)', 'talk to (e.g., self, a person, a group)', 'listen to (a person)', 'touch (an object)', 'carry/hold (an object)', 'walk', 'sit', 'lie/sleep', 'bend/bow (at the waist)']
  COMMON_CLASS_THRES: 0.7
  DETECTRON2_CFG: COCO-Detection/faster_rcnn_R_50_FPN_3x.yaml
  DETECTRON2_THRESH: 0.9
  DETECTRON2_WEIGHTS: detectron2://COCO-Detection/faster_rcnn_R_50_FPN_3x/137849458/model_final_280758.pkl
  DISPLAY_HEIGHT: 0
  DISPLAY_WIDTH: 0
  ENABLE: False
  FPS: 30
  GT_BOXES: 
  INPUT_FORMAT: BGR
  INPUT_VIDEO: 
  LABEL_FILE_PATH: 
  NUM_CLIPS_SKIP: 0
  NUM_VIS_INSTANCES: 2
  OUTPUT_FILE: 
  OUTPUT_FPS: -1
  PREDS_BOXES: 
  SLOWMO: 1
  STARTING_SECOND: 900
  THREAD_ENABLE: False
  UNCOMMON_CLASS_THRES: 0.3
  VIS_MODE: thres
  WEBCAM: -1
DETECTION:
  ALIGNED: True
  ENABLE: False
  ROI_XFORM_RESOLUTION: 7
  SPATIAL_SCALE_FACTOR: 16
DIST_BACKEND: nccl
IMAGENET_SIMPLELABEL_PATH: None
LOG_MODEL_INFO: True
LOG_PERIOD: 10
MASK:
  DECODER_DEPTH: 0
  DECODER_EMBED_DIM: 512
  DECODER_SEP_POS_EMBED: False
  DEC_KV_KERNEL: []
  DEC_KV_STRIDE: []
  ENABLE: False
  HEAD_TYPE: separate
  MAE_ON: False
  MAE_RND_MASK: False
  NORM_PRED_PIXEL: True
  PER_FRAME_MASKING: False
  PRED_HOG: False
  PRETRAIN_DEPTH: [15]
  SCALE_INIT_BY_DEPTH: False
  TIME_STRIDE_LOSS: True
MIXUP:
  ALPHA: 0.8
  CUTMIX_ALPHA: 1.0
  ENABLE: False
  LABEL_SMOOTH_VALUE: 0.1
  PROB: 1.0
  SWITCH_PROB: 0.5
MODEL:
  ACT_CHECKPOINT: False
  ADAPT_FINETUNE_FACTOR: 1.0
  ARCH: vitb16
  CLS_LOSS_RATIO: 1.0
  CONTEXT_LENGTH: 77
  DEFAULT_FINETUNE_FACTOR: 1.0
  DETACH_FINAL_FC: False
  DISTILLATION_RATIO: 2.0
  DROPCONNECT_RATE: 0.0
  DROPOUT_RATE: 0.5
  ENSEMBLE_PRED: False
  ENSEMBLE_RAWMODEL_RATIO: 0.0
  EXPERT_FINETUNE_FACTOR: 1.0
  EXPERT_INSERT_LAYERS: [10, 11]
  FC_INIT_STD: 0.01
  FINETUNE_FACTOR: 1.0
  FP16_ALLREDUCE: False
  FROZEN_BN: False
  HEAD_ACT: softmax
  KEEP_RAW_MODEL: False
  LOSS_FREQ_TYPE: mse
  LOSS_FUNC: cross_entropy
  MLP_FINETUNE_FACTOR: 1.0
  MODEL_NAME: TemporalClipVideo
  MULTI_PATHWAY_ARCH: ['slowfast']
  NUM_CLASSES: 87
  NUM_EXPERTS: 0
  PROMPT_NUM: 1
  RAW_MODEL_DISTILLATION: False
  RECORD_ROUTING: False
  ROUTING_FINETUNE_FACTOR: 1.0
  ROUTING_FREQUENCE_CONSTRAIN: 0.5
  ROUTING_FREQ_CONS_FACTOR: 1.0
  ROUTING_TYPE: patch-level
  SINGLE_PATHWAY_ARCH: ['2d', 'c2d', 'i3d', 'slow', 'x3d', 'mvit', 'maskmvit', 'vitb32', 'vitb16', 'vitl14']
  STATIC_GRAPH: False
  TEMPORAL_MODELING_TYPE: expand_temporal_view
  TEXT_PROMPT: False
  USE_CHECKPOINT: False
MULTIGRID:
  BN_BASE_SIZE: 8
  DEFAULT_B: 0
  DEFAULT_S: 0
  DEFAULT_T: 0
  EPOCH_FACTOR: 1.5
  EVAL_FREQ: 3
  LONG_CYCLE: False
  LONG_CYCLE_FACTORS: [(0.25, 0.7071067811865476), (0.5, 0.7071067811865476), (0.5, 1), (1, 1)]
  LONG_CYCLE_SAMPLING_RATE: 0
  SHORT_CYCLE: False
  SHORT_CYCLE_FACTORS: [0.5, 0.7071067811865476]
MVIT:
  CLS_EMBED_ON: True
  DEPTH: 16
  DIM_MUL: []
  DIM_MUL_IN_ATT: False
  DROPOUT_RATE: 0.0
  DROPPATH_RATE: 0.1
  EMBED_DIM: 96
  HEAD_INIT_SCALE: 1.0
  HEAD_MUL: []
  LAYER_SCALE_INIT_VALUE: 0.0
  MLP_RATIO: 4.0
  MODE: conv
  NORM: layernorm
  NORM_STEM: False
  NUM_HEADS: 1
  PATCH_2D: False
  PATCH_KERNEL: [3, 7, 7]
  PATCH_PADDING: [2, 4, 4]
  PATCH_STRIDE: [2, 4, 4]
  POOL_FIRST: False
  POOL_KVQ_KERNEL: None
  POOL_KV_STRIDE: []
  POOL_KV_STRIDE_ADAPTIVE: None
  POOL_Q_STRIDE: []
  QKV_BIAS: True
  REL_POS_SPATIAL: False
  REL_POS_TEMPORAL: False
  REL_POS_ZERO_INIT: False
  RESIDUAL_POOLING: False
  REV:
    BUFFER_LAYERS: []
    ENABLE: False
    PRE_Q_FUSION: avg
    RESPATH_FUSE: concat
    RES_PATH: conv
  SEPARATE_QKV: False
  SEP_POS_EMBED: False
  USE_ABS_POS: True
  USE_FIXED_SINCOS_POS: False
  USE_MEAN_POOLING: False
  ZERO_DECAY_POS_CLS: True
NONLOCAL:
  GROUP: [[1], [1], [1], [1]]
  INSTANTIATION: dot_product
  LOCATION: [[[]], [[]], [[]], [[]]]
  POOL: [[[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]], [[1, 2, 2], [1, 2, 2]]]
NUM_GPUS: 1
NUM_SHARDS: 1
OUTPUT_DIR: /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/testing
RESNET:
  DEPTH: 50
  INPLACE_RELU: True
  NUM_BLOCK_TEMP_KERNEL: [[3], [4], [6], [3]]
  NUM_GROUPS: 1
  SPATIAL_DILATIONS: [[1], [1], [1], [1]]
  SPATIAL_STRIDES: [[1], [2], [2], [2]]
  STRIDE_1X1: False
  TRANS_FUNC: bottleneck_transform
  WIDTH_PER_GROUP: 64
  ZERO_INIT_FINAL_BN: False
  ZERO_INIT_FINAL_CONV: False
RNG_SEED: 0
SHARD_ID: 0
SLOWFAST:
  ALPHA: 8
  BETA_INV: 8
  FUSION_CONV_CHANNEL_RATIO: 2
  FUSION_KERNEL_SZ: 5
SOLVER:
  BASE_LR: 3.33e-06
  BASE_LR_SCALE_NUM_SHARDS: True
  BETAS: (0.9, 0.999)
  CLIP_GRAD_L2NORM: 1.0
  CLIP_GRAD_VAL: None
  COSINE_AFTER_WARMUP: True
  COSINE_END_LR: 1e-07
  COSINE_RESTART_EPOCH: 0
  DAMPENING: 0.0
  GAMMA: 0.1
  LARS_ON: False
  LAYER_DECAY: 1.0
  LRS: []
  LR_POLICY: cosine
  MAX_EPOCH: 22
  MOMENTUM: 0.9
  NESTEROV: True
  OPTIMIZING_METHOD: adamw
  STEPS: []
  STEP_SIZE: 1
  WARMUP_EPOCHS: 2.0
  WARMUP_FACTOR: 0.1
  WARMUP_START_LR: 1e-07
  WEIGHT_DECAY: 0.01
  ZERO_WD_1D_PARAM: True
TASK: 
TENSORBOARD:
  CATEGORIES_PATH: 
  CLASS_NAMES_PATH: 
  CONFUSION_MATRIX:
    ENABLE: False
    FIGSIZE: [8, 8]
    SUBSET_PATH: 
  ENABLE: False
  HISTOGRAM:
    ENABLE: False
    FIGSIZE: [8, 8]
    SUBSET_PATH: 
    TOPK: 10
  LOG_DIR: 
  MODEL_VIS:
    ACTIVATIONS: False
    COLORMAP: Pastel2
    ENABLE: False
    GRAD_CAM:
      COLORMAP: viridis
      ENABLE: True
      LAYER_LIST: []
      USE_TRUE_LABEL: False
    INPUT_VIDEO: False
    LAYER_LIST: []
    MODEL_WEIGHTS: False
    TOPK_PREDS: 1
  PREDICTIONS_PATH: 
  WRONG_PRED_VIS:
    ENABLE: False
    SUBSET_PATH: 
    TAG: Incorrectly classified videos.
TEST:
  BATCH_SIZE: 90
  CHECKPOINT_FILE_PATH: 
  CHECKPOINT_TYPE: pytorch
  CLIP_ORI_PATH: /mnt/SSD8T/home/huangwei/.cache/clip/ViT-B-16.pt
  CUSTOM_LOAD: True
  CUSTOM_LOAD_FILE: /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/checkpoints/checkpoint_epoch_00012.pyth
  DATASET: kinetics
  ENABLE: True
  NUM_ENSEMBLE_VIEWS: 3
  NUM_SPATIAL_CROPS: 1
  NUM_TEMPORAL_CLIPS: [3]
  OPENSET: False
  PATCHING_MODEL: False
  PATCHING_RATIO: 0.5
  SAVE_RESULTS_PATH: temp.pyth
  UPDATE_STATE: False
TEST_FILE: val.csv
TRAIN:
  ADAPT_ZS_CONS_RATIO: False
  AUTO_RESUME: True
  BATCH_SIZE: 64
  CHECKPOINT_CLEAR_NAME_PATTERN: ()
  CHECKPOINT_EPOCH_RESET: False
  CHECKPOINT_FILE_PATH: 
  CHECKPOINT_INFLATE: False
  CHECKPOINT_IN_INIT: False
  CHECKPOINT_PERIOD: 5
  CHECKPOINT_TYPE: pytorch
  CLIP_ORI_PATH: None
  CUSTOM_LOAD: False
  CUSTOM_LOAD_FILE: None
  DATASET: kinetics
  ENABLE: False
  EVAL_PERIOD: 5
  EWC_CONSTRAIN_RATIO: 1.0
  EWC_IDENTITY_FISHER: False
  EWC_IGNORE_LOGIT_SCALE: False
  EWC_LOAD_FILE: None
  EWC_SET: False
  KILL_LOSS_EXPLOSION_FACTOR: 0.0
  LINEAR_CONNECT_CLIMB: False
  LINEAR_CONNECT_LOSS_RATIO: 1.0
  LINEAR_CONNECT_SAMPLE: True
  LINEAR_CONNECT_SAMPLE_L: 0.4
  LINEAR_CONNECT_SAMPLE_R: 0.6
  MIXED_PRECISION: False
  ZS_CONS: False
  ZS_CONS_RATIO: 0.8
  ZS_INIT_CONS: False
  ZS_RESTART_CONS: False
  ZS_RESTART_EPOCH: -1
TRAIN_FILE: train.csv
TUNE_HEAD: False
VAL_FILE: val.csv
VAL_MODE: False
VIS_MASK:
  ENABLE: False
X3D:
  BN_LIN5: False
  BOTTLENECK_FACTOR: 1.0
  CHANNELWISE_3x3x3: True
  DEPTH_FACTOR: 1.0
  DIM_C1: 12
  DIM_C5: 2048
  SCALE_RES2: False
  WIDTH_FACTOR: 1.0
[12/16 17:27:11][INFO] temporalclip_video_model.py:  657: load pretrained CLIP:<All keys matched successfully>
[12/16 17:27:14][INFO] test_net.py:  333: Loading custom network weights from /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/checkpoints/checkpoint_epoch_00012.pyth.
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.positional_embedding
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.text_projection
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.logit_scale
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.class_embedding
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.positional_embedding
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.proj
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.conv1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.ln_pre.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.ln_pre.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.0.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.1.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.2.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.3.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.4.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.5.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.6.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.7.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.8.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.9.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.10.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.transformer.resblocks.11.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.ln_post.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.visual.ln_post.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.0.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.1.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.2.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.3.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.4.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.5.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.6.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.7.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.8.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.9.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.10.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.in_proj_weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.in_proj_bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.out_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.attn.out_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_1.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_1.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_fc.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_fc.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_proj.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.mlp.c_proj.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_2.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.transformer.resblocks.11.ln_2.bias
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.token_embedding.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.ln_final.weight
[12/16 17:27:15][INFO] test_net.py:  404: missing parameters
[12/16 17:27:15][INFO] test_net.py:  405: raw_model.ln_final.bias
[12/16 17:27:15][INFO] misc.py:  185: Model:
TemporalClipVideo(
  (model): WCLIP(
    (visual): TemporalVisionTransformer(
      (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
      (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (transformer): TSTransformer(
        (resblocks): Sequential(
          (0): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (token_embedding): Embedding(49408, 512)
    (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (projector_v): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
  (projector_t): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
)
[12/16 17:27:15][INFO] misc.py:  187: Params: 150,669,313
[12/16 17:27:15][INFO] misc.py:  188: Mem: 0.7674283981323242 MB
[12/16 17:27:15][INFO] misc.py:  197: nvidia-smi
Mon Dec 16 17:27:15 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 525.125.06   Driver Version: 525.125.06   CUDA Version: 12.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0 Off |                  Off |
| 42%   22C    P8    30W / 450W |  19822MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA GeForce ...  Off  | 00000000:23:00.0 Off |                  Off |
| 42%   22C    P8    21W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA GeForce ...  Off  | 00000000:41:00.0 Off |                  Off |
| 41%   23C    P8    23W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA GeForce ...  Off  | 00000000:61:00.0 Off |                  Off |
| 41%   23C    P8    17W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   4  NVIDIA GeForce ...  Off  | 00000000:81:00.0 Off |                  Off |
| 42%   25C    P2    66W / 450W |   2920MiB / 24564MiB |     13%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   5  NVIDIA GeForce ...  Off  | 00000000:A1:00.0 Off |                  Off |
| 41%   22C    P8    28W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   6  NVIDIA GeForce ...  Off  | 00000000:C1:00.0 Off |                  Off |
| 42%   23C    P8    14W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   7  NVIDIA GeForce ...  Off  | 00000000:E1:00.0 Off |                  Off |
| 40%   22C    P8    19W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    0   N/A  N/A   1101568      C   ...3/envs/realnet/bin/python    19814MiB |
|    1   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    2   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    3   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A   1291326      C   python                           2910MiB |
|    5   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    6   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    7   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
+-----------------------------------------------------------------------------+
[12/16 17:27:16][INFO] misc.py:  185: Model:
TemporalClipVideo(
  (model): WCLIP(
    (visual): TemporalVisionTransformer(
      (conv1): Conv2d(3, 768, kernel_size=(16, 16), stride=(16, 16), bias=False)
      (ln_pre): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
      (transformer): TSTransformer(
        (resblocks): Sequential(
          (0): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (1): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (2): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (3): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (4): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (5): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (6): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (7): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (8): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (9): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (10): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
          (11): TimesAttentionBlock(
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (ln_post): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
    (transformer): Transformer(
      (resblocks): Sequential(
        (0): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (1): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (2): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (3): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (4): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (5): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (6): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (7): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (8): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (9): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (10): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
        (11): ResidualAttentionBlock(
          (attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
          )
          (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          (mlp): Sequential(
            (c_fc): Linear(in_features=512, out_features=2048, bias=True)
            (gelu): QuickGELU()
            (c_proj): Linear(in_features=2048, out_features=512, bias=True)
          )
          (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
        )
      )
    )
    (token_embedding): Embedding(49408, 512)
    (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
  )
  (projector_v): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
  (projector_t): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=False)
    (1): GELU()
    (2): Linear(in_features=512, out_features=512, bias=False)
  )
)
[12/16 17:27:16][INFO] misc.py:  187: Params: 150,669,313
[12/16 17:27:16][INFO] misc.py:  188: Mem: 0.7674283981323242 MB
[12/16 17:27:16][INFO] misc.py:  197: nvidia-smi
Mon Dec 16 17:27:16 2024       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 525.125.06   Driver Version: 525.125.06   CUDA Version: 12.0     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0 Off |                  Off |
| 42%   22C    P8    30W / 450W |  19822MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   1  NVIDIA GeForce ...  Off  | 00000000:23:00.0 Off |                  Off |
| 41%   22C    P8    20W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   2  NVIDIA GeForce ...  Off  | 00000000:41:00.0 Off |                  Off |
| 41%   23C    P8    23W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   3  NVIDIA GeForce ...  Off  | 00000000:61:00.0 Off |                  Off |
| 40%   23C    P8    18W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   4  NVIDIA GeForce ...  Off  | 00000000:81:00.0 Off |                  Off |
| 42%   25C    P2    61W / 450W |   2920MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   5  NVIDIA GeForce ...  Off  | 00000000:A1:00.0 Off |                  Off |
| 41%   22C    P8    28W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   6  NVIDIA GeForce ...  Off  | 00000000:C1:00.0 Off |                  Off |
| 42%   23C    P8    14W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
|   7  NVIDIA GeForce ...  Off  | 00000000:E1:00.0 Off |                  Off |
| 40%   22C    P8    20W / 450W |      8MiB / 24564MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|    0   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    0   N/A  N/A   1101568      C   ...3/envs/realnet/bin/python    19814MiB |
|    1   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    2   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    3   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    4   N/A  N/A   1291326      C   python                           2910MiB |
|    5   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    6   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
|    7   N/A  N/A      3082      G   /usr/lib/xorg/Xorg                  4MiB |
+-----------------------------------------------------------------------------+
[12/16 17:27:17][INFO] kinetics.py:   94: Constructing Kinetics test...
path: ---------------------------- /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2/val.csv
[12/16 17:27:17][INFO] kinetics.py:  172: Constructing kinetics dataloader (size: 52686 skip_rows 0) from /mnt/SSD8T/home/huangwei/projects/FROSTER/zs_label_db/B2N_ssv2/val.csv 
[12/16 17:27:17][INFO] test_net.py:  434: Testing model for 586 iterations
exponential temporal pooling in test
alpha:0.3
[12/16 17:27:46][INFO] logging.py:   99: json_stats: {"cur_iter": "1", "eta": "3:41:33", "split": "test_iter", "time_diff": 22.68513870}
exponential temporal pooling in test
alpha:0.3
[12/16 17:27:48][INFO] logging.py:   99: json_stats: {"cur_iter": "2", "eta": "0:16:43", "split": "test_iter", "time_diff": 1.71561835}
exponential temporal pooling in test
alpha:0.3
[12/16 17:27:50][INFO] logging.py:   99: json_stats: {"cur_iter": "3", "eta": "0:16:32", "split": "test_iter", "time_diff": 1.70017718}
exponential temporal pooling in test
alpha:0.3
[12/16 17:27:52][INFO] logging.py:   99: json_stats: {"cur_iter": "4", "eta": "0:16:27", "split": "test_iter", "time_diff": 1.69434696}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:00][INFO] logging.py:   99: json_stats: {"cur_iter": "5", "eta": "1:21:26", "split": "test_iter", "time_diff": 8.39574521}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:02][INFO] logging.py:   99: json_stats: {"cur_iter": "6", "eta": "0:16:23", "split": "test_iter", "time_diff": 1.69291902}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:03][INFO] logging.py:   99: json_stats: {"cur_iter": "7", "eta": "0:16:21", "split": "test_iter", "time_diff": 1.69212789}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:05][INFO] logging.py:   99: json_stats: {"cur_iter": "8", "eta": "0:16:24", "split": "test_iter", "time_diff": 1.69971508}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:16][INFO] logging.py:   99: json_stats: {"cur_iter": "9", "eta": "1:42:14", "split": "test_iter", "time_diff": 10.61336003}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:17][INFO] logging.py:   99: json_stats: {"cur_iter": "10", "eta": "0:16:21", "split": "test_iter", "time_diff": 1.70023287}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:19][INFO] logging.py:   99: json_stats: {"cur_iter": "11", "eta": "0:16:18", "split": "test_iter", "time_diff": 1.69891593}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:21][INFO] logging.py:   99: json_stats: {"cur_iter": "12", "eta": "0:16:23", "split": "test_iter", "time_diff": 1.70968104}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:32][INFO] logging.py:   99: json_stats: {"cur_iter": "13", "eta": "1:44:52", "split": "test_iter", "time_diff": 10.96315340}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:33][INFO] logging.py:   99: json_stats: {"cur_iter": "14", "eta": "0:16:11", "split": "test_iter", "time_diff": 1.69555459}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:35][INFO] logging.py:   99: json_stats: {"cur_iter": "15", "eta": "0:16:14", "split": "test_iter", "time_diff": 1.70411725}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:37][INFO] logging.py:   99: json_stats: {"cur_iter": "16", "eta": "0:16:11", "split": "test_iter", "time_diff": 1.70165064}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:47][INFO] logging.py:   99: json_stats: {"cur_iter": "17", "eta": "1:34:38", "split": "test_iter", "time_diff": 9.96278036}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:49][INFO] logging.py:   99: json_stats: {"cur_iter": "18", "eta": "0:16:03", "split": "test_iter", "time_diff": 1.69360907}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:50][INFO] logging.py:   99: json_stats: {"cur_iter": "19", "eta": "0:16:07", "split": "test_iter", "time_diff": 1.70406340}
exponential temporal pooling in test
alpha:0.3
[12/16 17:28:52][INFO] logging.py:   99: json_stats: {"cur_iter": "20", "eta": "0:16:00", "split": "test_iter", "time_diff": 1.69430484}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:02][INFO] logging.py:   99: json_stats: {"cur_iter": "21", "eta": "1:32:56", "split": "test_iter", "time_diff": 9.85224578}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:03][INFO] logging.py:   99: json_stats: {"cur_iter": "22", "eta": "0:15:57", "split": "test_iter", "time_diff": 1.69419124}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:05][INFO] logging.py:   99: json_stats: {"cur_iter": "23", "eta": "0:15:59", "split": "test_iter", "time_diff": 1.70158512}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:07][INFO] logging.py:   99: json_stats: {"cur_iter": "24", "eta": "0:15:53", "split": "test_iter", "time_diff": 1.69297477}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:17][INFO] logging.py:   99: json_stats: {"cur_iter": "25", "eta": "1:32:55", "split": "test_iter", "time_diff": 9.92044266}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:19][INFO] logging.py:   99: json_stats: {"cur_iter": "26", "eta": "0:15:56", "split": "test_iter", "time_diff": 1.70566508}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:20][INFO] logging.py:   99: json_stats: {"cur_iter": "27", "eta": "0:15:51", "split": "test_iter", "time_diff": 1.69826235}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:22][INFO] logging.py:   99: json_stats: {"cur_iter": "28", "eta": "0:15:47", "split": "test_iter", "time_diff": 1.69492629}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:32][INFO] logging.py:   99: json_stats: {"cur_iter": "29", "eta": "1:32:58", "split": "test_iter", "time_diff": 9.99793315}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:34][INFO] logging.py:   99: json_stats: {"cur_iter": "30", "eta": "0:15:43", "split": "test_iter", "time_diff": 1.69313320}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:35][INFO] logging.py:   99: json_stats: {"cur_iter": "31", "eta": "0:15:42", "split": "test_iter", "time_diff": 1.69548825}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:37][INFO] logging.py:   99: json_stats: {"cur_iter": "32", "eta": "0:15:43", "split": "test_iter", "time_diff": 1.70089013}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:46][INFO] logging.py:   99: json_stats: {"cur_iter": "33", "eta": "1:24:53", "split": "test_iter", "time_diff": 9.19323114}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:48][INFO] logging.py:   99: json_stats: {"cur_iter": "34", "eta": "0:15:40", "split": "test_iter", "time_diff": 1.70036135}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:50][INFO] logging.py:   99: json_stats: {"cur_iter": "35", "eta": "0:15:38", "split": "test_iter", "time_diff": 1.69958530}
exponential temporal pooling in test
alpha:0.3
[12/16 17:29:51][INFO] logging.py:   99: json_stats: {"cur_iter": "36", "eta": "0:15:37", "split": "test_iter", "time_diff": 1.70120878}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:02][INFO] logging.py:   99: json_stats: {"cur_iter": "37", "eta": "1:37:36", "split": "test_iter", "time_diff": 10.64903110}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:04][INFO] logging.py:   99: json_stats: {"cur_iter": "38", "eta": "0:15:34", "split": "test_iter", "time_diff": 1.70252389}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:05][INFO] logging.py:   99: json_stats: {"cur_iter": "39", "eta": "0:15:37", "split": "test_iter", "time_diff": 1.71122673}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:07][INFO] logging.py:   99: json_stats: {"cur_iter": "40", "eta": "0:15:29", "split": "test_iter", "time_diff": 1.69865106}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:18][INFO] logging.py:   99: json_stats: {"cur_iter": "41", "eta": "1:38:14", "split": "test_iter", "time_diff": 10.79519346}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:20][INFO] logging.py:   99: json_stats: {"cur_iter": "42", "eta": "0:15:23", "split": "test_iter", "time_diff": 1.69526858}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:21][INFO] logging.py:   99: json_stats: {"cur_iter": "43", "eta": "0:15:22", "split": "test_iter", "time_diff": 1.69660165}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:23][INFO] logging.py:   99: json_stats: {"cur_iter": "44", "eta": "0:15:19", "split": "test_iter", "time_diff": 1.69355874}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:32][INFO] logging.py:   99: json_stats: {"cur_iter": "45", "eta": "1:20:11", "split": "test_iter", "time_diff": 8.87813044}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:34][INFO] logging.py:   99: json_stats: {"cur_iter": "46", "eta": "0:15:16", "split": "test_iter", "time_diff": 1.69473072}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:35][INFO] logging.py:   99: json_stats: {"cur_iter": "47", "eta": "0:15:16", "split": "test_iter", "time_diff": 1.69649032}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:37][INFO] logging.py:   99: json_stats: {"cur_iter": "48", "eta": "0:15:21", "split": "test_iter", "time_diff": 1.71050903}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:47][INFO] logging.py:   99: json_stats: {"cur_iter": "49", "eta": "1:31:00", "split": "test_iter", "time_diff": 10.15053459}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:49][INFO] logging.py:   99: json_stats: {"cur_iter": "50", "eta": "0:15:11", "split": "test_iter", "time_diff": 1.69802832}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:51][INFO] logging.py:   99: json_stats: {"cur_iter": "51", "eta": "0:15:20", "split": "test_iter", "time_diff": 1.71813380}
exponential temporal pooling in test
alpha:0.3
[12/16 17:30:52][INFO] logging.py:   99: json_stats: {"cur_iter": "52", "eta": "0:15:12", "split": "test_iter", "time_diff": 1.70629759}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:03][INFO] logging.py:   99: json_stats: {"cur_iter": "53", "eta": "1:36:06", "split": "test_iter", "time_diff": 10.79867823}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:05][INFO] logging.py:   99: json_stats: {"cur_iter": "54", "eta": "0:15:04", "split": "test_iter", "time_diff": 1.69779326}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:06][INFO] logging.py:   99: json_stats: {"cur_iter": "55", "eta": "0:15:03", "split": "test_iter", "time_diff": 1.69848646}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:08][INFO] logging.py:   99: json_stats: {"cur_iter": "56", "eta": "0:15:06", "split": "test_iter", "time_diff": 1.70693423}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:19][INFO] logging.py:   99: json_stats: {"cur_iter": "57", "eta": "1:34:39", "split": "test_iter", "time_diff": 10.71531703}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:21][INFO] logging.py:   99: json_stats: {"cur_iter": "58", "eta": "0:14:55", "split": "test_iter", "time_diff": 1.69325501}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:22][INFO] logging.py:   99: json_stats: {"cur_iter": "59", "eta": "0:15:02", "split": "test_iter", "time_diff": 1.70882155}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:24][INFO] logging.py:   99: json_stats: {"cur_iter": "60", "eta": "0:14:58", "split": "test_iter", "time_diff": 1.70515594}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:33][INFO] logging.py:   99: json_stats: {"cur_iter": "61", "eta": "1:19:44", "split": "test_iter", "time_diff": 9.09622566}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:35][INFO] logging.py:   99: json_stats: {"cur_iter": "62", "eta": "0:14:48", "split": "test_iter", "time_diff": 1.69298664}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:37][INFO] logging.py:   99: json_stats: {"cur_iter": "63", "eta": "0:14:54", "split": "test_iter", "time_diff": 1.70660875}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:38][INFO] logging.py:   99: json_stats: {"cur_iter": "64", "eta": "0:14:47", "split": "test_iter", "time_diff": 1.69679955}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:48][INFO] logging.py:   99: json_stats: {"cur_iter": "65", "eta": "1:25:48", "split": "test_iter", "time_diff": 9.86286339}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:50][INFO] logging.py:   99: json_stats: {"cur_iter": "66", "eta": "0:14:47", "split": "test_iter", "time_diff": 1.70439233}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:52][INFO] logging.py:   99: json_stats: {"cur_iter": "67", "eta": "0:14:46", "split": "test_iter", "time_diff": 1.70484376}
exponential temporal pooling in test
alpha:0.3
[12/16 17:31:53][INFO] logging.py:   99: json_stats: {"cur_iter": "68", "eta": "0:14:49", "split": "test_iter", "time_diff": 1.71302300}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:03][INFO] logging.py:   99: json_stats: {"cur_iter": "69", "eta": "1:24:01", "split": "test_iter", "time_diff": 9.73173606}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:05][INFO] logging.py:   99: json_stats: {"cur_iter": "70", "eta": "0:14:39", "split": "test_iter", "time_diff": 1.70211365}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:06][INFO] logging.py:   99: json_stats: {"cur_iter": "71", "eta": "0:14:37", "split": "test_iter", "time_diff": 1.70115198}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:08][INFO] logging.py:   99: json_stats: {"cur_iter": "72", "eta": "0:14:34", "split": "test_iter", "time_diff": 1.69728325}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:18][INFO] logging.py:   99: json_stats: {"cur_iter": "73", "eta": "1:27:13", "split": "test_iter", "time_diff": 10.18239916}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:20][INFO] logging.py:   99: json_stats: {"cur_iter": "74", "eta": "0:14:37", "split": "test_iter", "time_diff": 1.70958571}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:22][INFO] logging.py:   99: json_stats: {"cur_iter": "75", "eta": "0:14:34", "split": "test_iter", "time_diff": 1.70806249}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:23][INFO] logging.py:   99: json_stats: {"cur_iter": "76", "eta": "0:14:27", "split": "test_iter", "time_diff": 1.69695536}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:34][INFO] logging.py:   99: json_stats: {"cur_iter": "77", "eta": "1:26:17", "split": "test_iter", "time_diff": 10.15142329}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:35][INFO] logging.py:   99: json_stats: {"cur_iter": "78", "eta": "0:14:27", "split": "test_iter", "time_diff": 1.70389135}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:37][INFO] logging.py:   99: json_stats: {"cur_iter": "79", "eta": "0:14:22", "split": "test_iter", "time_diff": 1.69810365}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:39][INFO] logging.py:   99: json_stats: {"cur_iter": "80", "eta": "0:14:20", "split": "test_iter", "time_diff": 1.69702468}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:50][INFO] logging.py:   99: json_stats: {"cur_iter": "81", "eta": "1:34:11", "split": "test_iter", "time_diff": 11.16861510}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:52][INFO] logging.py:   99: json_stats: {"cur_iter": "82", "eta": "0:14:16", "split": "test_iter", "time_diff": 1.69537469}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:53][INFO] logging.py:   99: json_stats: {"cur_iter": "83", "eta": "0:14:18", "split": "test_iter", "time_diff": 1.70253669}
exponential temporal pooling in test
alpha:0.3
[12/16 17:32:55][INFO] logging.py:   99: json_stats: {"cur_iter": "84", "eta": "0:14:17", "split": "test_iter", "time_diff": 1.70425664}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:04][INFO] logging.py:   99: json_stats: {"cur_iter": "85", "eta": "1:18:10", "split": "test_iter", "time_diff": 9.34338357}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:06][INFO] logging.py:   99: json_stats: {"cur_iter": "86", "eta": "0:14:12", "split": "test_iter", "time_diff": 1.70153577}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:08][INFO] logging.py:   99: json_stats: {"cur_iter": "87", "eta": "0:14:13", "split": "test_iter", "time_diff": 1.70636896}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:09][INFO] logging.py:   99: json_stats: {"cur_iter": "88", "eta": "0:14:35", "split": "test_iter", "time_diff": 1.75463790}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:19][INFO] logging.py:   99: json_stats: {"cur_iter": "89", "eta": "1:20:02", "split": "test_iter", "time_diff": 9.64294916}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:21][INFO] logging.py:   99: json_stats: {"cur_iter": "90", "eta": "0:14:10", "split": "test_iter", "time_diff": 1.71065622}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:23][INFO] logging.py:   99: json_stats: {"cur_iter": "91", "eta": "0:14:03", "split": "test_iter", "time_diff": 1.70082889}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:24][INFO] logging.py:   99: json_stats: {"cur_iter": "92", "eta": "0:13:58", "split": "test_iter", "time_diff": 1.69441284}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:34][INFO] logging.py:   99: json_stats: {"cur_iter": "93", "eta": "1:24:27", "split": "test_iter", "time_diff": 10.25870781}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:36][INFO] logging.py:   99: json_stats: {"cur_iter": "94", "eta": "0:13:58", "split": "test_iter", "time_diff": 1.69998581}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:38][INFO] logging.py:   99: json_stats: {"cur_iter": "95", "eta": "0:13:58", "split": "test_iter", "time_diff": 1.70472771}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:40][INFO] logging.py:   99: json_stats: {"cur_iter": "96", "eta": "0:13:52", "split": "test_iter", "time_diff": 1.69465918}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:49][INFO] logging.py:   99: json_stats: {"cur_iter": "97", "eta": "1:16:44", "split": "test_iter", "time_diff": 9.39613463}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:51][INFO] logging.py:   99: json_stats: {"cur_iter": "98", "eta": "0:13:55", "split": "test_iter", "time_diff": 1.70775133}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:52][INFO] logging.py:   99: json_stats: {"cur_iter": "99", "eta": "0:13:46", "split": "test_iter", "time_diff": 1.69327740}
exponential temporal pooling in test
alpha:0.3
[12/16 17:33:54][INFO] logging.py:   99: json_stats: {"cur_iter": "100", "eta": "0:13:45", "split": "test_iter", "time_diff": 1.69486546}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:03][INFO] logging.py:   99: json_stats: {"cur_iter": "101", "eta": "1:13:14", "split": "test_iter", "time_diff": 9.04289499}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:05][INFO] logging.py:   99: json_stats: {"cur_iter": "102", "eta": "0:13:49", "split": "test_iter", "time_diff": 1.70949301}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:07][INFO] logging.py:   99: json_stats: {"cur_iter": "103", "eta": "0:13:45", "split": "test_iter", "time_diff": 1.70480924}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:08][INFO] logging.py:   99: json_stats: {"cur_iter": "104", "eta": "0:13:42", "split": "test_iter", "time_diff": 1.70270976}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:18][INFO] logging.py:   99: json_stats: {"cur_iter": "105", "eta": "1:21:29", "split": "test_iter", "time_diff": 10.14492428}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:20][INFO] logging.py:   99: json_stats: {"cur_iter": "106", "eta": "0:13:38", "split": "test_iter", "time_diff": 1.70223234}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:22][INFO] logging.py:   99: json_stats: {"cur_iter": "107", "eta": "0:13:34", "split": "test_iter", "time_diff": 1.69767625}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:24][INFO] logging.py:   99: json_stats: {"cur_iter": "108", "eta": "0:13:34", "split": "test_iter", "time_diff": 1.70063991}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:33][INFO] logging.py:   99: json_stats: {"cur_iter": "109", "eta": "1:18:46", "split": "test_iter", "time_diff": 9.88744042}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:35][INFO] logging.py:   99: json_stats: {"cur_iter": "110", "eta": "0:13:28", "split": "test_iter", "time_diff": 1.69544742}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:37][INFO] logging.py:   99: json_stats: {"cur_iter": "111", "eta": "0:13:26", "split": "test_iter", "time_diff": 1.69334531}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:39][INFO] logging.py:   99: json_stats: {"cur_iter": "112", "eta": "0:13:50", "split": "test_iter", "time_diff": 1.74847848}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:49][INFO] logging.py:   99: json_stats: {"cur_iter": "113", "eta": "1:20:46", "split": "test_iter", "time_diff": 10.22372489}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:51][INFO] logging.py:   99: json_stats: {"cur_iter": "114", "eta": "0:13:28", "split": "test_iter", "time_diff": 1.71001352}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:52][INFO] logging.py:   99: json_stats: {"cur_iter": "115", "eta": "0:13:32", "split": "test_iter", "time_diff": 1.72167193}
exponential temporal pooling in test
alpha:0.3
[12/16 17:34:54][INFO] logging.py:   99: json_stats: {"cur_iter": "116", "eta": "0:13:23", "split": "test_iter", "time_diff": 1.70489509}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:03][INFO] logging.py:   99: json_stats: {"cur_iter": "117", "eta": "1:14:34", "split": "test_iter", "time_diff": 9.52061571}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:05][INFO] logging.py:   99: json_stats: {"cur_iter": "118", "eta": "0:13:19", "split": "test_iter", "time_diff": 1.70404555}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:07][INFO] logging.py:   99: json_stats: {"cur_iter": "119", "eta": "0:13:44", "split": "test_iter", "time_diff": 1.76222786}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:09][INFO] logging.py:   99: json_stats: {"cur_iter": "120", "eta": "0:13:10", "split": "test_iter", "time_diff": 1.69232064}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:18][INFO] logging.py:   99: json_stats: {"cur_iter": "121", "eta": "1:12:39", "split": "test_iter", "time_diff": 9.35458040}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:20][INFO] logging.py:   99: json_stats: {"cur_iter": "122", "eta": "0:13:08", "split": "test_iter", "time_diff": 1.69484447}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:21][INFO] logging.py:   99: json_stats: {"cur_iter": "123", "eta": "0:13:05", "split": "test_iter", "time_diff": 1.69284048}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:23][INFO] logging.py:   99: json_stats: {"cur_iter": "124", "eta": "0:13:12", "split": "test_iter", "time_diff": 1.71206555}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:32][INFO] logging.py:   99: json_stats: {"cur_iter": "125", "eta": "1:12:12", "split": "test_iter", "time_diff": 9.37833203}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:34][INFO] logging.py:   99: json_stats: {"cur_iter": "126", "eta": "0:13:05", "split": "test_iter", "time_diff": 1.70412134}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:36][INFO] logging.py:   99: json_stats: {"cur_iter": "127", "eta": "0:13:00", "split": "test_iter", "time_diff": 1.69772104}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:38][INFO] logging.py:   99: json_stats: {"cur_iter": "128", "eta": "0:13:01", "split": "test_iter", "time_diff": 1.70346506}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:47][INFO] logging.py:   99: json_stats: {"cur_iter": "129", "eta": "1:13:25", "split": "test_iter", "time_diff": 9.61939281}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:49][INFO] logging.py:   99: json_stats: {"cur_iter": "130", "eta": "0:12:56", "split": "test_iter", "time_diff": 1.69962070}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:51][INFO] logging.py:   99: json_stats: {"cur_iter": "131", "eta": "0:13:01", "split": "test_iter", "time_diff": 1.71387837}
exponential temporal pooling in test
alpha:0.3
[12/16 17:35:52][INFO] logging.py:   99: json_stats: {"cur_iter": "132", "eta": "0:12:52", "split": "test_iter", "time_diff": 1.69885243}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:08][INFO] logging.py:   99: json_stats: {"cur_iter": "133", "eta": "1:55:03", "split": "test_iter", "time_diff": 15.20688714}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:10][INFO] logging.py:   99: json_stats: {"cur_iter": "134", "eta": "0:15:26", "split": "test_iter", "time_diff": 2.04600799}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:11][INFO] logging.py:   99: json_stats: {"cur_iter": "135", "eta": "0:12:45", "split": "test_iter", "time_diff": 1.69436238}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:13][INFO] logging.py:   99: json_stats: {"cur_iter": "136", "eta": "0:12:46", "split": "test_iter", "time_diff": 1.69944955}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:40][INFO] logging.py:   99: json_stats: {"cur_iter": "137", "eta": "3:22:16", "split": "test_iter", "time_diff": 26.97021802}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:42][INFO] logging.py:   99: json_stats: {"cur_iter": "138", "eta": "0:12:43", "split": "test_iter", "time_diff": 1.70028664}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:43][INFO] logging.py:   99: json_stats: {"cur_iter": "139", "eta": "0:12:37", "split": "test_iter", "time_diff": 1.69027457}
exponential temporal pooling in test
alpha:0.3
[12/16 17:36:45][INFO] logging.py:   99: json_stats: {"cur_iter": "140", "eta": "0:12:40", "split": "test_iter", "time_diff": 1.70236884}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:11][INFO] logging.py:   99: json_stats: {"cur_iter": "141", "eta": "3:09:08", "split": "test_iter", "time_diff": 25.44500553}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:12][INFO] logging.py:   99: json_stats: {"cur_iter": "142", "eta": "0:12:32", "split": "test_iter", "time_diff": 1.69130217}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:14][INFO] logging.py:   99: json_stats: {"cur_iter": "143", "eta": "0:12:39", "split": "test_iter", "time_diff": 1.71042823}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:16][INFO] logging.py:   99: json_stats: {"cur_iter": "144", "eta": "0:12:30", "split": "test_iter", "time_diff": 1.69355830}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:41][INFO] logging.py:   99: json_stats: {"cur_iter": "145", "eta": "3:09:12", "split": "test_iter", "time_diff": 25.68457719}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:43][INFO] logging.py:   99: json_stats: {"cur_iter": "146", "eta": "0:12:25", "split": "test_iter", "time_diff": 1.69108002}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:45][INFO] logging.py:   99: json_stats: {"cur_iter": "147", "eta": "0:12:24", "split": "test_iter", "time_diff": 1.69129998}
exponential temporal pooling in test
alpha:0.3
[12/16 17:37:46][INFO] logging.py:   99: json_stats: {"cur_iter": "148", "eta": "0:12:27", "split": "test_iter", "time_diff": 1.70191291}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:11][INFO] logging.py:   99: json_stats: {"cur_iter": "149", "eta": "2:59:43", "split": "test_iter", "time_diff": 24.61974821}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:13][INFO] logging.py:   99: json_stats: {"cur_iter": "150", "eta": "0:14:57", "split": "test_iter", "time_diff": 2.05364144}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:15][INFO] logging.py:   99: json_stats: {"cur_iter": "151", "eta": "0:12:21", "split": "test_iter", "time_diff": 1.70098791}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:16][INFO] logging.py:   99: json_stats: {"cur_iter": "152", "eta": "0:12:16", "split": "test_iter", "time_diff": 1.69335591}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:41][INFO] logging.py:   99: json_stats: {"cur_iter": "153", "eta": "2:56:55", "split": "test_iter", "time_diff": 24.45938629}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:44][INFO] logging.py:   99: json_stats: {"cur_iter": "154", "eta": "0:21:30", "split": "test_iter", "time_diff": 2.98123206}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:46][INFO] logging.py:   99: json_stats: {"cur_iter": "155", "eta": "0:12:18", "split": "test_iter", "time_diff": 1.70913465}
exponential temporal pooling in test
alpha:0.3
[12/16 17:38:47][INFO] logging.py:   99: json_stats: {"cur_iter": "156", "eta": "0:12:13", "split": "test_iter", "time_diff": 1.70125713}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:11][INFO] logging.py:   99: json_stats: {"cur_iter": "157", "eta": "2:52:46", "split": "test_iter", "time_diff": 24.10838084}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:14][INFO] logging.py:   99: json_stats: {"cur_iter": "158", "eta": "0:15:53", "split": "test_iter", "time_diff": 2.22369409}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:15][INFO] logging.py:   99: json_stats: {"cur_iter": "159", "eta": "0:12:08", "split": "test_iter", "time_diff": 1.70121697}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:17][INFO] logging.py:   99: json_stats: {"cur_iter": "160", "eta": "0:12:06", "split": "test_iter", "time_diff": 1.70175825}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:41][INFO] logging.py:   99: json_stats: {"cur_iter": "161", "eta": "2:46:17", "split": "test_iter", "time_diff": 23.42060097}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:43][INFO] logging.py:   99: json_stats: {"cur_iter": "162", "eta": "0:15:46", "split": "test_iter", "time_diff": 2.22744869}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:44][INFO] logging.py:   99: json_stats: {"cur_iter": "163", "eta": "0:12:00", "split": "test_iter", "time_diff": 1.69917801}
exponential temporal pooling in test
alpha:0.3
[12/16 17:39:46][INFO] logging.py:   99: json_stats: {"cur_iter": "164", "eta": "0:11:56", "split": "test_iter", "time_diff": 1.69296098}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:11][INFO] logging.py:   99: json_stats: {"cur_iter": "165", "eta": "2:56:25", "split": "test_iter", "time_diff": 25.08512520}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:13][INFO] logging.py:   99: json_stats: {"cur_iter": "166", "eta": "0:12:01", "split": "test_iter", "time_diff": 1.71322372}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:15][INFO] logging.py:   99: json_stats: {"cur_iter": "167", "eta": "0:11:51", "split": "test_iter", "time_diff": 1.69479744}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:16][INFO] logging.py:   99: json_stats: {"cur_iter": "168", "eta": "0:11:55", "split": "test_iter", "time_diff": 1.70664475}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:43][INFO] logging.py:   99: json_stats: {"cur_iter": "169", "eta": "3:05:01", "split": "test_iter", "time_diff": 26.55862150}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:45][INFO] logging.py:   99: json_stats: {"cur_iter": "170", "eta": "0:11:46", "split": "test_iter", "time_diff": 1.69338514}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:46][INFO] logging.py:   99: json_stats: {"cur_iter": "171", "eta": "0:11:44", "split": "test_iter", "time_diff": 1.69383852}
exponential temporal pooling in test
alpha:0.3
[12/16 17:40:48][INFO] logging.py:   99: json_stats: {"cur_iter": "172", "eta": "0:11:48", "split": "test_iter", "time_diff": 1.70646161}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:14][INFO] logging.py:   99: json_stats: {"cur_iter": "173", "eta": "2:56:56", "split": "test_iter", "time_diff": 25.64366160}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:15][INFO] logging.py:   99: json_stats: {"cur_iter": "174", "eta": "0:11:43", "split": "test_iter", "time_diff": 1.70249606}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:17][INFO] logging.py:   99: json_stats: {"cur_iter": "175", "eta": "0:11:40", "split": "test_iter", "time_diff": 1.69974829}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:19][INFO] logging.py:   99: json_stats: {"cur_iter": "176", "eta": "0:11:39", "split": "test_iter", "time_diff": 1.70186100}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:44][INFO] logging.py:   99: json_stats: {"cur_iter": "177", "eta": "2:53:14", "split": "test_iter", "time_diff": 25.35191095}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:46][INFO] logging.py:   99: json_stats: {"cur_iter": "178", "eta": "0:11:35", "split": "test_iter", "time_diff": 1.69955517}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:48][INFO] logging.py:   99: json_stats: {"cur_iter": "179", "eta": "0:11:35", "split": "test_iter", "time_diff": 1.70474513}
exponential temporal pooling in test
alpha:0.3
[12/16 17:41:49][INFO] logging.py:   99: json_stats: {"cur_iter": "180", "eta": "0:11:29", "split": "test_iter", "time_diff": 1.69402811}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:14][INFO] logging.py:   99: json_stats: {"cur_iter": "181", "eta": "2:43:58", "split": "test_iter", "time_diff": 24.23353576}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:15][INFO] logging.py:   99: json_stats: {"cur_iter": "182", "eta": "0:11:25", "split": "test_iter", "time_diff": 1.69326047}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:17][INFO] logging.py:   99: json_stats: {"cur_iter": "183", "eta": "0:11:25", "split": "test_iter", "time_diff": 1.69781110}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:19][INFO] logging.py:   99: json_stats: {"cur_iter": "184", "eta": "0:11:24", "split": "test_iter", "time_diff": 1.69817302}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:42][INFO] logging.py:   99: json_stats: {"cur_iter": "185", "eta": "2:35:53", "split": "test_iter", "time_diff": 23.26679138}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:44][INFO] logging.py:   99: json_stats: {"cur_iter": "186", "eta": "0:11:24", "split": "test_iter", "time_diff": 1.70806645}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:45][INFO] logging.py:   99: json_stats: {"cur_iter": "187", "eta": "0:11:15", "split": "test_iter", "time_diff": 1.68993467}
exponential temporal pooling in test
alpha:0.3
[12/16 17:42:47][INFO] logging.py:   99: json_stats: {"cur_iter": "188", "eta": "0:11:15", "split": "test_iter", "time_diff": 1.69303259}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:13][INFO] logging.py:   99: json_stats: {"cur_iter": "189", "eta": "2:49:21", "split": "test_iter", "time_diff": 25.53018203}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:14][INFO] logging.py:   99: json_stats: {"cur_iter": "190", "eta": "0:11:12", "split": "test_iter", "time_diff": 1.69477256}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:16][INFO] logging.py:   99: json_stats: {"cur_iter": "191", "eta": "0:11:09", "split": "test_iter", "time_diff": 1.69113433}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:18][INFO] logging.py:   99: json_stats: {"cur_iter": "192", "eta": "0:11:08", "split": "test_iter", "time_diff": 1.69343102}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:43][INFO] logging.py:   99: json_stats: {"cur_iter": "193", "eta": "2:48:55", "split": "test_iter", "time_diff": 25.72576417}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:45][INFO] logging.py:   99: json_stats: {"cur_iter": "194", "eta": "0:11:11", "split": "test_iter", "time_diff": 1.70786095}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:47][INFO] logging.py:   99: json_stats: {"cur_iter": "195", "eta": "0:11:07", "split": "test_iter", "time_diff": 1.70226284}
exponential temporal pooling in test
alpha:0.3
[12/16 17:43:48][INFO] logging.py:   99: json_stats: {"cur_iter": "196", "eta": "0:11:05", "split": "test_iter", "time_diff": 1.70289015}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:13][INFO] logging.py:   99: json_stats: {"cur_iter": "197", "eta": "2:37:29", "split": "test_iter", "time_diff": 24.22942328}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:14][INFO] logging.py:   99: json_stats: {"cur_iter": "198", "eta": "0:11:01", "split": "test_iter", "time_diff": 1.69959218}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:16][INFO] logging.py:   99: json_stats: {"cur_iter": "199", "eta": "0:10:57", "split": "test_iter", "time_diff": 1.69517642}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:18][INFO] logging.py:   99: json_stats: {"cur_iter": "200", "eta": "0:10:57", "split": "test_iter", "time_diff": 1.69818527}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:43][INFO] logging.py:   99: json_stats: {"cur_iter": "201", "eta": "2:40:27", "split": "test_iter", "time_diff": 24.94057313}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:44][INFO] logging.py:   99: json_stats: {"cur_iter": "202", "eta": "0:10:53", "split": "test_iter", "time_diff": 1.69846496}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:46][INFO] logging.py:   99: json_stats: {"cur_iter": "203", "eta": "0:10:49", "split": "test_iter", "time_diff": 1.69069126}
exponential temporal pooling in test
alpha:0.3
[12/16 17:44:48][INFO] logging.py:   99: json_stats: {"cur_iter": "204", "eta": "0:10:48", "split": "test_iter", "time_diff": 1.69360646}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:14][INFO] logging.py:   99: json_stats: {"cur_iter": "205", "eta": "2:45:30", "split": "test_iter", "time_diff": 25.99486541}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:16][INFO] logging.py:   99: json_stats: {"cur_iter": "206", "eta": "0:10:48", "split": "test_iter", "time_diff": 1.70133962}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:17][INFO] logging.py:   99: json_stats: {"cur_iter": "207", "eta": "0:10:43", "split": "test_iter", "time_diff": 1.69326245}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:19][INFO] logging.py:   99: json_stats: {"cur_iter": "208", "eta": "0:10:43", "split": "test_iter", "time_diff": 1.69907493}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:47][INFO] logging.py:   99: json_stats: {"cur_iter": "209", "eta": "2:58:09", "split": "test_iter", "time_diff": 28.27845286}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:49][INFO] logging.py:   99: json_stats: {"cur_iter": "210", "eta": "0:10:43", "split": "test_iter", "time_diff": 1.70701565}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:51][INFO] logging.py:   99: json_stats: {"cur_iter": "211", "eta": "0:10:40", "split": "test_iter", "time_diff": 1.70421427}
exponential temporal pooling in test
alpha:0.3
[12/16 17:45:52][INFO] logging.py:   99: json_stats: {"cur_iter": "212", "eta": "0:10:37", "split": "test_iter", "time_diff": 1.69871766}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:21][INFO] logging.py:   99: json_stats: {"cur_iter": "213", "eta": "2:58:35", "split": "test_iter", "time_diff": 28.65211905}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:23][INFO] logging.py:   99: json_stats: {"cur_iter": "214", "eta": "0:10:34", "split": "test_iter", "time_diff": 1.70054146}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:24][INFO] logging.py:   99: json_stats: {"cur_iter": "215", "eta": "0:10:28", "split": "test_iter", "time_diff": 1.69043221}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:26][INFO] logging.py:   99: json_stats: {"cur_iter": "216", "eta": "0:10:30", "split": "test_iter", "time_diff": 1.69883485}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:51][INFO] logging.py:   99: json_stats: {"cur_iter": "217", "eta": "2:36:24", "split": "test_iter", "time_diff": 25.36449663}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:53][INFO] logging.py:   99: json_stats: {"cur_iter": "218", "eta": "0:10:27", "split": "test_iter", "time_diff": 1.70156371}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:55][INFO] logging.py:   99: json_stats: {"cur_iter": "219", "eta": "0:10:24", "split": "test_iter", "time_diff": 1.69812762}
exponential temporal pooling in test
alpha:0.3
[12/16 17:46:57][INFO] logging.py:   99: json_stats: {"cur_iter": "220", "eta": "0:10:24", "split": "test_iter", "time_diff": 1.70167907}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:22][INFO] logging.py:   99: json_stats: {"cur_iter": "221", "eta": "2:36:32", "split": "test_iter", "time_diff": 25.66286950}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:24][INFO] logging.py:   99: json_stats: {"cur_iter": "222", "eta": "0:10:22", "split": "test_iter", "time_diff": 1.70461657}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:26][INFO] logging.py:   99: json_stats: {"cur_iter": "223", "eta": "0:10:15", "split": "test_iter", "time_diff": 1.69100480}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:27][INFO] logging.py:   99: json_stats: {"cur_iter": "224", "eta": "0:10:21", "split": "test_iter", "time_diff": 1.71190625}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:51][INFO] logging.py:   99: json_stats: {"cur_iter": "225", "eta": "2:20:02", "split": "test_iter", "time_diff": 23.21097797}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:52][INFO] logging.py:   99: json_stats: {"cur_iter": "226", "eta": "0:10:10", "split": "test_iter", "time_diff": 1.69061015}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:54][INFO] logging.py:   99: json_stats: {"cur_iter": "227", "eta": "0:10:09", "split": "test_iter", "time_diff": 1.69304866}
exponential temporal pooling in test
alpha:0.3
[12/16 17:47:56][INFO] logging.py:   99: json_stats: {"cur_iter": "228", "eta": "0:10:12", "split": "test_iter", "time_diff": 1.70493236}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:22][INFO] logging.py:   99: json_stats: {"cur_iter": "229", "eta": "2:35:40", "split": "test_iter", "time_diff": 26.09024557}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:23][INFO] logging.py:   99: json_stats: {"cur_iter": "230", "eta": "0:10:03", "split": "test_iter", "time_diff": 1.69127621}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:25][INFO] logging.py:   99: json_stats: {"cur_iter": "231", "eta": "0:10:05", "split": "test_iter", "time_diff": 1.70024284}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:27][INFO] logging.py:   99: json_stats: {"cur_iter": "232", "eta": "0:10:02", "split": "test_iter", "time_diff": 1.69845084}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:53][INFO] logging.py:   99: json_stats: {"cur_iter": "233", "eta": "2:31:53", "split": "test_iter", "time_diff": 25.74544698}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:54][INFO] logging.py:   99: json_stats: {"cur_iter": "234", "eta": "0:09:58", "split": "test_iter", "time_diff": 1.69536474}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:56][INFO] logging.py:   99: json_stats: {"cur_iter": "235", "eta": "0:10:02", "split": "test_iter", "time_diff": 1.71209316}
exponential temporal pooling in test
alpha:0.3
[12/16 17:48:58][INFO] logging.py:   99: json_stats: {"cur_iter": "236", "eta": "0:09:58", "split": "test_iter", "time_diff": 1.70647692}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:24][INFO] logging.py:   99: json_stats: {"cur_iter": "237", "eta": "2:33:08", "split": "test_iter", "time_diff": 26.25331210}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:26][INFO] logging.py:   99: json_stats: {"cur_iter": "238", "eta": "0:09:49", "split": "test_iter", "time_diff": 1.68974338}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:27][INFO] logging.py:   99: json_stats: {"cur_iter": "239", "eta": "0:09:51", "split": "test_iter", "time_diff": 1.69835213}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:29][INFO] logging.py:   99: json_stats: {"cur_iter": "240", "eta": "0:09:47", "split": "test_iter", "time_diff": 1.69403753}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:53][INFO] logging.py:   99: json_stats: {"cur_iter": "241", "eta": "2:16:11", "split": "test_iter", "time_diff": 23.61599883}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:54][INFO] logging.py:   99: json_stats: {"cur_iter": "242", "eta": "0:09:44", "split": "test_iter", "time_diff": 1.69467705}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:56][INFO] logging.py:   99: json_stats: {"cur_iter": "243", "eta": "0:09:46", "split": "test_iter", "time_diff": 1.70509908}
exponential temporal pooling in test
alpha:0.3
[12/16 17:49:58][INFO] logging.py:   99: json_stats: {"cur_iter": "244", "eta": "0:09:43", "split": "test_iter", "time_diff": 1.70118918}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:24][INFO] logging.py:   99: json_stats: {"cur_iter": "245", "eta": "2:27:29", "split": "test_iter", "time_diff": 25.87447826}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:25][INFO] logging.py:   99: json_stats: {"cur_iter": "246", "eta": "0:09:37", "split": "test_iter", "time_diff": 1.69335125}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:27][INFO] logging.py:   99: json_stats: {"cur_iter": "247", "eta": "0:09:35", "split": "test_iter", "time_diff": 1.69308278}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:29][INFO] logging.py:   99: json_stats: {"cur_iter": "248", "eta": "0:09:43", "split": "test_iter", "time_diff": 1.72137026}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:53][INFO] logging.py:   99: json_stats: {"cur_iter": "249", "eta": "2:13:51", "split": "test_iter", "time_diff": 23.76279191}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:54][INFO] logging.py:   99: json_stats: {"cur_iter": "250", "eta": "0:09:29", "split": "test_iter", "time_diff": 1.68987300}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:56][INFO] logging.py:   99: json_stats: {"cur_iter": "251", "eta": "0:09:29", "split": "test_iter", "time_diff": 1.69350586}
exponential temporal pooling in test
alpha:0.3
[12/16 17:50:58][INFO] logging.py:   99: json_stats: {"cur_iter": "252", "eta": "0:09:30", "split": "test_iter", "time_diff": 1.70379961}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:24][INFO] logging.py:   99: json_stats: {"cur_iter": "253", "eta": "2:27:19", "split": "test_iter", "time_diff": 26.46441015}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:26][INFO] logging.py:   99: json_stats: {"cur_iter": "254", "eta": "0:09:23", "split": "test_iter", "time_diff": 1.69190737}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:28][INFO] logging.py:   99: json_stats: {"cur_iter": "255", "eta": "0:09:26", "split": "test_iter", "time_diff": 1.70778341}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:29][INFO] logging.py:   99: json_stats: {"cur_iter": "256", "eta": "0:09:24", "split": "test_iter", "time_diff": 1.70571371}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:53][INFO] logging.py:   99: json_stats: {"cur_iter": "257", "eta": "2:08:51", "split": "test_iter", "time_diff": 23.43001665}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:54][INFO] logging.py:   99: json_stats: {"cur_iter": "258", "eta": "0:09:16", "split": "test_iter", "time_diff": 1.69154338}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:56][INFO] logging.py:   99: json_stats: {"cur_iter": "259", "eta": "0:09:20", "split": "test_iter", "time_diff": 1.70821518}
exponential temporal pooling in test
alpha:0.3
[12/16 17:51:58][INFO] logging.py:   99: json_stats: {"cur_iter": "260", "eta": "0:09:17", "split": "test_iter", "time_diff": 1.70445308}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:23][INFO] logging.py:   99: json_stats: {"cur_iter": "261", "eta": "2:16:31", "split": "test_iter", "time_diff": 25.12848311}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:25][INFO] logging.py:   99: json_stats: {"cur_iter": "262", "eta": "0:09:13", "split": "test_iter", "time_diff": 1.70261783}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:26][INFO] logging.py:   99: json_stats: {"cur_iter": "263", "eta": "0:09:07", "split": "test_iter", "time_diff": 1.68999964}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:28][INFO] logging.py:   99: json_stats: {"cur_iter": "264", "eta": "0:09:11", "split": "test_iter", "time_diff": 1.70674503}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:52][INFO] logging.py:   99: json_stats: {"cur_iter": "265", "eta": "2:06:22", "split": "test_iter", "time_diff": 23.54834506}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:53][INFO] logging.py:   99: json_stats: {"cur_iter": "266", "eta": "0:09:06", "split": "test_iter", "time_diff": 1.70187968}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:55][INFO] logging.py:   99: json_stats: {"cur_iter": "267", "eta": "0:09:01", "split": "test_iter", "time_diff": 1.69197397}
exponential temporal pooling in test
alpha:0.3
[12/16 17:52:57][INFO] logging.py:   99: json_stats: {"cur_iter": "268", "eta": "0:09:04", "split": "test_iter", "time_diff": 1.70626083}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:22][INFO] logging.py:   99: json_stats: {"cur_iter": "269", "eta": "2:15:13", "split": "test_iter", "time_diff": 25.51539063}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:24][INFO] logging.py:   99: json_stats: {"cur_iter": "270", "eta": "0:08:56", "split": "test_iter", "time_diff": 1.69256571}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:26][INFO] logging.py:   99: json_stats: {"cur_iter": "271", "eta": "0:08:58", "split": "test_iter", "time_diff": 1.70529460}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:27][INFO] logging.py:   99: json_stats: {"cur_iter": "272", "eta": "0:08:53", "split": "test_iter", "time_diff": 1.69513089}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:56][INFO] logging.py:   99: json_stats: {"cur_iter": "273", "eta": "2:27:41", "split": "test_iter", "time_diff": 28.22167012}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:57][INFO] logging.py:   99: json_stats: {"cur_iter": "274", "eta": "0:08:50", "split": "test_iter", "time_diff": 1.69474298}
exponential temporal pooling in test
alpha:0.3
[12/16 17:53:59][INFO] logging.py:   99: json_stats: {"cur_iter": "275", "eta": "0:08:52", "split": "test_iter", "time_diff": 1.70749260}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:01][INFO] logging.py:   99: json_stats: {"cur_iter": "276", "eta": "0:08:46", "split": "test_iter", "time_diff": 1.69358082}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:24][INFO] logging.py:   99: json_stats: {"cur_iter": "277", "eta": "1:59:02", "split": "test_iter", "time_diff": 23.04012341}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:25][INFO] logging.py:   99: json_stats: {"cur_iter": "278", "eta": "0:08:43", "split": "test_iter", "time_diff": 1.69284213}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:27][INFO] logging.py:   99: json_stats: {"cur_iter": "279", "eta": "0:08:43", "split": "test_iter", "time_diff": 1.69862351}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:29][INFO] logging.py:   99: json_stats: {"cur_iter": "280", "eta": "0:08:40", "split": "test_iter", "time_diff": 1.69603990}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:55][INFO] logging.py:   99: json_stats: {"cur_iter": "281", "eta": "2:14:37", "split": "test_iter", "time_diff": 26.39752939}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:57][INFO] logging.py:   99: json_stats: {"cur_iter": "282", "eta": "0:08:36", "split": "test_iter", "time_diff": 1.69189713}
exponential temporal pooling in test
alpha:0.3
[12/16 17:54:59][INFO] logging.py:   99: json_stats: {"cur_iter": "283", "eta": "0:08:37", "split": "test_iter", "time_diff": 1.70387733}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:00][INFO] logging.py:   99: json_stats: {"cur_iter": "284", "eta": "0:08:33", "split": "test_iter", "time_diff": 1.69455424}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:27][INFO] logging.py:   99: json_stats: {"cur_iter": "285", "eta": "2:13:45", "split": "test_iter", "time_diff": 26.57421297}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:29][INFO] logging.py:   99: json_stats: {"cur_iter": "286", "eta": "0:08:29", "split": "test_iter", "time_diff": 1.69365052}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:30][INFO] logging.py:   99: json_stats: {"cur_iter": "287", "eta": "0:08:27", "split": "test_iter", "time_diff": 1.69308873}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:32][INFO] logging.py:   99: json_stats: {"cur_iter": "288", "eta": "0:08:28", "split": "test_iter", "time_diff": 1.70013298}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:57][INFO] logging.py:   99: json_stats: {"cur_iter": "289", "eta": "2:06:07", "split": "test_iter", "time_diff": 25.39477152}
exponential temporal pooling in test
alpha:0.3
[12/16 17:55:59][INFO] logging.py:   99: json_stats: {"cur_iter": "290", "eta": "0:08:23", "split": "test_iter", "time_diff": 1.69379781}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:01][INFO] logging.py:   99: json_stats: {"cur_iter": "291", "eta": "0:08:22", "split": "test_iter", "time_diff": 1.69639398}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:02][INFO] logging.py:   99: json_stats: {"cur_iter": "292", "eta": "0:08:20", "split": "test_iter", "time_diff": 1.69718147}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:29][INFO] logging.py:   99: json_stats: {"cur_iter": "293", "eta": "2:08:23", "split": "test_iter", "time_diff": 26.20342665}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:30][INFO] logging.py:   99: json_stats: {"cur_iter": "294", "eta": "0:08:17", "split": "test_iter", "time_diff": 1.69697147}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:32][INFO] logging.py:   99: json_stats: {"cur_iter": "295", "eta": "0:08:14", "split": "test_iter", "time_diff": 1.69228657}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:34][INFO] logging.py:   99: json_stats: {"cur_iter": "296", "eta": "0:08:12", "split": "test_iter", "time_diff": 1.69327592}
exponential temporal pooling in test
alpha:0.3
[12/16 17:56:58][INFO] logging.py:   99: json_stats: {"cur_iter": "297", "eta": "1:56:47", "split": "test_iter", "time_diff": 24.16378510}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:00][INFO] logging.py:   99: json_stats: {"cur_iter": "298", "eta": "0:08:11", "split": "test_iter", "time_diff": 1.69969872}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:01][INFO] logging.py:   99: json_stats: {"cur_iter": "299", "eta": "0:08:07", "split": "test_iter", "time_diff": 1.69289015}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:03][INFO] logging.py:   99: json_stats: {"cur_iter": "300", "eta": "0:08:10", "split": "test_iter", "time_diff": 1.70816501}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:31][INFO] logging.py:   99: json_stats: {"cur_iter": "301", "eta": "2:12:02", "split": "test_iter", "time_diff": 27.70091923}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:32][INFO] logging.py:   99: json_stats: {"cur_iter": "302", "eta": "0:08:03", "split": "test_iter", "time_diff": 1.69583983}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:34][INFO] logging.py:   99: json_stats: {"cur_iter": "303", "eta": "0:08:02", "split": "test_iter", "time_diff": 1.69833075}
exponential temporal pooling in test
alpha:0.3
[12/16 17:57:36][INFO] logging.py:   99: json_stats: {"cur_iter": "304", "eta": "0:08:01", "split": "test_iter", "time_diff": 1.70123247}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:01][INFO] logging.py:   99: json_stats: {"cur_iter": "305", "eta": "1:59:06", "split": "test_iter", "time_diff": 25.34329190}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:03][INFO] logging.py:   99: json_stats: {"cur_iter": "306", "eta": "0:07:58", "split": "test_iter", "time_diff": 1.70281437}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:05][INFO] logging.py:   99: json_stats: {"cur_iter": "307", "eta": "0:07:54", "split": "test_iter", "time_diff": 1.69549853}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:06][INFO] logging.py:   99: json_stats: {"cur_iter": "308", "eta": "0:07:52", "split": "test_iter", "time_diff": 1.69304870}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:31][INFO] logging.py:   99: json_stats: {"cur_iter": "309", "eta": "1:55:40", "split": "test_iter", "time_diff": 24.96698791}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:33][INFO] logging.py:   99: json_stats: {"cur_iter": "310", "eta": "0:07:54", "split": "test_iter", "time_diff": 1.71247706}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:35][INFO] logging.py:   99: json_stats: {"cur_iter": "311", "eta": "0:07:46", "split": "test_iter", "time_diff": 1.68974578}
exponential temporal pooling in test
alpha:0.3
[12/16 17:58:36][INFO] logging.py:   99: json_stats: {"cur_iter": "312", "eta": "0:07:45", "split": "test_iter", "time_diff": 1.69234384}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:02][INFO] logging.py:   99: json_stats: {"cur_iter": "313", "eta": "1:56:16", "split": "test_iter", "time_diff": 25.46177536}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:04][INFO] logging.py:   99: json_stats: {"cur_iter": "314", "eta": "0:07:42", "split": "test_iter", "time_diff": 1.69559521}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:05][INFO] logging.py:   99: json_stats: {"cur_iter": "315", "eta": "0:07:43", "split": "test_iter", "time_diff": 1.70337869}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:07][INFO] logging.py:   99: json_stats: {"cur_iter": "316", "eta": "0:07:39", "split": "test_iter", "time_diff": 1.69723800}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:33][INFO] logging.py:   99: json_stats: {"cur_iter": "317", "eta": "1:56:15", "split": "test_iter", "time_diff": 25.83656278}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:34][INFO] logging.py:   99: json_stats: {"cur_iter": "318", "eta": "0:07:39", "split": "test_iter", "time_diff": 1.70712663}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:36][INFO] logging.py:   99: json_stats: {"cur_iter": "319", "eta": "0:07:32", "split": "test_iter", "time_diff": 1.68867230}
exponential temporal pooling in test
alpha:0.3
[12/16 17:59:38][INFO] logging.py:   99: json_stats: {"cur_iter": "320", "eta": "0:07:31", "split": "test_iter", "time_diff": 1.69210640}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:06][INFO] logging.py:   99: json_stats: {"cur_iter": "321", "eta": "2:03:58", "split": "test_iter", "time_diff": 27.96368633}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:08][INFO] logging.py:   99: json_stats: {"cur_iter": "322", "eta": "0:07:28", "split": "test_iter", "time_diff": 1.69225157}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:09][INFO] logging.py:   99: json_stats: {"cur_iter": "323", "eta": "0:07:28", "split": "test_iter", "time_diff": 1.70054420}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:11][INFO] logging.py:   99: json_stats: {"cur_iter": "324", "eta": "0:07:24", "split": "test_iter", "time_diff": 1.68964587}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:34][INFO] logging.py:   99: json_stats: {"cur_iter": "325", "eta": "1:40:08", "split": "test_iter", "time_diff": 22.93343891}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:36][INFO] logging.py:   99: json_stats: {"cur_iter": "326", "eta": "0:07:24", "split": "test_iter", "time_diff": 1.70386794}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:37][INFO] logging.py:   99: json_stats: {"cur_iter": "327", "eta": "0:07:37", "split": "test_iter", "time_diff": 1.75808038}
exponential temporal pooling in test
alpha:0.3
[12/16 18:00:39][INFO] logging.py:   99: json_stats: {"cur_iter": "328", "eta": "0:07:20", "split": "test_iter", "time_diff": 1.69904511}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:05][INFO] logging.py:   99: json_stats: {"cur_iter": "329", "eta": "1:52:58", "split": "test_iter", "time_diff": 26.27142974}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:07][INFO] logging.py:   99: json_stats: {"cur_iter": "330", "eta": "0:07:14", "split": "test_iter", "time_diff": 1.69004561}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:09][INFO] logging.py:   99: json_stats: {"cur_iter": "331", "eta": "0:07:13", "split": "test_iter", "time_diff": 1.69290663}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:10][INFO] logging.py:   99: json_stats: {"cur_iter": "332", "eta": "0:07:11", "split": "test_iter", "time_diff": 1.69189766}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:36][INFO] logging.py:   99: json_stats: {"cur_iter": "333", "eta": "1:46:48", "split": "test_iter", "time_diff": 25.22880118}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:37][INFO] logging.py:   99: json_stats: {"cur_iter": "334", "eta": "0:07:10", "split": "test_iter", "time_diff": 1.70280441}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:39][INFO] logging.py:   99: json_stats: {"cur_iter": "335", "eta": "0:07:08", "split": "test_iter", "time_diff": 1.70181458}
exponential temporal pooling in test
alpha:0.3
[12/16 18:01:41][INFO] logging.py:   99: json_stats: {"cur_iter": "336", "eta": "0:07:06", "split": "test_iter", "time_diff": 1.69888359}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:06][INFO] logging.py:   99: json_stats: {"cur_iter": "337", "eta": "1:45:54", "split": "test_iter", "time_diff": 25.41688595}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:08][INFO] logging.py:   99: json_stats: {"cur_iter": "338", "eta": "0:07:01", "split": "test_iter", "time_diff": 1.69085784}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:10][INFO] logging.py:   99: json_stats: {"cur_iter": "339", "eta": "0:06:59", "split": "test_iter", "time_diff": 1.69307411}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:11][INFO] logging.py:   99: json_stats: {"cur_iter": "340", "eta": "0:07:30", "split": "test_iter", "time_diff": 1.82405310}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:35][INFO] logging.py:   99: json_stats: {"cur_iter": "341", "eta": "1:38:08", "split": "test_iter", "time_diff": 23.93601836}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:37][INFO] logging.py:   99: json_stats: {"cur_iter": "342", "eta": "0:06:55", "split": "test_iter", "time_diff": 1.69542923}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:39][INFO] logging.py:   99: json_stats: {"cur_iter": "343", "eta": "0:06:53", "split": "test_iter", "time_diff": 1.69277642}
exponential temporal pooling in test
alpha:0.3
[12/16 18:02:40][INFO] logging.py:   99: json_stats: {"cur_iter": "344", "eta": "0:06:53", "split": "test_iter", "time_diff": 1.70140866}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:05][INFO] logging.py:   99: json_stats: {"cur_iter": "345", "eta": "1:40:23", "split": "test_iter", "time_diff": 24.88971922}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:07][INFO] logging.py:   99: json_stats: {"cur_iter": "346", "eta": "0:06:51", "split": "test_iter", "time_diff": 1.70638643}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:09][INFO] logging.py:   99: json_stats: {"cur_iter": "347", "eta": "0:06:47", "split": "test_iter", "time_diff": 1.69737423}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:10][INFO] logging.py:   99: json_stats: {"cur_iter": "348", "eta": "0:06:46", "split": "test_iter", "time_diff": 1.69954966}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:35][INFO] logging.py:   99: json_stats: {"cur_iter": "349", "eta": "1:37:42", "split": "test_iter", "time_diff": 24.63120395}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:37][INFO] logging.py:   99: json_stats: {"cur_iter": "350", "eta": "0:06:43", "split": "test_iter", "time_diff": 1.70301836}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:39][INFO] logging.py:   99: json_stats: {"cur_iter": "351", "eta": "0:06:54", "split": "test_iter", "time_diff": 1.75588334}
exponential temporal pooling in test
alpha:0.3
[12/16 18:03:40][INFO] logging.py:   99: json_stats: {"cur_iter": "352", "eta": "0:06:43", "split": "test_iter", "time_diff": 1.71694907}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:07][INFO] logging.py:   99: json_stats: {"cur_iter": "353", "eta": "1:44:07", "split": "test_iter", "time_diff": 26.69974300}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:09][INFO] logging.py:   99: json_stats: {"cur_iter": "354", "eta": "0:06:34", "split": "test_iter", "time_diff": 1.69344199}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:10][INFO] logging.py:   99: json_stats: {"cur_iter": "355", "eta": "0:06:32", "split": "test_iter", "time_diff": 1.69214002}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:12][INFO] logging.py:   99: json_stats: {"cur_iter": "356", "eta": "0:06:31", "split": "test_iter", "time_diff": 1.69372165}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:37][INFO] logging.py:   99: json_stats: {"cur_iter": "357", "eta": "1:37:19", "split": "test_iter", "time_diff": 25.38927847}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:39][INFO] logging.py:   99: json_stats: {"cur_iter": "358", "eta": "0:06:27", "split": "test_iter", "time_diff": 1.69053540}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:41][INFO] logging.py:   99: json_stats: {"cur_iter": "359", "eta": "0:06:40", "split": "test_iter", "time_diff": 1.75487264}
exponential temporal pooling in test
alpha:0.3
[12/16 18:04:43][INFO] logging.py:   99: json_stats: {"cur_iter": "360", "eta": "0:06:25", "split": "test_iter", "time_diff": 1.69784241}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:07][INFO] logging.py:   99: json_stats: {"cur_iter": "361", "eta": "1:33:03", "split": "test_iter", "time_diff": 24.70667970}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:09][INFO] logging.py:   99: json_stats: {"cur_iter": "362", "eta": "0:06:21", "split": "test_iter", "time_diff": 1.69501359}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:11][INFO] logging.py:   99: json_stats: {"cur_iter": "363", "eta": "0:06:23", "split": "test_iter", "time_diff": 1.71329821}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:12][INFO] logging.py:   99: json_stats: {"cur_iter": "364", "eta": "0:06:28", "split": "test_iter", "time_diff": 1.74210069}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:38][INFO] logging.py:   99: json_stats: {"cur_iter": "365", "eta": "1:35:42", "split": "test_iter", "time_diff": 25.86935378}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:40][INFO] logging.py:   99: json_stats: {"cur_iter": "366", "eta": "0:06:13", "split": "test_iter", "time_diff": 1.69155724}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:42][INFO] logging.py:   99: json_stats: {"cur_iter": "367", "eta": "0:06:11", "split": "test_iter", "time_diff": 1.68864081}
exponential temporal pooling in test
alpha:0.3
[12/16 18:05:43][INFO] logging.py:   99: json_stats: {"cur_iter": "368", "eta": "0:06:11", "split": "test_iter", "time_diff": 1.69465286}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:09][INFO] logging.py:   99: json_stats: {"cur_iter": "369", "eta": "1:31:11", "split": "test_iter", "time_diff": 25.09864026}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:10][INFO] logging.py:   99: json_stats: {"cur_iter": "370", "eta": "0:06:10", "split": "test_iter", "time_diff": 1.70883121}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:12][INFO] logging.py:   99: json_stats: {"cur_iter": "371", "eta": "0:06:05", "split": "test_iter", "time_diff": 1.69354559}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:14][INFO] logging.py:   99: json_stats: {"cur_iter": "372", "eta": "0:06:06", "split": "test_iter", "time_diff": 1.70486850}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:37][INFO] logging.py:   99: json_stats: {"cur_iter": "373", "eta": "1:22:57", "split": "test_iter", "time_diff": 23.25837785}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:39][INFO] logging.py:   99: json_stats: {"cur_iter": "374", "eta": "0:06:01", "split": "test_iter", "time_diff": 1.69846154}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:40][INFO] logging.py:   99: json_stats: {"cur_iter": "375", "eta": "0:06:13", "split": "test_iter", "time_diff": 1.76351229}
exponential temporal pooling in test
alpha:0.3
[12/16 18:06:42][INFO] logging.py:   99: json_stats: {"cur_iter": "376", "eta": "0:05:57", "split": "test_iter", "time_diff": 1.69302314}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:06][INFO] logging.py:   99: json_stats: {"cur_iter": "377", "eta": "1:23:58", "split": "test_iter", "time_diff": 23.99518515}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:08][INFO] logging.py:   99: json_stats: {"cur_iter": "378", "eta": "0:05:53", "split": "test_iter", "time_diff": 1.69226124}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:09][INFO] logging.py:   99: json_stats: {"cur_iter": "379", "eta": "0:06:04", "split": "test_iter", "time_diff": 1.75387949}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:11][INFO] logging.py:   99: json_stats: {"cur_iter": "380", "eta": "0:05:50", "split": "test_iter", "time_diff": 1.69173130}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:37][INFO] logging.py:   99: json_stats: {"cur_iter": "381", "eta": "1:28:42", "split": "test_iter", "time_diff": 25.83922282}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:39][INFO] logging.py:   99: json_stats: {"cur_iter": "382", "eta": "0:05:47", "split": "test_iter", "time_diff": 1.69695307}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:40][INFO] logging.py:   99: json_stats: {"cur_iter": "383", "eta": "0:05:47", "split": "test_iter", "time_diff": 1.70310197}
exponential temporal pooling in test
alpha:0.3
[12/16 18:07:42][INFO] logging.py:   99: json_stats: {"cur_iter": "384", "eta": "0:05:46", "split": "test_iter", "time_diff": 1.70547015}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:07][INFO] logging.py:   99: json_stats: {"cur_iter": "385", "eta": "1:23:04", "split": "test_iter", "time_diff": 24.67759023}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:09][INFO] logging.py:   99: json_stats: {"cur_iter": "386", "eta": "0:05:40", "split": "test_iter", "time_diff": 1.69600618}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:10][INFO] logging.py:   99: json_stats: {"cur_iter": "387", "eta": "0:05:40", "split": "test_iter", "time_diff": 1.70146884}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:12][INFO] logging.py:   99: json_stats: {"cur_iter": "388", "eta": "0:05:50", "split": "test_iter", "time_diff": 1.76311237}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:34][INFO] logging.py:   99: json_stats: {"cur_iter": "389", "eta": "1:11:15", "split": "test_iter", "time_diff": 21.59128513}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:35][INFO] logging.py:   99: json_stats: {"cur_iter": "390", "eta": "0:05:33", "split": "test_iter", "time_diff": 1.69044348}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:37][INFO] logging.py:   99: json_stats: {"cur_iter": "391", "eta": "0:05:31", "split": "test_iter", "time_diff": 1.69351743}
exponential temporal pooling in test
alpha:0.3
[12/16 18:08:39][INFO] logging.py:   99: json_stats: {"cur_iter": "392", "eta": "0:05:29", "split": "test_iter", "time_diff": 1.69026572}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:03][INFO] logging.py:   99: json_stats: {"cur_iter": "393", "eta": "1:19:45", "split": "test_iter", "time_diff": 24.66980942}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:05][INFO] logging.py:   99: json_stats: {"cur_iter": "394", "eta": "0:05:29", "split": "test_iter", "time_diff": 1.70621837}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:07][INFO] logging.py:   99: json_stats: {"cur_iter": "395", "eta": "0:05:25", "split": "test_iter", "time_diff": 1.69317387}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:08][INFO] logging.py:   99: json_stats: {"cur_iter": "396", "eta": "0:05:26", "split": "test_iter", "time_diff": 1.70712241}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:31][INFO] logging.py:   99: json_stats: {"cur_iter": "397", "eta": "1:11:06", "split": "test_iter", "time_diff": 22.45293644}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:33][INFO] logging.py:   99: json_stats: {"cur_iter": "398", "eta": "0:05:20", "split": "test_iter", "time_diff": 1.69726584}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:34][INFO] logging.py:   99: json_stats: {"cur_iter": "399", "eta": "0:05:17", "split": "test_iter", "time_diff": 1.68953695}
exponential temporal pooling in test
alpha:0.3
[12/16 18:09:36][INFO] logging.py:   99: json_stats: {"cur_iter": "400", "eta": "0:05:17", "split": "test_iter", "time_diff": 1.69649156}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:01][INFO] logging.py:   99: json_stats: {"cur_iter": "401", "eta": "1:16:11", "split": "test_iter", "time_diff": 24.57573979}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:02][INFO] logging.py:   99: json_stats: {"cur_iter": "402", "eta": "0:05:12", "split": "test_iter", "time_diff": 1.69157874}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:04][INFO] logging.py:   99: json_stats: {"cur_iter": "403", "eta": "0:05:11", "split": "test_iter", "time_diff": 1.69419931}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:06][INFO] logging.py:   99: json_stats: {"cur_iter": "404", "eta": "0:05:12", "split": "test_iter", "time_diff": 1.70637260}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:30][INFO] logging.py:   99: json_stats: {"cur_iter": "405", "eta": "1:14:52", "split": "test_iter", "time_diff": 24.68547848}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:32][INFO] logging.py:   99: json_stats: {"cur_iter": "406", "eta": "0:05:07", "split": "test_iter", "time_diff": 1.69808425}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:34][INFO] logging.py:   99: json_stats: {"cur_iter": "407", "eta": "0:05:05", "split": "test_iter", "time_diff": 1.69817805}
exponential temporal pooling in test
alpha:0.3
[12/16 18:10:35][INFO] logging.py:   99: json_stats: {"cur_iter": "408", "eta": "0:05:03", "split": "test_iter", "time_diff": 1.69488844}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:02][INFO] logging.py:   99: json_stats: {"cur_iter": "409", "eta": "1:18:02", "split": "test_iter", "time_diff": 26.30339937}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:04][INFO] logging.py:   99: json_stats: {"cur_iter": "410", "eta": "0:05:01", "split": "test_iter", "time_diff": 1.70095025}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:05][INFO] logging.py:   99: json_stats: {"cur_iter": "411", "eta": "0:05:00", "split": "test_iter", "time_diff": 1.70631618}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:07][INFO] logging.py:   99: json_stats: {"cur_iter": "412", "eta": "0:04:56", "split": "test_iter", "time_diff": 1.69613365}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:34][INFO] logging.py:   99: json_stats: {"cur_iter": "413", "eta": "1:17:09", "split": "test_iter", "time_diff": 26.60716507}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:35][INFO] logging.py:   99: json_stats: {"cur_iter": "414", "eta": "0:04:52", "split": "test_iter", "time_diff": 1.69177716}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:37][INFO] logging.py:   99: json_stats: {"cur_iter": "415", "eta": "0:04:53", "split": "test_iter", "time_diff": 1.70746081}
exponential temporal pooling in test
alpha:0.3
[12/16 18:11:39][INFO] logging.py:   99: json_stats: {"cur_iter": "416", "eta": "0:04:52", "split": "test_iter", "time_diff": 1.70783215}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:05][INFO] logging.py:   99: json_stats: {"cur_iter": "417", "eta": "1:14:39", "split": "test_iter", "time_diff": 26.35253307}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:07][INFO] logging.py:   99: json_stats: {"cur_iter": "418", "eta": "0:04:47", "split": "test_iter", "time_diff": 1.69916482}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:08][INFO] logging.py:   99: json_stats: {"cur_iter": "419", "eta": "0:04:45", "split": "test_iter", "time_diff": 1.70019117}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:10][INFO] logging.py:   99: json_stats: {"cur_iter": "420", "eta": "0:04:44", "split": "test_iter", "time_diff": 1.70201935}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:36][INFO] logging.py:   99: json_stats: {"cur_iter": "421", "eta": "1:10:35", "split": "test_iter", "time_diff": 25.51434209}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:37][INFO] logging.py:   99: json_stats: {"cur_iter": "422", "eta": "0:04:41", "split": "test_iter", "time_diff": 1.70828619}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:39][INFO] logging.py:   99: json_stats: {"cur_iter": "423", "eta": "0:04:39", "split": "test_iter", "time_diff": 1.70481101}
exponential temporal pooling in test
alpha:0.3
[12/16 18:12:41][INFO] logging.py:   99: json_stats: {"cur_iter": "424", "eta": "0:04:37", "split": "test_iter", "time_diff": 1.70422912}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:08][INFO] logging.py:   99: json_stats: {"cur_iter": "425", "eta": "1:14:18", "split": "test_iter", "time_diff": 27.52406048}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:10][INFO] logging.py:   99: json_stats: {"cur_iter": "426", "eta": "0:04:32", "split": "test_iter", "time_diff": 1.69339889}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:12][INFO] logging.py:   99: json_stats: {"cur_iter": "427", "eta": "0:04:30", "split": "test_iter", "time_diff": 1.69066005}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:13][INFO] logging.py:   99: json_stats: {"cur_iter": "428", "eta": "0:04:29", "split": "test_iter", "time_diff": 1.69489214}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:39][INFO] logging.py:   99: json_stats: {"cur_iter": "429", "eta": "1:07:24", "split": "test_iter", "time_diff": 25.60009098}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:41][INFO] logging.py:   99: json_stats: {"cur_iter": "430", "eta": "0:04:26", "split": "test_iter", "time_diff": 1.69539357}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:42][INFO] logging.py:   99: json_stats: {"cur_iter": "431", "eta": "0:04:24", "split": "test_iter", "time_diff": 1.69653499}
exponential temporal pooling in test
alpha:0.3
[12/16 18:13:44][INFO] logging.py:   99: json_stats: {"cur_iter": "432", "eta": "0:04:24", "split": "test_iter", "time_diff": 1.70635513}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:12][INFO] logging.py:   99: json_stats: {"cur_iter": "433", "eta": "1:12:27", "split": "test_iter", "time_diff": 28.23345101}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:14][INFO] logging.py:   99: json_stats: {"cur_iter": "434", "eta": "0:04:21", "split": "test_iter", "time_diff": 1.70731817}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:16][INFO] logging.py:   99: json_stats: {"cur_iter": "435", "eta": "0:04:18", "split": "test_iter", "time_diff": 1.70211615}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:17][INFO] logging.py:   99: json_stats: {"cur_iter": "436", "eta": "0:04:15", "split": "test_iter", "time_diff": 1.69535640}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:41][INFO] logging.py:   99: json_stats: {"cur_iter": "437", "eta": "0:59:39", "split": "test_iter", "time_diff": 23.86197732}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:43][INFO] logging.py:   99: json_stats: {"cur_iter": "438", "eta": "0:04:13", "split": "test_iter", "time_diff": 1.69864598}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:45][INFO] logging.py:   99: json_stats: {"cur_iter": "439", "eta": "0:04:12", "split": "test_iter", "time_diff": 1.70436679}
exponential temporal pooling in test
alpha:0.3
[12/16 18:14:46][INFO] logging.py:   99: json_stats: {"cur_iter": "440", "eta": "0:04:10", "split": "test_iter", "time_diff": 1.70323807}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:11][INFO] logging.py:   99: json_stats: {"cur_iter": "441", "eta": "1:00:14", "split": "test_iter", "time_diff": 24.75539017}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:13][INFO] logging.py:   99: json_stats: {"cur_iter": "442", "eta": "0:04:06", "split": "test_iter", "time_diff": 1.70269835}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:15][INFO] logging.py:   99: json_stats: {"cur_iter": "443", "eta": "0:04:03", "split": "test_iter", "time_diff": 1.69100906}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:16][INFO] logging.py:   99: json_stats: {"cur_iter": "444", "eta": "0:04:03", "split": "test_iter", "time_diff": 1.69944036}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:40][INFO] logging.py:   99: json_stats: {"cur_iter": "445", "eta": "0:55:01", "split": "test_iter", "time_diff": 23.24987681}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:41][INFO] logging.py:   99: json_stats: {"cur_iter": "446", "eta": "0:03:59", "split": "test_iter", "time_diff": 1.70192820}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:43][INFO] logging.py:   99: json_stats: {"cur_iter": "447", "eta": "0:03:58", "split": "test_iter", "time_diff": 1.70646188}
exponential temporal pooling in test
alpha:0.3
[12/16 18:15:45][INFO] logging.py:   99: json_stats: {"cur_iter": "448", "eta": "0:03:55", "split": "test_iter", "time_diff": 1.69285298}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:09][INFO] logging.py:   99: json_stats: {"cur_iter": "449", "eta": "0:55:45", "split": "test_iter", "time_diff": 24.24109127}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:11][INFO] logging.py:   99: json_stats: {"cur_iter": "450", "eta": "0:03:52", "split": "test_iter", "time_diff": 1.69785751}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:12][INFO] logging.py:   99: json_stats: {"cur_iter": "451", "eta": "0:03:52", "split": "test_iter", "time_diff": 1.70654617}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:14][INFO] logging.py:   99: json_stats: {"cur_iter": "452", "eta": "0:03:49", "split": "test_iter", "time_diff": 1.70205070}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:41][INFO] logging.py:   99: json_stats: {"cur_iter": "453", "eta": "0:59:21", "split": "test_iter", "time_diff": 26.57821691}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:42][INFO] logging.py:   99: json_stats: {"cur_iter": "454", "eta": "0:03:46", "split": "test_iter", "time_diff": 1.70301958}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:44][INFO] logging.py:   99: json_stats: {"cur_iter": "455", "eta": "0:03:43", "split": "test_iter", "time_diff": 1.68968596}
exponential temporal pooling in test
alpha:0.3
[12/16 18:16:46][INFO] logging.py:   99: json_stats: {"cur_iter": "456", "eta": "0:03:42", "split": "test_iter", "time_diff": 1.69944293}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:11][INFO] logging.py:   99: json_stats: {"cur_iter": "457", "eta": "0:53:57", "split": "test_iter", "time_diff": 24.90427426}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:12][INFO] logging.py:   99: json_stats: {"cur_iter": "458", "eta": "0:03:38", "split": "test_iter", "time_diff": 1.69161611}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:14][INFO] logging.py:   99: json_stats: {"cur_iter": "459", "eta": "0:03:37", "split": "test_iter", "time_diff": 1.69691710}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:16][INFO] logging.py:   99: json_stats: {"cur_iter": "460", "eta": "0:03:34", "split": "test_iter", "time_diff": 1.69268076}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:43][INFO] logging.py:   99: json_stats: {"cur_iter": "461", "eta": "0:57:23", "split": "test_iter", "time_diff": 27.32616433}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:45][INFO] logging.py:   99: json_stats: {"cur_iter": "462", "eta": "0:03:31", "split": "test_iter", "time_diff": 1.69153621}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:46][INFO] logging.py:   99: json_stats: {"cur_iter": "463", "eta": "0:03:32", "split": "test_iter", "time_diff": 1.71582494}
exponential temporal pooling in test
alpha:0.3
[12/16 18:17:48][INFO] logging.py:   99: json_stats: {"cur_iter": "464", "eta": "0:03:29", "split": "test_iter", "time_diff": 1.70128395}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:12][INFO] logging.py:   99: json_stats: {"cur_iter": "465", "eta": "0:49:30", "split": "test_iter", "time_diff": 24.34657052}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:14][INFO] logging.py:   99: json_stats: {"cur_iter": "466", "eta": "0:03:25", "split": "test_iter", "time_diff": 1.69477715}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:16][INFO] logging.py:   99: json_stats: {"cur_iter": "467", "eta": "0:03:23", "split": "test_iter", "time_diff": 1.69693476}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:18][INFO] logging.py:   99: json_stats: {"cur_iter": "468", "eta": "0:03:21", "split": "test_iter", "time_diff": 1.69392204}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:43][INFO] logging.py:   99: json_stats: {"cur_iter": "469", "eta": "0:50:44", "split": "test_iter", "time_diff": 25.80104905}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:45][INFO] logging.py:   99: json_stats: {"cur_iter": "470", "eta": "0:03:17", "split": "test_iter", "time_diff": 1.69197828}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:47][INFO] logging.py:   99: json_stats: {"cur_iter": "471", "eta": "0:03:16", "split": "test_iter", "time_diff": 1.69085768}
exponential temporal pooling in test
alpha:0.3
[12/16 18:18:48][INFO] logging.py:   99: json_stats: {"cur_iter": "472", "eta": "0:03:14", "split": "test_iter", "time_diff": 1.69234862}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:15][INFO] logging.py:   99: json_stats: {"cur_iter": "473", "eta": "0:50:36", "split": "test_iter", "time_diff": 26.63419382}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:17][INFO] logging.py:   99: json_stats: {"cur_iter": "474", "eta": "0:03:12", "split": "test_iter", "time_diff": 1.70107476}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:18][INFO] logging.py:   99: json_stats: {"cur_iter": "475", "eta": "0:03:09", "split": "test_iter", "time_diff": 1.69184828}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:20][INFO] logging.py:   99: json_stats: {"cur_iter": "476", "eta": "0:03:08", "split": "test_iter", "time_diff": 1.69962800}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:45][INFO] logging.py:   99: json_stats: {"cur_iter": "477", "eta": "0:45:28", "split": "test_iter", "time_diff": 24.80220017}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:47][INFO] logging.py:   99: json_stats: {"cur_iter": "478", "eta": "0:03:05", "split": "test_iter", "time_diff": 1.70043744}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:48][INFO] logging.py:   99: json_stats: {"cur_iter": "479", "eta": "0:03:03", "split": "test_iter", "time_diff": 1.70152499}
exponential temporal pooling in test
alpha:0.3
[12/16 18:19:50][INFO] logging.py:   99: json_stats: {"cur_iter": "480", "eta": "0:03:02", "split": "test_iter", "time_diff": 1.70997052}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:16][INFO] logging.py:   99: json_stats: {"cur_iter": "481", "eta": "0:46:00", "split": "test_iter", "time_diff": 26.04711588}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:18][INFO] logging.py:   99: json_stats: {"cur_iter": "482", "eta": "0:02:57", "split": "test_iter", "time_diff": 1.69183958}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:20][INFO] logging.py:   99: json_stats: {"cur_iter": "483", "eta": "0:02:56", "split": "test_iter", "time_diff": 1.69275706}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:21][INFO] logging.py:   99: json_stats: {"cur_iter": "484", "eta": "0:02:54", "split": "test_iter", "time_diff": 1.69177286}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:47][INFO] logging.py:   99: json_stats: {"cur_iter": "485", "eta": "0:43:35", "split": "test_iter", "time_diff": 25.64232184}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:49][INFO] logging.py:   99: json_stats: {"cur_iter": "486", "eta": "0:02:52", "split": "test_iter", "time_diff": 1.70384732}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:50][INFO] logging.py:   99: json_stats: {"cur_iter": "487", "eta": "0:02:50", "split": "test_iter", "time_diff": 1.70287854}
exponential temporal pooling in test
alpha:0.3
[12/16 18:20:52][INFO] logging.py:   99: json_stats: {"cur_iter": "488", "eta": "0:02:47", "split": "test_iter", "time_diff": 1.69366346}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:15][INFO] logging.py:   99: json_stats: {"cur_iter": "489", "eta": "0:38:13", "split": "test_iter", "time_diff": 23.39821557}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:17][INFO] logging.py:   99: json_stats: {"cur_iter": "490", "eta": "0:02:45", "split": "test_iter", "time_diff": 1.70953034}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:19][INFO] logging.py:   99: json_stats: {"cur_iter": "491", "eta": "0:02:50", "split": "test_iter", "time_diff": 1.77525075}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:21][INFO] logging.py:   99: json_stats: {"cur_iter": "492", "eta": "0:02:40", "split": "test_iter", "time_diff": 1.69135630}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:46][INFO] logging.py:   99: json_stats: {"cur_iter": "493", "eta": "0:39:42", "split": "test_iter", "time_diff": 25.34942802}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:48][INFO] logging.py:   99: json_stats: {"cur_iter": "494", "eta": "0:02:37", "split": "test_iter", "time_diff": 1.69230055}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:49][INFO] logging.py:   99: json_stats: {"cur_iter": "495", "eta": "0:02:36", "split": "test_iter", "time_diff": 1.69907890}
exponential temporal pooling in test
alpha:0.3
[12/16 18:21:51][INFO] logging.py:   99: json_stats: {"cur_iter": "496", "eta": "0:02:34", "split": "test_iter", "time_diff": 1.69382171}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:15][INFO] logging.py:   99: json_stats: {"cur_iter": "497", "eta": "0:36:13", "split": "test_iter", "time_diff": 24.14753732}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:17][INFO] logging.py:   99: json_stats: {"cur_iter": "498", "eta": "0:02:31", "split": "test_iter", "time_diff": 1.70653686}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:19][INFO] logging.py:   99: json_stats: {"cur_iter": "499", "eta": "0:02:36", "split": "test_iter", "time_diff": 1.78095479}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:20][INFO] logging.py:   99: json_stats: {"cur_iter": "500", "eta": "0:02:27", "split": "test_iter", "time_diff": 1.69890185}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:47][INFO] logging.py:   99: json_stats: {"cur_iter": "501", "eta": "0:38:03", "split": "test_iter", "time_diff": 26.55100376}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:49][INFO] logging.py:   99: json_stats: {"cur_iter": "502", "eta": "0:02:23", "split": "test_iter", "time_diff": 1.69154298}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:50][INFO] logging.py:   99: json_stats: {"cur_iter": "503", "eta": "0:02:22", "split": "test_iter", "time_diff": 1.69189561}
exponential temporal pooling in test
alpha:0.3
[12/16 18:22:52][INFO] logging.py:   99: json_stats: {"cur_iter": "504", "eta": "0:02:20", "split": "test_iter", "time_diff": 1.69164882}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:16][INFO] logging.py:   99: json_stats: {"cur_iter": "505", "eta": "0:32:56", "split": "test_iter", "time_diff": 24.09831845}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:18][INFO] logging.py:   99: json_stats: {"cur_iter": "506", "eta": "0:02:17", "split": "test_iter", "time_diff": 1.69214420}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:20][INFO] logging.py:   99: json_stats: {"cur_iter": "507", "eta": "0:02:15", "split": "test_iter", "time_diff": 1.68879093}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:21][INFO] logging.py:   99: json_stats: {"cur_iter": "508", "eta": "0:02:14", "split": "test_iter", "time_diff": 1.70375893}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:45][INFO] logging.py:   99: json_stats: {"cur_iter": "509", "eta": "0:31:18", "split": "test_iter", "time_diff": 24.07956118}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:47][INFO] logging.py:   99: json_stats: {"cur_iter": "510", "eta": "0:02:10", "split": "test_iter", "time_diff": 1.70116993}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:49][INFO] logging.py:   99: json_stats: {"cur_iter": "511", "eta": "0:02:15", "split": "test_iter", "time_diff": 1.78618849}
exponential temporal pooling in test
alpha:0.3
[12/16 18:23:51][INFO] logging.py:   99: json_stats: {"cur_iter": "512", "eta": "0:02:07", "split": "test_iter", "time_diff": 1.69519962}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:17][INFO] logging.py:   99: json_stats: {"cur_iter": "513", "eta": "0:33:00", "split": "test_iter", "time_diff": 26.76248711}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:19][INFO] logging.py:   99: json_stats: {"cur_iter": "514", "eta": "0:02:04", "split": "test_iter", "time_diff": 1.70067419}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:21][INFO] logging.py:   99: json_stats: {"cur_iter": "515", "eta": "0:02:02", "split": "test_iter", "time_diff": 1.70523891}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:22][INFO] logging.py:   99: json_stats: {"cur_iter": "516", "eta": "0:02:00", "split": "test_iter", "time_diff": 1.69895802}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:47][INFO] logging.py:   99: json_stats: {"cur_iter": "517", "eta": "0:29:13", "split": "test_iter", "time_diff": 25.04615646}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:49][INFO] logging.py:   99: json_stats: {"cur_iter": "518", "eta": "0:01:56", "split": "test_iter", "time_diff": 1.69269362}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:51][INFO] logging.py:   99: json_stats: {"cur_iter": "519", "eta": "0:01:54", "split": "test_iter", "time_diff": 1.68998784}
exponential temporal pooling in test
alpha:0.3
[12/16 18:24:53][INFO] logging.py:   99: json_stats: {"cur_iter": "520", "eta": "0:01:53", "split": "test_iter", "time_diff": 1.69850242}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:18][INFO] logging.py:   99: json_stats: {"cur_iter": "521", "eta": "0:28:00", "split": "test_iter", "time_diff": 25.46600785}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:20][INFO] logging.py:   99: json_stats: {"cur_iter": "522", "eta": "0:01:49", "split": "test_iter", "time_diff": 1.69067878}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:21][INFO] logging.py:   99: json_stats: {"cur_iter": "523", "eta": "0:01:48", "split": "test_iter", "time_diff": 1.70061494}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:23][INFO] logging.py:   99: json_stats: {"cur_iter": "524", "eta": "0:01:46", "split": "test_iter", "time_diff": 1.69793160}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:49][INFO] logging.py:   99: json_stats: {"cur_iter": "525", "eta": "0:27:10", "split": "test_iter", "time_diff": 26.29376044}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:51][INFO] logging.py:   99: json_stats: {"cur_iter": "526", "eta": "0:01:43", "split": "test_iter", "time_diff": 1.69689814}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:53][INFO] logging.py:   99: json_stats: {"cur_iter": "527", "eta": "0:01:42", "split": "test_iter", "time_diff": 1.71062686}
exponential temporal pooling in test
alpha:0.3
[12/16 18:25:55][INFO] logging.py:   99: json_stats: {"cur_iter": "528", "eta": "0:01:39", "split": "test_iter", "time_diff": 1.68982356}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:20][INFO] logging.py:   99: json_stats: {"cur_iter": "529", "eta": "0:24:15", "split": "test_iter", "time_diff": 25.09042190}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:21][INFO] logging.py:   99: json_stats: {"cur_iter": "530", "eta": "0:01:36", "split": "test_iter", "time_diff": 1.68964837}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:23][INFO] logging.py:   99: json_stats: {"cur_iter": "531", "eta": "0:01:34", "split": "test_iter", "time_diff": 1.69486259}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:25][INFO] logging.py:   99: json_stats: {"cur_iter": "532", "eta": "0:01:32", "split": "test_iter", "time_diff": 1.69018195}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:50][INFO] logging.py:   99: json_stats: {"cur_iter": "533", "eta": "0:22:26", "split": "test_iter", "time_diff": 24.93220045}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:51][INFO] logging.py:   99: json_stats: {"cur_iter": "534", "eta": "0:01:30", "split": "test_iter", "time_diff": 1.70122028}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:53][INFO] logging.py:   99: json_stats: {"cur_iter": "535", "eta": "0:01:28", "split": "test_iter", "time_diff": 1.69918560}
exponential temporal pooling in test
alpha:0.3
[12/16 18:26:55][INFO] logging.py:   99: json_stats: {"cur_iter": "536", "eta": "0:01:26", "split": "test_iter", "time_diff": 1.70306394}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:20][INFO] logging.py:   99: json_stats: {"cur_iter": "537", "eta": "0:20:42", "split": "test_iter", "time_diff": 24.85389999}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:21][INFO] logging.py:   99: json_stats: {"cur_iter": "538", "eta": "0:01:23", "split": "test_iter", "time_diff": 1.70243564}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:23][INFO] logging.py:   99: json_stats: {"cur_iter": "539", "eta": "0:01:22", "split": "test_iter", "time_diff": 1.70941382}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:25][INFO] logging.py:   99: json_stats: {"cur_iter": "540", "eta": "0:01:19", "split": "test_iter", "time_diff": 1.70162734}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:51][INFO] logging.py:   99: json_stats: {"cur_iter": "541", "eta": "0:20:07", "split": "test_iter", "time_diff": 26.25149834}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:53][INFO] logging.py:   99: json_stats: {"cur_iter": "542", "eta": "0:01:16", "split": "test_iter", "time_diff": 1.69194541}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:54][INFO] logging.py:   99: json_stats: {"cur_iter": "543", "eta": "0:01:14", "split": "test_iter", "time_diff": 1.69775647}
exponential temporal pooling in test
alpha:0.3
[12/16 18:27:56][INFO] logging.py:   99: json_stats: {"cur_iter": "544", "eta": "0:01:13", "split": "test_iter", "time_diff": 1.70607879}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:21][INFO] logging.py:   99: json_stats: {"cur_iter": "545", "eta": "0:17:35", "split": "test_iter", "time_diff": 25.11906321}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:23][INFO] logging.py:   99: json_stats: {"cur_iter": "546", "eta": "0:01:09", "split": "test_iter", "time_diff": 1.69386453}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:25][INFO] logging.py:   99: json_stats: {"cur_iter": "547", "eta": "0:01:07", "split": "test_iter", "time_diff": 1.69670279}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:26][INFO] logging.py:   99: json_stats: {"cur_iter": "548", "eta": "0:01:06", "split": "test_iter", "time_diff": 1.70198711}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:53][INFO] logging.py:   99: json_stats: {"cur_iter": "549", "eta": "0:17:07", "split": "test_iter", "time_diff": 27.04229032}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:55][INFO] logging.py:   99: json_stats: {"cur_iter": "550", "eta": "0:01:02", "split": "test_iter", "time_diff": 1.69634588}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:57][INFO] logging.py:   99: json_stats: {"cur_iter": "551", "eta": "0:01:01", "split": "test_iter", "time_diff": 1.69600066}
exponential temporal pooling in test
alpha:0.3
[12/16 18:28:58][INFO] logging.py:   99: json_stats: {"cur_iter": "552", "eta": "0:00:59", "split": "test_iter", "time_diff": 1.70282700}
exponential temporal pooling in test
alpha:0.3
[12/16 18:29:24][INFO] logging.py:   99: json_stats: {"cur_iter": "553", "eta": "0:14:28", "split": "test_iter", "time_diff": 25.54479521}
exponential temporal pooling in test
alpha:0.3
[12/16 18:29:26][INFO] logging.py:   99: json_stats: {"cur_iter": "554", "eta": "0:00:55", "split": "test_iter", "time_diff": 1.68832248}
exponential temporal pooling in test
alpha:0.3
[12/16 18:29:27][INFO] logging.py:   99: json_stats: {"cur_iter": "555", "eta": "0:00:54", "split": "test_iter", "time_diff": 1.70011245}
exponential temporal pooling in test
alpha:0.3
[12/16 18:29:29][INFO] logging.py:   99: json_stats: {"cur_iter": "556", "eta": "0:00:52", "split": "test_iter", "time_diff": 1.69270361}
exponential temporal pooling in test
alpha:0.3
[12/16 18:29:56][INFO] logging.py:   99: json_stats: {"cur_iter": "557", "eta": "0:13:38", "split": "test_iter", "time_diff": 27.28830394}
exponential temporal pooling in test
alpha:0.3
[12/16 18:29:58][INFO] logging.py:   99: json_stats: {"cur_iter": "558", "eta": "0:00:49", "split": "test_iter", "time_diff": 1.69902322}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:00][INFO] logging.py:   99: json_stats: {"cur_iter": "559", "eta": "0:00:47", "split": "test_iter", "time_diff": 1.69516884}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:01][INFO] logging.py:   99: json_stats: {"cur_iter": "560", "eta": "0:00:45", "split": "test_iter", "time_diff": 1.69345662}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:26][INFO] logging.py:   99: json_stats: {"cur_iter": "561", "eta": "0:10:50", "split": "test_iter", "time_diff": 25.00024085}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:28][INFO] logging.py:   99: json_stats: {"cur_iter": "562", "eta": "0:00:45", "split": "test_iter", "time_diff": 1.82497056}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:30][INFO] logging.py:   99: json_stats: {"cur_iter": "563", "eta": "0:00:40", "split": "test_iter", "time_diff": 1.69738411}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:32][INFO] logging.py:   99: json_stats: {"cur_iter": "564", "eta": "0:00:38", "split": "test_iter", "time_diff": 1.69255505}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:58][INFO] logging.py:   99: json_stats: {"cur_iter": "565", "eta": "0:09:28", "split": "test_iter", "time_diff": 25.84401281}
exponential temporal pooling in test
alpha:0.3
[12/16 18:30:59][INFO] logging.py:   99: json_stats: {"cur_iter": "566", "eta": "0:00:35", "split": "test_iter", "time_diff": 1.69075071}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:01][INFO] logging.py:   99: json_stats: {"cur_iter": "567", "eta": "0:00:33", "split": "test_iter", "time_diff": 1.69245509}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:03][INFO] logging.py:   99: json_stats: {"cur_iter": "568", "eta": "0:00:32", "split": "test_iter", "time_diff": 1.69184616}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:29][INFO] logging.py:   99: json_stats: {"cur_iter": "569", "eta": "0:07:47", "split": "test_iter", "time_diff": 25.97143721}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:30][INFO] logging.py:   99: json_stats: {"cur_iter": "570", "eta": "0:00:28", "split": "test_iter", "time_diff": 1.69353744}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:32][INFO] logging.py:   99: json_stats: {"cur_iter": "571", "eta": "0:00:27", "split": "test_iter", "time_diff": 1.70619872}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:34][INFO] logging.py:   99: json_stats: {"cur_iter": "572", "eta": "0:00:25", "split": "test_iter", "time_diff": 1.70271885}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:58][INFO] logging.py:   99: json_stats: {"cur_iter": "573", "eta": "0:05:36", "split": "test_iter", "time_diff": 24.03573740}
exponential temporal pooling in test
alpha:0.3
[12/16 18:31:59][INFO] logging.py:   99: json_stats: {"cur_iter": "574", "eta": "0:00:21", "split": "test_iter", "time_diff": 1.68795140}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:01][INFO] logging.py:   99: json_stats: {"cur_iter": "575", "eta": "0:00:20", "split": "test_iter", "time_diff": 1.69773641}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:03][INFO] logging.py:   99: json_stats: {"cur_iter": "576", "eta": "0:00:18", "split": "test_iter", "time_diff": 1.69424008}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:27][INFO] logging.py:   99: json_stats: {"cur_iter": "577", "eta": "0:03:56", "split": "test_iter", "time_diff": 23.66615127}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:28][INFO] logging.py:   99: json_stats: {"cur_iter": "578", "eta": "0:00:15", "split": "test_iter", "time_diff": 1.70207241}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:30][INFO] logging.py:   99: json_stats: {"cur_iter": "579", "eta": "0:00:13", "split": "test_iter", "time_diff": 1.70610791}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:32][INFO] logging.py:   99: json_stats: {"cur_iter": "580", "eta": "0:00:11", "split": "test_iter", "time_diff": 1.69323519}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:49][INFO] logging.py:   99: json_stats: {"cur_iter": "581", "eta": "0:01:47", "split": "test_iter", "time_diff": 17.84458636}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:51][INFO] logging.py:   99: json_stats: {"cur_iter": "582", "eta": "0:00:08", "split": "test_iter", "time_diff": 1.70192362}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:53][INFO] logging.py:   99: json_stats: {"cur_iter": "583", "eta": "0:00:06", "split": "test_iter", "time_diff": 1.69701922}
exponential temporal pooling in test
alpha:0.3
[12/16 18:32:55][INFO] logging.py:   99: json_stats: {"cur_iter": "584", "eta": "0:00:05", "split": "test_iter", "time_diff": 1.69575019}
exponential temporal pooling in test
alpha:0.3
[12/16 18:33:08][INFO] logging.py:   99: json_stats: {"cur_iter": "585", "eta": "0:00:27", "split": "test_iter", "time_diff": 13.59535190}
exponential temporal pooling in test
alpha:0.3
[12/16 18:33:09][INFO] logging.py:   99: json_stats: {"cur_iter": "586", "eta": "0:00:00", "split": "test_iter", "time_diff": 0.95498303}
[12/16 18:33:17][INFO] test_net.py:  234: Successfully saved prediction results to /mnt/SSD8T/home/huangwei/projects/FROSTER/checkpoints/basetraining/B2N_ssv2_froster/testing/temp.pyth
[12/16 18:33:17][INFO] logging.py:   99: json_stats: {"split": "test_final", "top1_acc": "18.31", "top5_acc": "43.96"}
[12/16 18:33:17][INFO] test_net.py:  474: Finalized testing with 3 temporal clips and 1 spatial crops
[12/16 18:33:17][INFO] test_net.py:  496: _p150.67_f10.00_3a18.31 Top5 Acc: 43.96 MEM: 16.99 f: 10.0000
[12/16 18:33:17][INFO] test_net.py:  497: _p150.67_f10.00_3a18.31
